/**
 * generated by Xtext 2.22.0
 */
package com.github.toerob.inform6.util;

import com.github.toerob.inform6.AbstractArray;
import com.github.toerob.inform6.AbstractProperty;
import com.github.toerob.inform6.ArrayDeclaration;
import com.github.toerob.inform6.ArrayType;
import com.github.toerob.inform6.Attribute;
import com.github.toerob.inform6.AttributeDeclaration;
import com.github.toerob.inform6.AttributeSection;
import com.github.toerob.inform6.BYTE_ARRAY;
import com.github.toerob.inform6.ClassDeclaration;
import com.github.toerob.inform6.ClassSection;
import com.github.toerob.inform6.CommentDeclaration;
import com.github.toerob.inform6.CompilerDirective;
import com.github.toerob.inform6.Directive;
import com.github.toerob.inform6.Expression;
import com.github.toerob.inform6.FunctionHeader;
import com.github.toerob.inform6.GlobalConstantDeclaration;
import com.github.toerob.inform6.GlobalConstantValue;
import com.github.toerob.inform6.GlobalDeclaration;
import com.github.toerob.inform6.GlobalDefaultDeclaration;
import com.github.toerob.inform6.GlobalFunctionDefinition;
import com.github.toerob.inform6.IdlessObjectDeclaration;
import com.github.toerob.inform6.IncludeDeclaration;
import com.github.toerob.inform6.Inform6Package;
import com.github.toerob.inform6.MessageDirective;
import com.github.toerob.inform6.NearbyDeclaration;
import com.github.toerob.inform6.ObjectDeclaration;
import com.github.toerob.inform6.Primary;
import com.github.toerob.inform6.Program;
import com.github.toerob.inform6.Property;
import com.github.toerob.inform6.PropertyDirective;
import com.github.toerob.inform6.PropertySection;
import com.github.toerob.inform6.ReleaseDirective;
import com.github.toerob.inform6.ReplaceDirective;
import com.github.toerob.inform6.STRING_ARRAY;
import com.github.toerob.inform6.SerialDirective;
import com.github.toerob.inform6.SwitchesDeclaration;
import com.github.toerob.inform6.TABLE_ARRAY;
import com.github.toerob.inform6.VerbAssignment;
import com.github.toerob.inform6.VerbBody;
import com.github.toerob.inform6.VerbDeclaration;
import com.github.toerob.inform6.WORD_ARRAY;
import com.github.toerob.inform6.ZcharacterDirective;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.util.Switch;

/**
 * <!-- begin-user-doc -->
 * The <b>Switch</b> for the model's inheritance hierarchy.
 * It supports the call {@link #doSwitch(EObject) doSwitch(object)}
 * to invoke the <code>caseXXX</code> method for each class of the model,
 * starting with the actual class of the object
 * and proceeding up the inheritance hierarchy
 * until a non-null result is returned,
 * which is the result of the switch.
 * <!-- end-user-doc -->
 * @see com.github.toerob.inform6.Inform6Package
 * @generated
 */
public class Inform6Switch<T> extends Switch<T>
{
  /**
   * The cached model package
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected static Inform6Package modelPackage;

  /**
   * Creates an instance of the switch.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Inform6Switch()
  {
    if (modelPackage == null)
    {
      modelPackage = Inform6Package.eINSTANCE;
    }
  }

  /**
   * Checks whether this is a switch for the given package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param ePackage the package in question.
   * @return whether this is a switch for the given package.
   * @generated
   */
  @Override
  protected boolean isSwitchFor(EPackage ePackage)
  {
    return ePackage == modelPackage;
  }

  /**
   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the first non-null result returned by a <code>caseXXX</code> call.
   * @generated
   */
  @Override
  protected T doSwitch(int classifierID, EObject theEObject)
  {
    switch (classifierID)
    {
      case Inform6Package.PROGRAM:
      {
        Program program = (Program)theEObject;
        T result = caseProgram(program);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case Inform6Package.DIRECTIVE:
      {
        Directive directive = (Directive)theEObject;
        T result = caseDirective(directive);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case Inform6Package.MESSAGE_DIRECTIVE:
      {
        MessageDirective messageDirective = (MessageDirective)theEObject;
        T result = caseMessageDirective(messageDirective);
        if (result == null) result = caseDirective(messageDirective);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case Inform6Package.ZCHARACTER_DIRECTIVE:
      {
        ZcharacterDirective zcharacterDirective = (ZcharacterDirective)theEObject;
        T result = caseZcharacterDirective(zcharacterDirective);
        if (result == null) result = caseDirective(zcharacterDirective);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case Inform6Package.COMMENT_DECLARATION:
      {
        CommentDeclaration commentDeclaration = (CommentDeclaration)theEObject;
        T result = caseCommentDeclaration(commentDeclaration);
        if (result == null) result = caseDirective(commentDeclaration);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case Inform6Package.COMPILER_DIRECTIVE:
      {
        CompilerDirective compilerDirective = (CompilerDirective)theEObject;
        T result = caseCompilerDirective(compilerDirective);
        if (result == null) result = caseCommentDeclaration(compilerDirective);
        if (result == null) result = caseDirective(compilerDirective);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case Inform6Package.INCLUDE_DECLARATION:
      {
        IncludeDeclaration includeDeclaration = (IncludeDeclaration)theEObject;
        T result = caseIncludeDeclaration(includeDeclaration);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case Inform6Package.RELEASE_DIRECTIVE:
      {
        ReleaseDirective releaseDirective = (ReleaseDirective)theEObject;
        T result = caseReleaseDirective(releaseDirective);
        if (result == null) result = caseDirective(releaseDirective);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case Inform6Package.REPLACE_DIRECTIVE:
      {
        ReplaceDirective replaceDirective = (ReplaceDirective)theEObject;
        T result = caseReplaceDirective(replaceDirective);
        if (result == null) result = caseDirective(replaceDirective);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case Inform6Package.SERIAL_DIRECTIVE:
      {
        SerialDirective serialDirective = (SerialDirective)theEObject;
        T result = caseSerialDirective(serialDirective);
        if (result == null) result = caseDirective(serialDirective);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case Inform6Package.GLOBAL_CONSTANT_DECLARATION:
      {
        GlobalConstantDeclaration globalConstantDeclaration = (GlobalConstantDeclaration)theEObject;
        T result = caseGlobalConstantDeclaration(globalConstantDeclaration);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case Inform6Package.GLOBAL_DEFAULT_DECLARATION:
      {
        GlobalDefaultDeclaration globalDefaultDeclaration = (GlobalDefaultDeclaration)theEObject;
        T result = caseGlobalDefaultDeclaration(globalDefaultDeclaration);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case Inform6Package.SWITCHES_DECLARATION:
      {
        SwitchesDeclaration switchesDeclaration = (SwitchesDeclaration)theEObject;
        T result = caseSwitchesDeclaration(switchesDeclaration);
        if (result == null) result = caseDirective(switchesDeclaration);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case Inform6Package.GLOBAL_DECLARATION:
      {
        GlobalDeclaration globalDeclaration = (GlobalDeclaration)theEObject;
        T result = caseGlobalDeclaration(globalDeclaration);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case Inform6Package.GLOBAL_CONSTANT_VALUE:
      {
        GlobalConstantValue globalConstantValue = (GlobalConstantValue)theEObject;
        T result = caseGlobalConstantValue(globalConstantValue);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case Inform6Package.ATTRIBUTE_DECLARATION:
      {
        AttributeDeclaration attributeDeclaration = (AttributeDeclaration)theEObject;
        T result = caseAttributeDeclaration(attributeDeclaration);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case Inform6Package.PROPERTY_DIRECTIVE:
      {
        PropertyDirective propertyDirective = (PropertyDirective)theEObject;
        T result = casePropertyDirective(propertyDirective);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case Inform6Package.CLASS_DECLARATION:
      {
        ClassDeclaration classDeclaration = (ClassDeclaration)theEObject;
        T result = caseClassDeclaration(classDeclaration);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case Inform6Package.OBJECT_DECLARATION:
      {
        ObjectDeclaration objectDeclaration = (ObjectDeclaration)theEObject;
        T result = caseObjectDeclaration(objectDeclaration);
        if (result == null) result = caseIdlessObjectDeclaration(objectDeclaration);
        if (result == null) result = caseNearbyDeclaration(objectDeclaration);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case Inform6Package.IDLESS_OBJECT_DECLARATION:
      {
        IdlessObjectDeclaration idlessObjectDeclaration = (IdlessObjectDeclaration)theEObject;
        T result = caseIdlessObjectDeclaration(idlessObjectDeclaration);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case Inform6Package.NEARBY_DECLARATION:
      {
        NearbyDeclaration nearbyDeclaration = (NearbyDeclaration)theEObject;
        T result = caseNearbyDeclaration(nearbyDeclaration);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case Inform6Package.VERB_DECLARATION:
      {
        VerbDeclaration verbDeclaration = (VerbDeclaration)theEObject;
        T result = caseVerbDeclaration(verbDeclaration);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case Inform6Package.VERB_BODY:
      {
        VerbBody verbBody = (VerbBody)theEObject;
        T result = caseVerbBody(verbBody);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case Inform6Package.VERB_ASSIGNMENT:
      {
        VerbAssignment verbAssignment = (VerbAssignment)theEObject;
        T result = caseVerbAssignment(verbAssignment);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case Inform6Package.ARRAY_DECLARATION:
      {
        ArrayDeclaration arrayDeclaration = (ArrayDeclaration)theEObject;
        T result = caseArrayDeclaration(arrayDeclaration);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case Inform6Package.ARRAY_TYPE:
      {
        ArrayType arrayType = (ArrayType)theEObject;
        T result = caseArrayType(arrayType);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case Inform6Package.EXPRESSION:
      {
        Expression expression = (Expression)theEObject;
        T result = caseExpression(expression);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case Inform6Package.CLASS_SECTION:
      {
        ClassSection classSection = (ClassSection)theEObject;
        T result = caseClassSection(classSection);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case Inform6Package.PROPERTY_SECTION:
      {
        PropertySection propertySection = (PropertySection)theEObject;
        T result = casePropertySection(propertySection);
        if (result == null) result = caseClassSection(propertySection);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case Inform6Package.ATTRIBUTE_SECTION:
      {
        AttributeSection attributeSection = (AttributeSection)theEObject;
        T result = caseAttributeSection(attributeSection);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case Inform6Package.PROPERTY:
      {
        Property property = (Property)theEObject;
        T result = caseProperty(property);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case Inform6Package.ABSTRACT_ARRAY:
      {
        AbstractArray abstractArray = (AbstractArray)theEObject;
        T result = caseAbstractArray(abstractArray);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case Inform6Package.ABSTRACT_PROPERTY:
      {
        AbstractProperty abstractProperty = (AbstractProperty)theEObject;
        T result = caseAbstractProperty(abstractProperty);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case Inform6Package.GLOBAL_FUNCTION_DEFINITION:
      {
        GlobalFunctionDefinition globalFunctionDefinition = (GlobalFunctionDefinition)theEObject;
        T result = caseGlobalFunctionDefinition(globalFunctionDefinition);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case Inform6Package.FUNCTION_HEADER:
      {
        FunctionHeader functionHeader = (FunctionHeader)theEObject;
        T result = caseFunctionHeader(functionHeader);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case Inform6Package.PRIMARY:
      {
        Primary primary = (Primary)theEObject;
        T result = casePrimary(primary);
        if (result == null) result = caseVerbAssignment(primary);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case Inform6Package.NUMBER:
      {
        com.github.toerob.inform6.Number number = (com.github.toerob.inform6.Number)theEObject;
        T result = caseNumber(number);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case Inform6Package.ATTRIBUTE:
      {
        Attribute attribute = (Attribute)theEObject;
        T result = caseAttribute(attribute);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case Inform6Package.BYTE_ARRAY:
      {
        BYTE_ARRAY bytE_ARRAY = (BYTE_ARRAY)theEObject;
        T result = caseBYTE_ARRAY(bytE_ARRAY);
        if (result == null) result = caseArrayType(bytE_ARRAY);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case Inform6Package.WORD_ARRAY:
      {
        WORD_ARRAY worD_ARRAY = (WORD_ARRAY)theEObject;
        T result = caseWORD_ARRAY(worD_ARRAY);
        if (result == null) result = caseArrayType(worD_ARRAY);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case Inform6Package.TABLE_ARRAY:
      {
        TABLE_ARRAY tablE_ARRAY = (TABLE_ARRAY)theEObject;
        T result = caseTABLE_ARRAY(tablE_ARRAY);
        if (result == null) result = caseArrayType(tablE_ARRAY);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case Inform6Package.STRING_ARRAY:
      {
        STRING_ARRAY strinG_ARRAY = (STRING_ARRAY)theEObject;
        T result = caseSTRING_ARRAY(strinG_ARRAY);
        if (result == null) result = caseArrayType(strinG_ARRAY);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      default: return defaultCase(theEObject);
    }
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Program</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Program</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseProgram(Program object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Directive</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Directive</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDirective(Directive object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Message Directive</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Message Directive</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMessageDirective(MessageDirective object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Zcharacter Directive</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Zcharacter Directive</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseZcharacterDirective(ZcharacterDirective object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Comment Declaration</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Comment Declaration</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseCommentDeclaration(CommentDeclaration object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Compiler Directive</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Compiler Directive</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseCompilerDirective(CompilerDirective object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Include Declaration</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Include Declaration</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseIncludeDeclaration(IncludeDeclaration object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Release Directive</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Release Directive</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseReleaseDirective(ReleaseDirective object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Replace Directive</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Replace Directive</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseReplaceDirective(ReplaceDirective object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Serial Directive</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Serial Directive</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseSerialDirective(SerialDirective object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Global Constant Declaration</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Global Constant Declaration</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseGlobalConstantDeclaration(GlobalConstantDeclaration object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Global Default Declaration</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Global Default Declaration</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseGlobalDefaultDeclaration(GlobalDefaultDeclaration object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Switches Declaration</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Switches Declaration</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseSwitchesDeclaration(SwitchesDeclaration object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Global Declaration</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Global Declaration</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseGlobalDeclaration(GlobalDeclaration object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Global Constant Value</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Global Constant Value</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseGlobalConstantValue(GlobalConstantValue object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Attribute Declaration</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Attribute Declaration</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseAttributeDeclaration(AttributeDeclaration object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Property Directive</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Property Directive</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casePropertyDirective(PropertyDirective object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Class Declaration</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Class Declaration</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseClassDeclaration(ClassDeclaration object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Object Declaration</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Object Declaration</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseObjectDeclaration(ObjectDeclaration object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Idless Object Declaration</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Idless Object Declaration</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseIdlessObjectDeclaration(IdlessObjectDeclaration object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Nearby Declaration</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Nearby Declaration</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseNearbyDeclaration(NearbyDeclaration object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Verb Declaration</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Verb Declaration</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseVerbDeclaration(VerbDeclaration object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Verb Body</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Verb Body</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseVerbBody(VerbBody object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Verb Assignment</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Verb Assignment</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseVerbAssignment(VerbAssignment object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Array Declaration</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Array Declaration</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseArrayDeclaration(ArrayDeclaration object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Array Type</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Array Type</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseArrayType(ArrayType object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Expression</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Expression</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseExpression(Expression object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Class Section</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Class Section</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseClassSection(ClassSection object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Property Section</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Property Section</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casePropertySection(PropertySection object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Attribute Section</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Attribute Section</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseAttributeSection(AttributeSection object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Property</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Property</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseProperty(Property object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Abstract Array</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Abstract Array</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseAbstractArray(AbstractArray object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Abstract Property</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Abstract Property</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseAbstractProperty(AbstractProperty object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Global Function Definition</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Global Function Definition</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseGlobalFunctionDefinition(GlobalFunctionDefinition object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Function Header</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Function Header</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseFunctionHeader(FunctionHeader object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Primary</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Primary</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casePrimary(Primary object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Number</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Number</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseNumber(com.github.toerob.inform6.Number object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Attribute</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Attribute</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseAttribute(Attribute object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>BYTE ARRAY</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>BYTE ARRAY</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseBYTE_ARRAY(BYTE_ARRAY object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>WORD ARRAY</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>WORD ARRAY</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseWORD_ARRAY(WORD_ARRAY object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>TABLE ARRAY</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>TABLE ARRAY</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseTABLE_ARRAY(TABLE_ARRAY object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>STRING ARRAY</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>STRING ARRAY</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseSTRING_ARRAY(STRING_ARRAY object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EObject</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch, but this is the last case anyway.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EObject</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject)
   * @generated
   */
  @Override
  public T defaultCase(EObject object)
  {
    return null;
  }

} //Inform6Switch
