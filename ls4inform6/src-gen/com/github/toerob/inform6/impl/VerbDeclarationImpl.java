/**
 * generated by Xtext 2.22.0
 */
package com.github.toerob.inform6.impl;

import com.github.toerob.inform6.Inform6Package;
import com.github.toerob.inform6.VerbBody;
import com.github.toerob.inform6.VerbDeclaration;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EDataTypeEList;
import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Verb Declaration</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link com.github.toerob.inform6.impl.VerbDeclarationImpl#getName <em>Name</em>}</li>
 *   <li>{@link com.github.toerob.inform6.impl.VerbDeclarationImpl#getMeta <em>Meta</em>}</li>
 *   <li>{@link com.github.toerob.inform6.impl.VerbDeclarationImpl#getSyn <em>Syn</em>}</li>
 *   <li>{@link com.github.toerob.inform6.impl.VerbDeclarationImpl#getDefintions <em>Defintions</em>}</li>
 *   <li>{@link com.github.toerob.inform6.impl.VerbDeclarationImpl#getOnly <em>Only</em>}</li>
 * </ul>
 *
 * @generated
 */
public class VerbDeclarationImpl extends MinimalEObjectImpl.Container implements VerbDeclaration
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The default value of the '{@link #getMeta() <em>Meta</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMeta()
   * @generated
   * @ordered
   */
  protected static final String META_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getMeta() <em>Meta</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMeta()
   * @generated
   * @ordered
   */
  protected String meta = META_EDEFAULT;

  /**
   * The cached value of the '{@link #getSyn() <em>Syn</em>}' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSyn()
   * @generated
   * @ordered
   */
  protected EList<String> syn;

  /**
   * The cached value of the '{@link #getDefintions() <em>Defintions</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDefintions()
   * @generated
   * @ordered
   */
  protected EList<VerbBody> defintions;

  /**
   * The default value of the '{@link #getOnly() <em>Only</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOnly()
   * @generated
   * @ordered
   */
  protected static final String ONLY_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getOnly() <em>Only</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOnly()
   * @generated
   * @ordered
   */
  protected String only = ONLY_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected VerbDeclarationImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return Inform6Package.Literals.VERB_DECLARATION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, Inform6Package.VERB_DECLARATION__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getMeta()
  {
    return meta;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setMeta(String newMeta)
  {
    String oldMeta = meta;
    meta = newMeta;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, Inform6Package.VERB_DECLARATION__META, oldMeta, meta));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<String> getSyn()
  {
    if (syn == null)
    {
      syn = new EDataTypeEList<String>(String.class, this, Inform6Package.VERB_DECLARATION__SYN);
    }
    return syn;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<VerbBody> getDefintions()
  {
    if (defintions == null)
    {
      defintions = new EObjectContainmentEList<VerbBody>(VerbBody.class, this, Inform6Package.VERB_DECLARATION__DEFINTIONS);
    }
    return defintions;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getOnly()
  {
    return only;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setOnly(String newOnly)
  {
    String oldOnly = only;
    only = newOnly;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, Inform6Package.VERB_DECLARATION__ONLY, oldOnly, only));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case Inform6Package.VERB_DECLARATION__DEFINTIONS:
        return ((InternalEList<?>)getDefintions()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case Inform6Package.VERB_DECLARATION__NAME:
        return getName();
      case Inform6Package.VERB_DECLARATION__META:
        return getMeta();
      case Inform6Package.VERB_DECLARATION__SYN:
        return getSyn();
      case Inform6Package.VERB_DECLARATION__DEFINTIONS:
        return getDefintions();
      case Inform6Package.VERB_DECLARATION__ONLY:
        return getOnly();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case Inform6Package.VERB_DECLARATION__NAME:
        setName((String)newValue);
        return;
      case Inform6Package.VERB_DECLARATION__META:
        setMeta((String)newValue);
        return;
      case Inform6Package.VERB_DECLARATION__SYN:
        getSyn().clear();
        getSyn().addAll((Collection<? extends String>)newValue);
        return;
      case Inform6Package.VERB_DECLARATION__DEFINTIONS:
        getDefintions().clear();
        getDefintions().addAll((Collection<? extends VerbBody>)newValue);
        return;
      case Inform6Package.VERB_DECLARATION__ONLY:
        setOnly((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case Inform6Package.VERB_DECLARATION__NAME:
        setName(NAME_EDEFAULT);
        return;
      case Inform6Package.VERB_DECLARATION__META:
        setMeta(META_EDEFAULT);
        return;
      case Inform6Package.VERB_DECLARATION__SYN:
        getSyn().clear();
        return;
      case Inform6Package.VERB_DECLARATION__DEFINTIONS:
        getDefintions().clear();
        return;
      case Inform6Package.VERB_DECLARATION__ONLY:
        setOnly(ONLY_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case Inform6Package.VERB_DECLARATION__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case Inform6Package.VERB_DECLARATION__META:
        return META_EDEFAULT == null ? meta != null : !META_EDEFAULT.equals(meta);
      case Inform6Package.VERB_DECLARATION__SYN:
        return syn != null && !syn.isEmpty();
      case Inform6Package.VERB_DECLARATION__DEFINTIONS:
        return defintions != null && !defintions.isEmpty();
      case Inform6Package.VERB_DECLARATION__ONLY:
        return ONLY_EDEFAULT == null ? only != null : !ONLY_EDEFAULT.equals(only);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(", meta: ");
    result.append(meta);
    result.append(", syn: ");
    result.append(syn);
    result.append(", only: ");
    result.append(only);
    result.append(')');
    return result.toString();
  }

} //VerbDeclarationImpl
