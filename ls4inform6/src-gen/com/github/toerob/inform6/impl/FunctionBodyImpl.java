/**
 * generated by Xtext 2.22.0
 */
package com.github.toerob.inform6.impl;

import com.github.toerob.inform6.AnyToken;
import com.github.toerob.inform6.FunctionBody;
import com.github.toerob.inform6.Inform6Package;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Function Body</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link com.github.toerob.inform6.impl.FunctionBodyImpl#getAnyToken <em>Any Token</em>}</li>
 *   <li>{@link com.github.toerob.inform6.impl.FunctionBodyImpl#getSemicolon <em>Semicolon</em>}</li>
 *   <li>{@link com.github.toerob.inform6.impl.FunctionBodyImpl#getUnparsed <em>Unparsed</em>}</li>
 *   <li>{@link com.github.toerob.inform6.impl.FunctionBodyImpl#getToken <em>Token</em>}</li>
 * </ul>
 *
 * @generated
 */
public class FunctionBodyImpl extends AnyTokenImpl implements FunctionBody
{
  /**
   * The cached value of the '{@link #getAnyToken() <em>Any Token</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAnyToken()
   * @generated
   * @ordered
   */
  protected AnyToken anyToken;

  /**
   * The default value of the '{@link #getSemicolon() <em>Semicolon</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSemicolon()
   * @generated
   * @ordered
   */
  protected static final String SEMICOLON_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getSemicolon() <em>Semicolon</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSemicolon()
   * @generated
   * @ordered
   */
  protected String semicolon = SEMICOLON_EDEFAULT;

  /**
   * The cached value of the '{@link #getUnparsed() <em>Unparsed</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getUnparsed()
   * @generated
   * @ordered
   */
  protected FunctionBody unparsed;

  /**
   * The default value of the '{@link #getToken() <em>Token</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getToken()
   * @generated
   * @ordered
   */
  protected static final String TOKEN_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getToken() <em>Token</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getToken()
   * @generated
   * @ordered
   */
  protected String token = TOKEN_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected FunctionBodyImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return Inform6Package.Literals.FUNCTION_BODY;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public AnyToken getAnyToken()
  {
    return anyToken;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetAnyToken(AnyToken newAnyToken, NotificationChain msgs)
  {
    AnyToken oldAnyToken = anyToken;
    anyToken = newAnyToken;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, Inform6Package.FUNCTION_BODY__ANY_TOKEN, oldAnyToken, newAnyToken);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setAnyToken(AnyToken newAnyToken)
  {
    if (newAnyToken != anyToken)
    {
      NotificationChain msgs = null;
      if (anyToken != null)
        msgs = ((InternalEObject)anyToken).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - Inform6Package.FUNCTION_BODY__ANY_TOKEN, null, msgs);
      if (newAnyToken != null)
        msgs = ((InternalEObject)newAnyToken).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - Inform6Package.FUNCTION_BODY__ANY_TOKEN, null, msgs);
      msgs = basicSetAnyToken(newAnyToken, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, Inform6Package.FUNCTION_BODY__ANY_TOKEN, newAnyToken, newAnyToken));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getSemicolon()
  {
    return semicolon;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setSemicolon(String newSemicolon)
  {
    String oldSemicolon = semicolon;
    semicolon = newSemicolon;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, Inform6Package.FUNCTION_BODY__SEMICOLON, oldSemicolon, semicolon));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public FunctionBody getUnparsed()
  {
    return unparsed;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetUnparsed(FunctionBody newUnparsed, NotificationChain msgs)
  {
    FunctionBody oldUnparsed = unparsed;
    unparsed = newUnparsed;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, Inform6Package.FUNCTION_BODY__UNPARSED, oldUnparsed, newUnparsed);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setUnparsed(FunctionBody newUnparsed)
  {
    if (newUnparsed != unparsed)
    {
      NotificationChain msgs = null;
      if (unparsed != null)
        msgs = ((InternalEObject)unparsed).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - Inform6Package.FUNCTION_BODY__UNPARSED, null, msgs);
      if (newUnparsed != null)
        msgs = ((InternalEObject)newUnparsed).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - Inform6Package.FUNCTION_BODY__UNPARSED, null, msgs);
      msgs = basicSetUnparsed(newUnparsed, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, Inform6Package.FUNCTION_BODY__UNPARSED, newUnparsed, newUnparsed));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getToken()
  {
    return token;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setToken(String newToken)
  {
    String oldToken = token;
    token = newToken;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, Inform6Package.FUNCTION_BODY__TOKEN, oldToken, token));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case Inform6Package.FUNCTION_BODY__ANY_TOKEN:
        return basicSetAnyToken(null, msgs);
      case Inform6Package.FUNCTION_BODY__UNPARSED:
        return basicSetUnparsed(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case Inform6Package.FUNCTION_BODY__ANY_TOKEN:
        return getAnyToken();
      case Inform6Package.FUNCTION_BODY__SEMICOLON:
        return getSemicolon();
      case Inform6Package.FUNCTION_BODY__UNPARSED:
        return getUnparsed();
      case Inform6Package.FUNCTION_BODY__TOKEN:
        return getToken();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case Inform6Package.FUNCTION_BODY__ANY_TOKEN:
        setAnyToken((AnyToken)newValue);
        return;
      case Inform6Package.FUNCTION_BODY__SEMICOLON:
        setSemicolon((String)newValue);
        return;
      case Inform6Package.FUNCTION_BODY__UNPARSED:
        setUnparsed((FunctionBody)newValue);
        return;
      case Inform6Package.FUNCTION_BODY__TOKEN:
        setToken((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case Inform6Package.FUNCTION_BODY__ANY_TOKEN:
        setAnyToken((AnyToken)null);
        return;
      case Inform6Package.FUNCTION_BODY__SEMICOLON:
        setSemicolon(SEMICOLON_EDEFAULT);
        return;
      case Inform6Package.FUNCTION_BODY__UNPARSED:
        setUnparsed((FunctionBody)null);
        return;
      case Inform6Package.FUNCTION_BODY__TOKEN:
        setToken(TOKEN_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case Inform6Package.FUNCTION_BODY__ANY_TOKEN:
        return anyToken != null;
      case Inform6Package.FUNCTION_BODY__SEMICOLON:
        return SEMICOLON_EDEFAULT == null ? semicolon != null : !SEMICOLON_EDEFAULT.equals(semicolon);
      case Inform6Package.FUNCTION_BODY__UNPARSED:
        return unparsed != null;
      case Inform6Package.FUNCTION_BODY__TOKEN:
        return TOKEN_EDEFAULT == null ? token != null : !TOKEN_EDEFAULT.equals(token);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (semicolon: ");
    result.append(semicolon);
    result.append(", token: ");
    result.append(token);
    result.append(')');
    return result.toString();
  }

} //FunctionBodyImpl
