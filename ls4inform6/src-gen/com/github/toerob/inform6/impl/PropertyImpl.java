/**
 * generated by Xtext 2.22.0
 */
package com.github.toerob.inform6.impl;

import com.github.toerob.inform6.AbstractArray;
import com.github.toerob.inform6.AbstractProperty;
import com.github.toerob.inform6.Inform6Package;
import com.github.toerob.inform6.ObjectDeclaration;
import com.github.toerob.inform6.Primary;
import com.github.toerob.inform6.Property;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectResolvingEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Property</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link com.github.toerob.inform6.impl.PropertyImpl#getName <em>Name</em>}</li>
 *   <li>{@link com.github.toerob.inform6.impl.PropertyImpl#getObject <em>Object</em>}</li>
 *   <li>{@link com.github.toerob.inform6.impl.PropertyImpl#getMethod <em>Method</em>}</li>
 *   <li>{@link com.github.toerob.inform6.impl.PropertyImpl#getArray <em>Array</em>}</li>
 *   <li>{@link com.github.toerob.inform6.impl.PropertyImpl#getObjectReference <em>Object Reference</em>}</li>
 *   <li>{@link com.github.toerob.inform6.impl.PropertyImpl#getValue <em>Value</em>}</li>
 *   <li>{@link com.github.toerob.inform6.impl.PropertyImpl#getObjectReferences <em>Object References</em>}</li>
 *   <li>{@link com.github.toerob.inform6.impl.PropertyImpl#getVal <em>Val</em>}</li>
 * </ul>
 *
 * @generated
 */
public class PropertyImpl extends MinimalEObjectImpl.Container implements Property
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getObject() <em>Object</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getObject()
   * @generated
   * @ordered
   */
  protected ObjectDeclaration object;

  /**
   * The cached value of the '{@link #getMethod() <em>Method</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMethod()
   * @generated
   * @ordered
   */
  protected AbstractProperty method;

  /**
   * The cached value of the '{@link #getArray() <em>Array</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getArray()
   * @generated
   * @ordered
   */
  protected AbstractArray array;

  /**
   * The cached value of the '{@link #getObjectReference() <em>Object Reference</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getObjectReference()
   * @generated
   * @ordered
   */
  protected ObjectDeclaration objectReference;

  /**
   * The cached value of the '{@link #getValue() <em>Value</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getValue()
   * @generated
   * @ordered
   */
  protected Primary value;

  /**
   * The cached value of the '{@link #getObjectReferences() <em>Object References</em>}' reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getObjectReferences()
   * @generated
   * @ordered
   */
  protected EList<ObjectDeclaration> objectReferences;

  /**
   * The cached value of the '{@link #getVal() <em>Val</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVal()
   * @generated
   * @ordered
   */
  protected Primary val;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected PropertyImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return Inform6Package.Literals.PROPERTY;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, Inform6Package.PROPERTY__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ObjectDeclaration getObject()
  {
    if (object != null && object.eIsProxy())
    {
      InternalEObject oldObject = (InternalEObject)object;
      object = (ObjectDeclaration)eResolveProxy(oldObject);
      if (object != oldObject)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, Inform6Package.PROPERTY__OBJECT, oldObject, object));
      }
    }
    return object;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ObjectDeclaration basicGetObject()
  {
    return object;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setObject(ObjectDeclaration newObject)
  {
    ObjectDeclaration oldObject = object;
    object = newObject;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, Inform6Package.PROPERTY__OBJECT, oldObject, object));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public AbstractProperty getMethod()
  {
    return method;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetMethod(AbstractProperty newMethod, NotificationChain msgs)
  {
    AbstractProperty oldMethod = method;
    method = newMethod;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, Inform6Package.PROPERTY__METHOD, oldMethod, newMethod);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setMethod(AbstractProperty newMethod)
  {
    if (newMethod != method)
    {
      NotificationChain msgs = null;
      if (method != null)
        msgs = ((InternalEObject)method).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - Inform6Package.PROPERTY__METHOD, null, msgs);
      if (newMethod != null)
        msgs = ((InternalEObject)newMethod).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - Inform6Package.PROPERTY__METHOD, null, msgs);
      msgs = basicSetMethod(newMethod, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, Inform6Package.PROPERTY__METHOD, newMethod, newMethod));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public AbstractArray getArray()
  {
    return array;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetArray(AbstractArray newArray, NotificationChain msgs)
  {
    AbstractArray oldArray = array;
    array = newArray;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, Inform6Package.PROPERTY__ARRAY, oldArray, newArray);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setArray(AbstractArray newArray)
  {
    if (newArray != array)
    {
      NotificationChain msgs = null;
      if (array != null)
        msgs = ((InternalEObject)array).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - Inform6Package.PROPERTY__ARRAY, null, msgs);
      if (newArray != null)
        msgs = ((InternalEObject)newArray).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - Inform6Package.PROPERTY__ARRAY, null, msgs);
      msgs = basicSetArray(newArray, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, Inform6Package.PROPERTY__ARRAY, newArray, newArray));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ObjectDeclaration getObjectReference()
  {
    if (objectReference != null && objectReference.eIsProxy())
    {
      InternalEObject oldObjectReference = (InternalEObject)objectReference;
      objectReference = (ObjectDeclaration)eResolveProxy(oldObjectReference);
      if (objectReference != oldObjectReference)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, Inform6Package.PROPERTY__OBJECT_REFERENCE, oldObjectReference, objectReference));
      }
    }
    return objectReference;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ObjectDeclaration basicGetObjectReference()
  {
    return objectReference;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setObjectReference(ObjectDeclaration newObjectReference)
  {
    ObjectDeclaration oldObjectReference = objectReference;
    objectReference = newObjectReference;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, Inform6Package.PROPERTY__OBJECT_REFERENCE, oldObjectReference, objectReference));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Primary getValue()
  {
    return value;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetValue(Primary newValue, NotificationChain msgs)
  {
    Primary oldValue = value;
    value = newValue;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, Inform6Package.PROPERTY__VALUE, oldValue, newValue);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setValue(Primary newValue)
  {
    if (newValue != value)
    {
      NotificationChain msgs = null;
      if (value != null)
        msgs = ((InternalEObject)value).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - Inform6Package.PROPERTY__VALUE, null, msgs);
      if (newValue != null)
        msgs = ((InternalEObject)newValue).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - Inform6Package.PROPERTY__VALUE, null, msgs);
      msgs = basicSetValue(newValue, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, Inform6Package.PROPERTY__VALUE, newValue, newValue));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<ObjectDeclaration> getObjectReferences()
  {
    if (objectReferences == null)
    {
      objectReferences = new EObjectResolvingEList<ObjectDeclaration>(ObjectDeclaration.class, this, Inform6Package.PROPERTY__OBJECT_REFERENCES);
    }
    return objectReferences;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Primary getVal()
  {
    return val;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetVal(Primary newVal, NotificationChain msgs)
  {
    Primary oldVal = val;
    val = newVal;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, Inform6Package.PROPERTY__VAL, oldVal, newVal);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setVal(Primary newVal)
  {
    if (newVal != val)
    {
      NotificationChain msgs = null;
      if (val != null)
        msgs = ((InternalEObject)val).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - Inform6Package.PROPERTY__VAL, null, msgs);
      if (newVal != null)
        msgs = ((InternalEObject)newVal).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - Inform6Package.PROPERTY__VAL, null, msgs);
      msgs = basicSetVal(newVal, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, Inform6Package.PROPERTY__VAL, newVal, newVal));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case Inform6Package.PROPERTY__METHOD:
        return basicSetMethod(null, msgs);
      case Inform6Package.PROPERTY__ARRAY:
        return basicSetArray(null, msgs);
      case Inform6Package.PROPERTY__VALUE:
        return basicSetValue(null, msgs);
      case Inform6Package.PROPERTY__VAL:
        return basicSetVal(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case Inform6Package.PROPERTY__NAME:
        return getName();
      case Inform6Package.PROPERTY__OBJECT:
        if (resolve) return getObject();
        return basicGetObject();
      case Inform6Package.PROPERTY__METHOD:
        return getMethod();
      case Inform6Package.PROPERTY__ARRAY:
        return getArray();
      case Inform6Package.PROPERTY__OBJECT_REFERENCE:
        if (resolve) return getObjectReference();
        return basicGetObjectReference();
      case Inform6Package.PROPERTY__VALUE:
        return getValue();
      case Inform6Package.PROPERTY__OBJECT_REFERENCES:
        return getObjectReferences();
      case Inform6Package.PROPERTY__VAL:
        return getVal();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case Inform6Package.PROPERTY__NAME:
        setName((String)newValue);
        return;
      case Inform6Package.PROPERTY__OBJECT:
        setObject((ObjectDeclaration)newValue);
        return;
      case Inform6Package.PROPERTY__METHOD:
        setMethod((AbstractProperty)newValue);
        return;
      case Inform6Package.PROPERTY__ARRAY:
        setArray((AbstractArray)newValue);
        return;
      case Inform6Package.PROPERTY__OBJECT_REFERENCE:
        setObjectReference((ObjectDeclaration)newValue);
        return;
      case Inform6Package.PROPERTY__VALUE:
        setValue((Primary)newValue);
        return;
      case Inform6Package.PROPERTY__OBJECT_REFERENCES:
        getObjectReferences().clear();
        getObjectReferences().addAll((Collection<? extends ObjectDeclaration>)newValue);
        return;
      case Inform6Package.PROPERTY__VAL:
        setVal((Primary)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case Inform6Package.PROPERTY__NAME:
        setName(NAME_EDEFAULT);
        return;
      case Inform6Package.PROPERTY__OBJECT:
        setObject((ObjectDeclaration)null);
        return;
      case Inform6Package.PROPERTY__METHOD:
        setMethod((AbstractProperty)null);
        return;
      case Inform6Package.PROPERTY__ARRAY:
        setArray((AbstractArray)null);
        return;
      case Inform6Package.PROPERTY__OBJECT_REFERENCE:
        setObjectReference((ObjectDeclaration)null);
        return;
      case Inform6Package.PROPERTY__VALUE:
        setValue((Primary)null);
        return;
      case Inform6Package.PROPERTY__OBJECT_REFERENCES:
        getObjectReferences().clear();
        return;
      case Inform6Package.PROPERTY__VAL:
        setVal((Primary)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case Inform6Package.PROPERTY__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case Inform6Package.PROPERTY__OBJECT:
        return object != null;
      case Inform6Package.PROPERTY__METHOD:
        return method != null;
      case Inform6Package.PROPERTY__ARRAY:
        return array != null;
      case Inform6Package.PROPERTY__OBJECT_REFERENCE:
        return objectReference != null;
      case Inform6Package.PROPERTY__VALUE:
        return value != null;
      case Inform6Package.PROPERTY__OBJECT_REFERENCES:
        return objectReferences != null && !objectReferences.isEmpty();
      case Inform6Package.PROPERTY__VAL:
        return val != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(')');
    return result.toString();
  }

} //PropertyImpl
