/*
 * generated by Xtext 2.24.0
 */
parser grammar InternalInform6Parser;

options {
	tokenVocab=InternalInform6Lexer;
	superClass=AbstractInternalContentAssistParser;
}

@header {
package com.github.toerob.ide.contentassist.antlr.internal;
import java.util.Map;
import java.util.HashMap;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import com.github.toerob.services.Inform6GrammarAccess;

}
@members {
	private Inform6GrammarAccess grammarAccess;
	private final Map<String, String> tokenNameToValue = new HashMap<String, String>();
	
	{
		tokenNameToValue.put("ExclamationMark", "'!'");
		tokenNameToValue.put("NumberSign", "'#'");
		tokenNameToValue.put("LeftParenthesis", "'('");
		tokenNameToValue.put("RightParenthesis", "')'");
		tokenNameToValue.put("Asterisk", "'*'");
		tokenNameToValue.put("PlusSign", "'+'");
		tokenNameToValue.put("Comma", "','");
		tokenNameToValue.put("HyphenMinus", "'-'");
		tokenNameToValue.put("Solidus", "'/'");
		tokenNameToValue.put("Colon", "':'");
		tokenNameToValue.put("Semicolon", "';'");
		tokenNameToValue.put("EqualsSign", "'='");
		tokenNameToValue.put("LeftSquareBracket", "'['");
		tokenNameToValue.put("RightSquareBracket", "']'");
		tokenNameToValue.put("Tilde", "'~'");
		tokenNameToValue.put("NumberSignNumberSign", "'##'");
		tokenNameToValue.put("HyphenMinusHyphenMinus", "'--'");
		tokenNameToValue.put("In", "'in'");
		tokenNameToValue.put("To", "'to'");
		tokenNameToValue.put("End", "'End'");
		tokenNameToValue.put("Has", "'has'");
		tokenNameToValue.put("Link", "'Link'");
		tokenNameToValue.put("Verb", "'Verb'");
		tokenNameToValue.put("Give", "'give'");
		tokenNameToValue.put("Last", "'last'");
		tokenNameToValue.put("Meta", "'meta'");
		tokenNameToValue.put("Move", "'move'");
		tokenNameToValue.put("Only", "'only'");
		tokenNameToValue.put("With", "'with'");
		tokenNameToValue.put("Array", "'Array'");
		tokenNameToValue.put("Class_1", "'Class'");
		tokenNameToValue.put("Abort", "'abort'");
		tokenNameToValue.put("Alias", "'alias'");
		tokenNameToValue.put("Class_1", "'class'");
		tokenNameToValue.put("First", "'first'");
		tokenNameToValue.put("Hasnt", "'hasnt'");
		tokenNameToValue.put("Notin", "'notin'");
		tokenNameToValue.put("Table", "'table'");
		tokenNameToValue.put("Extend", "'Extend'");
		tokenNameToValue.put("Global", "'Global'");
		tokenNameToValue.put("Nearby", "'Nearby'");
		tokenNameToValue.put("Object", "'Object'");
		tokenNameToValue.put("Serial", "'Serial'");
		tokenNameToValue.put("Buffer", "'buffer'");
		tokenNameToValue.put("Remove", "'remove'");
		tokenNameToValue.put("String", "'string'");
		tokenNameToValue.put("Default_1", "'Default'");
		tokenNameToValue.put("Include", "'Include'");
		tokenNameToValue.put("Message", "'Message'");
		tokenNameToValue.put("Release", "'Release'");
		tokenNameToValue.put("Replace", "'Replace'");
		tokenNameToValue.put("Default_1", "'default'");
		tokenNameToValue.put("Private", "'private'");
		tokenNameToValue.put("Reverse", "'reverse'");
		tokenNameToValue.put("Constant", "'Constant'");
		tokenNameToValue.put("Property", "'Property'");
		tokenNameToValue.put("Switches", "'Switches'");
		tokenNameToValue.put("Additive", "'additive'");
		tokenNameToValue.put("Found_in", "'found_in'");
		tokenNameToValue.put("Attribute", "'Attribute'");
		tokenNameToValue.put("Lowstring", "'Lowstring'");
		tokenNameToValue.put("Abbreviate", "'Abbreviate'");
		tokenNameToValue.put("Zcharacter", "'Zcharacter'");
		tokenNameToValue.put("Fake_Action", "'Fake_Action'");
		tokenNameToValue.put("System_file", "'System_file'");
	}

	public void setGrammarAccess(Inform6GrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		String result = tokenNameToValue.get(tokenName);
		if (result == null)
			result = tokenName;
		return result;
	}
}

// Entry rule entryRuleProgram
entryRuleProgram
:
{ before(grammarAccess.getProgramRule()); }
	 ruleProgram
{ after(grammarAccess.getProgramRule()); } 
	 EOF 
;

// Rule Program
ruleProgram 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProgramAccess().getAlternatives()); }
		(rule__Program__Alternatives)*
		{ after(grammarAccess.getProgramAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDirective
entryRuleDirective
:
{ before(grammarAccess.getDirectiveRule()); }
	 ruleDirective
{ after(grammarAccess.getDirectiveRule()); } 
	 EOF 
;

// Rule Directive
ruleDirective 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDirectiveAccess().getAlternatives()); }
		(rule__Directive__Alternatives)
		{ after(grammarAccess.getDirectiveAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSystemFileDirective
entryRuleSystemFileDirective
:
{ before(grammarAccess.getSystemFileDirectiveRule()); }
	 ruleSystemFileDirective
{ after(grammarAccess.getSystemFileDirectiveRule()); } 
	 EOF 
;

// Rule SystemFileDirective
ruleSystemFileDirective 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSystemFileDirectiveAccess().getGroup()); }
		(rule__SystemFileDirective__Group__0)
		{ after(grammarAccess.getSystemFileDirectiveAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFakeActionDirective
entryRuleFakeActionDirective
:
{ before(grammarAccess.getFakeActionDirectiveRule()); }
	 ruleFakeActionDirective
{ after(grammarAccess.getFakeActionDirectiveRule()); } 
	 EOF 
;

// Rule FakeActionDirective
ruleFakeActionDirective 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFakeActionDirectiveAccess().getGroup()); }
		(rule__FakeActionDirective__Group__0)
		{ after(grammarAccess.getFakeActionDirectiveAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAbbreviateDirective
entryRuleAbbreviateDirective
:
{ before(grammarAccess.getAbbreviateDirectiveRule()); }
	 ruleAbbreviateDirective
{ after(grammarAccess.getAbbreviateDirectiveRule()); } 
	 EOF 
;

// Rule AbbreviateDirective
ruleAbbreviateDirective 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAbbreviateDirectiveAccess().getGroup()); }
		(rule__AbbreviateDirective__Group__0)
		{ after(grammarAccess.getAbbreviateDirectiveAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAbortDirective
entryRuleAbortDirective
:
{ before(grammarAccess.getAbortDirectiveRule()); }
	 ruleAbortDirective
{ after(grammarAccess.getAbortDirectiveRule()); } 
	 EOF 
;

// Rule AbortDirective
ruleAbortDirective 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAbortDirectiveAccess().getGroup()); }
		(rule__AbortDirective__Group__0)
		{ after(grammarAccess.getAbortDirectiveAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMessageDirective
entryRuleMessageDirective
:
{ before(grammarAccess.getMessageDirectiveRule()); }
	 ruleMessageDirective
{ after(grammarAccess.getMessageDirectiveRule()); } 
	 EOF 
;

// Rule MessageDirective
ruleMessageDirective 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMessageDirectiveAccess().getGroup()); }
		(rule__MessageDirective__Group__0)
		{ after(grammarAccess.getMessageDirectiveAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleZcharacterDirective
entryRuleZcharacterDirective
:
{ before(grammarAccess.getZcharacterDirectiveRule()); }
	 ruleZcharacterDirective
{ after(grammarAccess.getZcharacterDirectiveRule()); } 
	 EOF 
;

// Rule ZcharacterDirective
ruleZcharacterDirective 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getZcharacterDirectiveAccess().getGroup()); }
		(rule__ZcharacterDirective__Group__0)
		{ after(grammarAccess.getZcharacterDirectiveAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCommentDeclaration
entryRuleCommentDeclaration
:
{ before(grammarAccess.getCommentDeclarationRule()); }
	 ruleCommentDeclaration
{ after(grammarAccess.getCommentDeclarationRule()); } 
	 EOF 
;

// Rule CommentDeclaration
ruleCommentDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCommentDeclarationAccess().getAlternatives()); }
		(rule__CommentDeclaration__Alternatives)
		{ after(grammarAccess.getCommentDeclarationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCompilerDirective
entryRuleCompilerDirective
:
{ before(grammarAccess.getCompilerDirectiveRule()); }
	 ruleCompilerDirective
{ after(grammarAccess.getCompilerDirectiveRule()); } 
	 EOF 
;

// Rule CompilerDirective
ruleCompilerDirective 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCompilerDirectiveAccess().getValueAssignment()); }
		(rule__CompilerDirective__ValueAssignment)
		{ after(grammarAccess.getCompilerDirectiveAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIncludeDeclaration
entryRuleIncludeDeclaration
:
{ before(grammarAccess.getIncludeDeclarationRule()); }
	 ruleIncludeDeclaration
{ after(grammarAccess.getIncludeDeclarationRule()); } 
	 EOF 
;

// Rule IncludeDeclaration
ruleIncludeDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIncludeDeclarationAccess().getGroup()); }
		(rule__IncludeDeclaration__Group__0)
		{ after(grammarAccess.getIncludeDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEndDirective
entryRuleEndDirective
:
{ before(grammarAccess.getEndDirectiveRule()); }
	 ruleEndDirective
{ after(grammarAccess.getEndDirectiveRule()); } 
	 EOF 
;

// Rule EndDirective
ruleEndDirective 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEndDirectiveAccess().getGroup()); }
		(rule__EndDirective__Group__0)
		{ after(grammarAccess.getEndDirectiveAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePropertyDirective
entryRulePropertyDirective
:
{ before(grammarAccess.getPropertyDirectiveRule()); }
	 rulePropertyDirective
{ after(grammarAccess.getPropertyDirectiveRule()); } 
	 EOF 
;

// Rule PropertyDirective
rulePropertyDirective 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPropertyDirectiveAccess().getGroup()); }
		(rule__PropertyDirective__Group__0)
		{ after(grammarAccess.getPropertyDirectiveAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLowStringDirective
entryRuleLowStringDirective
:
{ before(grammarAccess.getLowStringDirectiveRule()); }
	 ruleLowStringDirective
{ after(grammarAccess.getLowStringDirectiveRule()); } 
	 EOF 
;

// Rule LowStringDirective
ruleLowStringDirective 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLowStringDirectiveAccess().getGroup()); }
		(rule__LowStringDirective__Group__0)
		{ after(grammarAccess.getLowStringDirectiveAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleReleaseDirective
entryRuleReleaseDirective
:
{ before(grammarAccess.getReleaseDirectiveRule()); }
	 ruleReleaseDirective
{ after(grammarAccess.getReleaseDirectiveRule()); } 
	 EOF 
;

// Rule ReleaseDirective
ruleReleaseDirective 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getReleaseDirectiveAccess().getGroup()); }
		(rule__ReleaseDirective__Group__0)
		{ after(grammarAccess.getReleaseDirectiveAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleReplaceDirective
entryRuleReplaceDirective
:
{ before(grammarAccess.getReplaceDirectiveRule()); }
	 ruleReplaceDirective
{ after(grammarAccess.getReplaceDirectiveRule()); } 
	 EOF 
;

// Rule ReplaceDirective
ruleReplaceDirective 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getReplaceDirectiveAccess().getGroup()); }
		(rule__ReplaceDirective__Group__0)
		{ after(grammarAccess.getReplaceDirectiveAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSerialDirective
entryRuleSerialDirective
:
{ before(grammarAccess.getSerialDirectiveRule()); }
	 ruleSerialDirective
{ after(grammarAccess.getSerialDirectiveRule()); } 
	 EOF 
;

// Rule SerialDirective
ruleSerialDirective 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSerialDirectiveAccess().getGroup()); }
		(rule__SerialDirective__Group__0)
		{ after(grammarAccess.getSerialDirectiveAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGlobalConstantDeclaration
entryRuleGlobalConstantDeclaration
:
{ before(grammarAccess.getGlobalConstantDeclarationRule()); }
	 ruleGlobalConstantDeclaration
{ after(grammarAccess.getGlobalConstantDeclarationRule()); } 
	 EOF 
;

// Rule GlobalConstantDeclaration
ruleGlobalConstantDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGlobalConstantDeclarationAccess().getGroup()); }
		(rule__GlobalConstantDeclaration__Group__0)
		{ after(grammarAccess.getGlobalConstantDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGlobalDefaultDeclaration
entryRuleGlobalDefaultDeclaration
:
{ before(grammarAccess.getGlobalDefaultDeclarationRule()); }
	 ruleGlobalDefaultDeclaration
{ after(grammarAccess.getGlobalDefaultDeclarationRule()); } 
	 EOF 
;

// Rule GlobalDefaultDeclaration
ruleGlobalDefaultDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGlobalDefaultDeclarationAccess().getGroup()); }
		(rule__GlobalDefaultDeclaration__Group__0)
		{ after(grammarAccess.getGlobalDefaultDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSwitchesDeclaration
entryRuleSwitchesDeclaration
:
{ before(grammarAccess.getSwitchesDeclarationRule()); }
	 ruleSwitchesDeclaration
{ after(grammarAccess.getSwitchesDeclarationRule()); } 
	 EOF 
;

// Rule SwitchesDeclaration
ruleSwitchesDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSwitchesDeclarationAccess().getGroup()); }
		(rule__SwitchesDeclaration__Group__0)
		{ after(grammarAccess.getSwitchesDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGlobalDeclaration
entryRuleGlobalDeclaration
:
{ before(grammarAccess.getGlobalDeclarationRule()); }
	 ruleGlobalDeclaration
{ after(grammarAccess.getGlobalDeclarationRule()); } 
	 EOF 
;

// Rule GlobalDeclaration
ruleGlobalDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGlobalDeclarationAccess().getGroup()); }
		(rule__GlobalDeclaration__Group__0)
		{ after(grammarAccess.getGlobalDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGlobalConstantValue
entryRuleGlobalConstantValue
:
{ before(grammarAccess.getGlobalConstantValueRule()); }
	 ruleGlobalConstantValue
{ after(grammarAccess.getGlobalConstantValueRule()); } 
	 EOF 
;

// Rule GlobalConstantValue
ruleGlobalConstantValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGlobalConstantValueAccess().getNameAssignment()); }
		(rule__GlobalConstantValue__NameAssignment)
		{ after(grammarAccess.getGlobalConstantValueAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAttributeDeclaration
entryRuleAttributeDeclaration
:
{ before(grammarAccess.getAttributeDeclarationRule()); }
	 ruleAttributeDeclaration
{ after(grammarAccess.getAttributeDeclarationRule()); } 
	 EOF 
;

// Rule AttributeDeclaration
ruleAttributeDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAttributeDeclarationAccess().getGroup()); }
		(rule__AttributeDeclaration__Group__0)
		{ after(grammarAccess.getAttributeDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePropertyDeclaration
entryRulePropertyDeclaration
:
{ before(grammarAccess.getPropertyDeclarationRule()); }
	 rulePropertyDeclaration
{ after(grammarAccess.getPropertyDeclarationRule()); } 
	 EOF 
;

// Rule PropertyDeclaration
rulePropertyDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPropertyDeclarationAccess().getGroup()); }
		(rule__PropertyDeclaration__Group__0)
		{ after(grammarAccess.getPropertyDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleClassDeclaration
entryRuleClassDeclaration
:
{ before(grammarAccess.getClassDeclarationRule()); }
	 ruleClassDeclaration
{ after(grammarAccess.getClassDeclarationRule()); } 
	 EOF 
;

// Rule ClassDeclaration
ruleClassDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getClassDeclarationAccess().getGroup()); }
		(rule__ClassDeclaration__Group__0)
		{ after(grammarAccess.getClassDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleObjectDeclaration
entryRuleObjectDeclaration
:
{ before(grammarAccess.getObjectDeclarationRule()); }
	 ruleObjectDeclaration
{ after(grammarAccess.getObjectDeclarationRule()); } 
	 EOF 
;

// Rule ObjectDeclaration
ruleObjectDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getObjectDeclarationAccess().getGroup()); }
		(rule__ObjectDeclaration__Group__0)
		{ after(grammarAccess.getObjectDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIdlessObjectDeclaration
entryRuleIdlessObjectDeclaration
:
{ before(grammarAccess.getIdlessObjectDeclarationRule()); }
	 ruleIdlessObjectDeclaration
{ after(grammarAccess.getIdlessObjectDeclarationRule()); } 
	 EOF 
;

// Rule IdlessObjectDeclaration
ruleIdlessObjectDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIdlessObjectDeclarationAccess().getGroup()); }
		(rule__IdlessObjectDeclaration__Group__0)
		{ after(grammarAccess.getIdlessObjectDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNearbyDeclaration
entryRuleNearbyDeclaration
:
{ before(grammarAccess.getNearbyDeclarationRule()); }
	 ruleNearbyDeclaration
{ after(grammarAccess.getNearbyDeclarationRule()); } 
	 EOF 
;

// Rule NearbyDeclaration
ruleNearbyDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNearbyDeclarationAccess().getGroup()); }
		(rule__NearbyDeclaration__Group__0)
		{ after(grammarAccess.getNearbyDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVerbDeclaration
entryRuleVerbDeclaration
:
{ before(grammarAccess.getVerbDeclarationRule()); }
	 ruleVerbDeclaration
{ after(grammarAccess.getVerbDeclarationRule()); } 
	 EOF 
;

// Rule VerbDeclaration
ruleVerbDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVerbDeclarationAccess().getAlternatives()); }
		(rule__VerbDeclaration__Alternatives)
		{ after(grammarAccess.getVerbDeclarationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVerbBody
entryRuleVerbBody
:
{ before(grammarAccess.getVerbBodyRule()); }
	 ruleVerbBody
{ after(grammarAccess.getVerbBodyRule()); } 
	 EOF 
;

// Rule VerbBody
ruleVerbBody 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVerbBodyAccess().getGroup()); }
		(rule__VerbBody__Group__0)
		{ after(grammarAccess.getVerbBodyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVerbAssignment
entryRuleVerbAssignment
:
{ before(grammarAccess.getVerbAssignmentRule()); }
	 ruleVerbAssignment
{ after(grammarAccess.getVerbAssignmentRule()); } 
	 EOF 
;

// Rule VerbAssignment
ruleVerbAssignment 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVerbAssignmentAccess().getAlternatives()); }
		(rule__VerbAssignment__Alternatives)
		{ after(grammarAccess.getVerbAssignmentAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArrayDeclaration
entryRuleArrayDeclaration
:
{ before(grammarAccess.getArrayDeclarationRule()); }
	 ruleArrayDeclaration
{ after(grammarAccess.getArrayDeclarationRule()); } 
	 EOF 
;

// Rule ArrayDeclaration
ruleArrayDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArrayDeclarationAccess().getGroup()); }
		(rule__ArrayDeclaration__Group__0)
		{ after(grammarAccess.getArrayDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArrayType
entryRuleArrayType
:
{ before(grammarAccess.getArrayTypeRule()); }
	 ruleArrayType
{ after(grammarAccess.getArrayTypeRule()); } 
	 EOF 
;

// Rule ArrayType
ruleArrayType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArrayTypeAccess().getAlternatives()); }
		(rule__ArrayType__Alternatives)
		{ after(grammarAccess.getArrayTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrimaryExpression
entryRulePrimaryExpression
:
{ before(grammarAccess.getPrimaryExpressionRule()); }
	 rulePrimaryExpression
{ after(grammarAccess.getPrimaryExpressionRule()); } 
	 EOF 
;

// Rule PrimaryExpression
rulePrimaryExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getAlternatives()); }
		(rule__PrimaryExpression__Alternatives)
		{ after(grammarAccess.getPrimaryExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleClassSection
entryRuleClassSection
:
{ before(grammarAccess.getClassSectionRule()); }
	 ruleClassSection
{ after(grammarAccess.getClassSectionRule()); } 
	 EOF 
;

// Rule ClassSection
ruleClassSection 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getClassSectionAccess().getGroup()); }
		(rule__ClassSection__Group__0)
		{ after(grammarAccess.getClassSectionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePropertySection
entryRulePropertySection
:
{ before(grammarAccess.getPropertySectionRule()); }
	 rulePropertySection
{ after(grammarAccess.getPropertySectionRule()); } 
	 EOF 
;

// Rule PropertySection
rulePropertySection 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPropertySectionAccess().getGroup()); }
		(rule__PropertySection__Group__0)
		{ after(grammarAccess.getPropertySectionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAttributeSection
entryRuleAttributeSection
:
{ before(grammarAccess.getAttributeSectionRule()); }
	 ruleAttributeSection
{ after(grammarAccess.getAttributeSectionRule()); } 
	 EOF 
;

// Rule AttributeSection
ruleAttributeSection 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAttributeSectionAccess().getGroup()); }
		(rule__AttributeSection__Group__0)
		{ after(grammarAccess.getAttributeSectionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleProperty
entryRuleProperty
:
{ before(grammarAccess.getPropertyRule()); }
	 ruleProperty
{ after(grammarAccess.getPropertyRule()); } 
	 EOF 
;

// Rule Property
ruleProperty 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPropertyAccess().getAlternatives()); }
		(rule__Property__Alternatives)
		{ after(grammarAccess.getPropertyAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAbstractArray
entryRuleAbstractArray
:
{ before(grammarAccess.getAbstractArrayRule()); }
	 ruleAbstractArray
{ after(grammarAccess.getAbstractArrayRule()); } 
	 EOF 
;

// Rule AbstractArray
ruleAbstractArray 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAbstractArrayAccess().getGroup()); }
		(rule__AbstractArray__Group__0)
		{ after(grammarAccess.getAbstractArrayAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMethod
entryRuleMethod
:
{ before(grammarAccess.getMethodRule()); }
	 ruleMethod
{ after(grammarAccess.getMethodRule()); } 
	 EOF 
;

// Rule Method
ruleMethod 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMethodAccess().getGroup()); }
		(rule__Method__Group__0)
		{ after(grammarAccess.getMethodAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGlobalFunctionDefinition
entryRuleGlobalFunctionDefinition
:
{ before(grammarAccess.getGlobalFunctionDefinitionRule()); }
	 ruleGlobalFunctionDefinition
{ after(grammarAccess.getGlobalFunctionDefinitionRule()); } 
	 EOF 
;

// Rule GlobalFunctionDefinition
ruleGlobalFunctionDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGlobalFunctionDefinitionAccess().getGroup()); }
		(rule__GlobalFunctionDefinition__Group__0)
		{ after(grammarAccess.getGlobalFunctionDefinitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFunctionHeader
entryRuleFunctionHeader
:
{ before(grammarAccess.getFunctionHeaderRule()); }
	 ruleFunctionHeader
{ after(grammarAccess.getFunctionHeaderRule()); } 
	 EOF 
;

// Rule FunctionHeader
ruleFunctionHeader 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionHeaderAccess().getGroup()); }
		(rule__FunctionHeader__Group__0)
		{ after(grammarAccess.getFunctionHeaderAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFunctionBody
entryRuleFunctionBody
:
{ before(grammarAccess.getFunctionBodyRule()); }
	 ruleFunctionBody
{ after(grammarAccess.getFunctionBodyRule()); } 
	 EOF 
;

// Rule FunctionBody
ruleFunctionBody 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionBodyAccess().getFuzzyExpressionParserRuleCall()); }
		(ruleFuzzyExpression)*
		{ after(grammarAccess.getFunctionBodyAccess().getFuzzyExpressionParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFuzzyExpression
entryRuleFuzzyExpression
:
{ before(grammarAccess.getFuzzyExpressionRule()); }
	 ruleFuzzyExpression
{ after(grammarAccess.getFuzzyExpressionRule()); } 
	 EOF 
;

// Rule FuzzyExpression
ruleFuzzyExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFuzzyExpressionAccess().getAlternatives()); }
		(rule__FuzzyExpression__Alternatives)
		{ after(grammarAccess.getFuzzyExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpression
entryRuleExpression
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionAccess().getGroup()); }
		(rule__Expression__Group__0)
		{ after(grammarAccess.getExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrimary
entryRulePrimary
:
{ before(grammarAccess.getPrimaryRule()); }
	 rulePrimary
{ after(grammarAccess.getPrimaryRule()); } 
	 EOF 
;

// Rule Primary
rulePrimary 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimaryAccess().getAlternatives()); }
		(rule__Primary__Alternatives)
		{ after(grammarAccess.getPrimaryAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNumber
entryRuleNumber
:
{ before(grammarAccess.getNumberRule()); }
	 ruleNumber
{ after(grammarAccess.getNumberRule()); } 
	 EOF 
;

// Rule Number
ruleNumber 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNumberAccess().getGroup()); }
		(rule__Number__Group__0)
		{ after(grammarAccess.getNumberAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAttribute
entryRuleAttribute
:
{ before(grammarAccess.getAttributeRule()); }
	 ruleAttribute
{ after(grammarAccess.getAttributeRule()); } 
	 EOF 
;

// Rule Attribute
ruleAttribute 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAttributeAccess().getGroup()); }
		(rule__Attribute__Group__0)
		{ after(grammarAccess.getAttributeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePreprocessorDirective
entryRulePreprocessorDirective
:
{ before(grammarAccess.getPreprocessorDirectiveRule()); }
	 rulePreprocessorDirective
{ after(grammarAccess.getPreprocessorDirectiveRule()); } 
	 EOF 
;

// Rule PreprocessorDirective
rulePreprocessorDirective 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPreprocessorDirectiveAccess().getANY_PREPROCESSORDIRTerminalRuleCall()); }
		RULE_ANY_PREPROCESSORDIR
		{ after(grammarAccess.getPreprocessorDirectiveAccess().getANY_PREPROCESSORDIRTerminalRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgramAccess().getDirectivesAssignment_0()); }
		(rule__Program__DirectivesAssignment_0)
		{ after(grammarAccess.getProgramAccess().getDirectivesAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getProgramAccess().getImportsAssignment_1()); }
		(rule__Program__ImportsAssignment_1)
		{ after(grammarAccess.getProgramAccess().getImportsAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Directive__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDirectiveAccess().getReleaseDirectiveParserRuleCall_0()); }
		ruleReleaseDirective
		{ after(grammarAccess.getDirectiveAccess().getReleaseDirectiveParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getDirectiveAccess().getZcharacterDirectiveParserRuleCall_1()); }
		ruleZcharacterDirective
		{ after(grammarAccess.getDirectiveAccess().getZcharacterDirectiveParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getDirectiveAccess().getCommentDeclarationParserRuleCall_2()); }
		ruleCommentDeclaration
		{ after(grammarAccess.getDirectiveAccess().getCommentDeclarationParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getDirectiveAccess().getReplaceDirectiveParserRuleCall_3()); }
		ruleReplaceDirective
		{ after(grammarAccess.getDirectiveAccess().getReplaceDirectiveParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getDirectiveAccess().getSerialDirectiveParserRuleCall_4()); }
		ruleSerialDirective
		{ after(grammarAccess.getDirectiveAccess().getSerialDirectiveParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getDirectiveAccess().getSwitchesDeclarationParserRuleCall_5()); }
		ruleSwitchesDeclaration
		{ after(grammarAccess.getDirectiveAccess().getSwitchesDeclarationParserRuleCall_5()); }
	)
	|
	(
		{ before(grammarAccess.getDirectiveAccess().getGlobalDeclarationParserRuleCall_6()); }
		ruleGlobalDeclaration
		{ after(grammarAccess.getDirectiveAccess().getGlobalDeclarationParserRuleCall_6()); }
	)
	|
	(
		{ before(grammarAccess.getDirectiveAccess().getGlobalDefaultDeclarationParserRuleCall_7()); }
		ruleGlobalDefaultDeclaration
		{ after(grammarAccess.getDirectiveAccess().getGlobalDefaultDeclarationParserRuleCall_7()); }
	)
	|
	(
		{ before(grammarAccess.getDirectiveAccess().getGlobalConstantDeclarationParserRuleCall_8()); }
		ruleGlobalConstantDeclaration
		{ after(grammarAccess.getDirectiveAccess().getGlobalConstantDeclarationParserRuleCall_8()); }
	)
	|
	(
		{ before(grammarAccess.getDirectiveAccess().getGlobalFunctionDefinitionParserRuleCall_9()); }
		ruleGlobalFunctionDefinition
		{ after(grammarAccess.getDirectiveAccess().getGlobalFunctionDefinitionParserRuleCall_9()); }
	)
	|
	(
		{ before(grammarAccess.getDirectiveAccess().getAttributeDeclarationParserRuleCall_10()); }
		ruleAttributeDeclaration
		{ after(grammarAccess.getDirectiveAccess().getAttributeDeclarationParserRuleCall_10()); }
	)
	|
	(
		{ before(grammarAccess.getDirectiveAccess().getPropertyDeclarationParserRuleCall_11()); }
		rulePropertyDeclaration
		{ after(grammarAccess.getDirectiveAccess().getPropertyDeclarationParserRuleCall_11()); }
	)
	|
	(
		{ before(grammarAccess.getDirectiveAccess().getClassDeclarationParserRuleCall_12()); }
		ruleClassDeclaration
		{ after(grammarAccess.getDirectiveAccess().getClassDeclarationParserRuleCall_12()); }
	)
	|
	(
		{ before(grammarAccess.getDirectiveAccess().getObjectDeclarationParserRuleCall_13()); }
		ruleObjectDeclaration
		{ after(grammarAccess.getDirectiveAccess().getObjectDeclarationParserRuleCall_13()); }
	)
	|
	(
		{ before(grammarAccess.getDirectiveAccess().getIdlessObjectDeclarationParserRuleCall_14()); }
		ruleIdlessObjectDeclaration
		{ after(grammarAccess.getDirectiveAccess().getIdlessObjectDeclarationParserRuleCall_14()); }
	)
	|
	(
		{ before(grammarAccess.getDirectiveAccess().getNearbyDeclarationParserRuleCall_15()); }
		ruleNearbyDeclaration
		{ after(grammarAccess.getDirectiveAccess().getNearbyDeclarationParserRuleCall_15()); }
	)
	|
	(
		{ before(grammarAccess.getDirectiveAccess().getVerbDeclarationParserRuleCall_16()); }
		ruleVerbDeclaration
		{ after(grammarAccess.getDirectiveAccess().getVerbDeclarationParserRuleCall_16()); }
	)
	|
	(
		{ before(grammarAccess.getDirectiveAccess().getArrayDeclarationParserRuleCall_17()); }
		ruleArrayDeclaration
		{ after(grammarAccess.getDirectiveAccess().getArrayDeclarationParserRuleCall_17()); }
	)
	|
	(
		{ before(grammarAccess.getDirectiveAccess().getPropertyDirectiveParserRuleCall_18()); }
		rulePropertyDirective
		{ after(grammarAccess.getDirectiveAccess().getPropertyDirectiveParserRuleCall_18()); }
	)
	|
	(
		{ before(grammarAccess.getDirectiveAccess().getMessageDirectiveParserRuleCall_19()); }
		ruleMessageDirective
		{ after(grammarAccess.getDirectiveAccess().getMessageDirectiveParserRuleCall_19()); }
	)
	|
	(
		{ before(grammarAccess.getDirectiveAccess().getGroup_20()); }
		(rule__Directive__Group_20__0)
		{ after(grammarAccess.getDirectiveAccess().getGroup_20()); }
	)
	|
	(
		{ before(grammarAccess.getDirectiveAccess().getGroup_21()); }
		(rule__Directive__Group_21__0)
		{ after(grammarAccess.getDirectiveAccess().getGroup_21()); }
	)
	|
	(
		{ before(grammarAccess.getDirectiveAccess().getGroup_22()); }
		(rule__Directive__Group_22__0)
		{ after(grammarAccess.getDirectiveAccess().getGroup_22()); }
	)
	|
	(
		{ before(grammarAccess.getDirectiveAccess().getGroup_23()); }
		(rule__Directive__Group_23__0)
		{ after(grammarAccess.getDirectiveAccess().getGroup_23()); }
	)
	|
	(
		{ before(grammarAccess.getDirectiveAccess().getGroup_24()); }
		(rule__Directive__Group_24__0)
		{ after(grammarAccess.getDirectiveAccess().getGroup_24()); }
	)
	|
	(
		{ before(grammarAccess.getDirectiveAccess().getGroup_25()); }
		(rule__Directive__Group_25__0)
		{ after(grammarAccess.getDirectiveAccess().getGroup_25()); }
	)
	|
	(
		{ before(grammarAccess.getDirectiveAccess().getGroup_26()); }
		(rule__Directive__Group_26__0)
		{ after(grammarAccess.getDirectiveAccess().getGroup_26()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommentDeclaration__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommentDeclarationAccess().getCompilerDirectiveParserRuleCall_0()); }
		ruleCompilerDirective
		{ after(grammarAccess.getCommentDeclarationAccess().getCompilerDirectiveParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getCommentDeclarationAccess().getGroup_1()); }
		(rule__CommentDeclaration__Group_1__0)
		{ after(grammarAccess.getCommentDeclarationAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IncludeDeclaration__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIncludeDeclarationAccess().getIncludeKeyword_0_0()); }
		Include
		{ after(grammarAccess.getIncludeDeclarationAccess().getIncludeKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getIncludeDeclarationAccess().getLinkKeyword_0_1()); }
		Link
		{ after(grammarAccess.getIncludeDeclarationAccess().getLinkKeyword_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDirective__NameAlternatives_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyDirectiveAccess().getNameIDTerminalRuleCall_2_0_0()); }
		RULE_ID
		{ after(grammarAccess.getPropertyDirectiveAccess().getNameIDTerminalRuleCall_2_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getPropertyDirectiveAccess().getNameDIRECTIONSTerminalRuleCall_2_0_1()); }
		RULE_DIRECTIONS
		{ after(grammarAccess.getPropertyDirectiveAccess().getNameDIRECTIONSTerminalRuleCall_2_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getPropertyDirectiveAccess().getNameFound_inKeyword_2_0_2()); }
		Found_in
		{ after(grammarAccess.getPropertyDirectiveAccess().getNameFound_inKeyword_2_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalDeclaration__NameAlternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGlobalDeclarationAccess().getNameIDTerminalRuleCall_1_0_0()); }
		RULE_ID
		{ after(grammarAccess.getGlobalDeclarationAccess().getNameIDTerminalRuleCall_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getGlobalDeclarationAccess().getNameMetaKeyword_1_0_1()); }
		Meta
		{ after(grammarAccess.getGlobalDeclarationAccess().getNameMetaKeyword_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDeclaration__NameAlternatives_2_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeDeclarationAccess().getNameIDTerminalRuleCall_2_0_0_0()); }
		RULE_ID
		{ after(grammarAccess.getAttributeDeclarationAccess().getNameIDTerminalRuleCall_2_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getAttributeDeclarationAccess().getNameSTATICTerminalRuleCall_2_0_0_1()); }
		RULE_STATIC
		{ after(grammarAccess.getAttributeDeclarationAccess().getNameSTATICTerminalRuleCall_2_0_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDeclaration__AliasedAttributeAlternatives_2_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeDeclarationAccess().getAliasedAttributeIDTerminalRuleCall_2_1_1_0_0()); }
		RULE_ID
		{ after(grammarAccess.getAttributeDeclarationAccess().getAliasedAttributeIDTerminalRuleCall_2_1_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getAttributeDeclarationAccess().getAliasedAttributeSTATICTerminalRuleCall_2_1_1_0_1()); }
		RULE_STATIC
		{ after(grammarAccess.getAttributeDeclarationAccess().getAliasedAttributeSTATICTerminalRuleCall_2_1_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDeclaration__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyDeclarationAccess().getGroup_1_0()); }
		(rule__PropertyDeclaration__Group_1_0__0)
		{ after(grammarAccess.getPropertyDeclarationAccess().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getPropertyDeclarationAccess().getGroup_1_1()); }
		(rule__PropertyDeclaration__Group_1_1__0)
		{ after(grammarAccess.getPropertyDeclarationAccess().getGroup_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__PropertiesAlternatives_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassDeclarationAccess().getPropertiesClassSectionParserRuleCall_4_0_0()); }
		ruleClassSection
		{ after(grammarAccess.getClassDeclarationAccess().getPropertiesClassSectionParserRuleCall_4_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getClassDeclarationAccess().getPropertiesPropertySectionParserRuleCall_4_0_1()); }
		rulePropertySection
		{ after(grammarAccess.getClassDeclarationAccess().getPropertiesPropertySectionParserRuleCall_4_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getClassDeclarationAccess().getPropertiesAttributeSectionParserRuleCall_4_0_2()); }
		ruleAttributeSection
		{ after(grammarAccess.getClassDeclarationAccess().getPropertiesAttributeSectionParserRuleCall_4_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__PropertiesAlternatives_5_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassDeclarationAccess().getPropertiesClassSectionParserRuleCall_5_1_0_0()); }
		ruleClassSection
		{ after(grammarAccess.getClassDeclarationAccess().getPropertiesClassSectionParserRuleCall_5_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getClassDeclarationAccess().getPropertiesPropertySectionParserRuleCall_5_1_0_1()); }
		rulePropertySection
		{ after(grammarAccess.getClassDeclarationAccess().getPropertiesPropertySectionParserRuleCall_5_1_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getClassDeclarationAccess().getPropertiesAttributeSectionParserRuleCall_5_1_0_2()); }
		ruleAttributeSection
		{ after(grammarAccess.getClassDeclarationAccess().getPropertiesAttributeSectionParserRuleCall_5_1_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectDeclaration__Alternatives_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjectDeclarationAccess().getObjectAssignment_0_1_0()); }
		(rule__ObjectDeclaration__ObjectAssignment_0_1_0)
		{ after(grammarAccess.getObjectDeclarationAccess().getObjectAssignment_0_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getObjectDeclarationAccess().getSuperTypeAssignment_0_1_1()); }
		(rule__ObjectDeclaration__SuperTypeAssignment_0_1_1)
		{ after(grammarAccess.getObjectDeclarationAccess().getSuperTypeAssignment_0_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectDeclaration__PropertiesAlternatives_0_6_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjectDeclarationAccess().getPropertiesClassSectionParserRuleCall_0_6_0_0()); }
		ruleClassSection
		{ after(grammarAccess.getObjectDeclarationAccess().getPropertiesClassSectionParserRuleCall_0_6_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getObjectDeclarationAccess().getPropertiesPropertySectionParserRuleCall_0_6_0_1()); }
		rulePropertySection
		{ after(grammarAccess.getObjectDeclarationAccess().getPropertiesPropertySectionParserRuleCall_0_6_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getObjectDeclarationAccess().getPropertiesAttributeSectionParserRuleCall_0_6_0_2()); }
		ruleAttributeSection
		{ after(grammarAccess.getObjectDeclarationAccess().getPropertiesAttributeSectionParserRuleCall_0_6_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectDeclaration__PropertiesAlternatives_0_7_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjectDeclarationAccess().getPropertiesClassSectionParserRuleCall_0_7_1_0_0()); }
		ruleClassSection
		{ after(grammarAccess.getObjectDeclarationAccess().getPropertiesClassSectionParserRuleCall_0_7_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getObjectDeclarationAccess().getPropertiesPropertySectionParserRuleCall_0_7_1_0_1()); }
		rulePropertySection
		{ after(grammarAccess.getObjectDeclarationAccess().getPropertiesPropertySectionParserRuleCall_0_7_1_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getObjectDeclarationAccess().getPropertiesAttributeSectionParserRuleCall_0_7_1_0_2()); }
		ruleAttributeSection
		{ after(grammarAccess.getObjectDeclarationAccess().getPropertiesAttributeSectionParserRuleCall_0_7_1_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IdlessObjectDeclaration__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIdlessObjectDeclarationAccess().getObjectAssignment_1_0()); }
		(rule__IdlessObjectDeclaration__ObjectAssignment_1_0)
		{ after(grammarAccess.getIdlessObjectDeclarationAccess().getObjectAssignment_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getIdlessObjectDeclarationAccess().getSuperTypeAssignment_1_1()); }
		(rule__IdlessObjectDeclaration__SuperTypeAssignment_1_1)
		{ after(grammarAccess.getIdlessObjectDeclarationAccess().getSuperTypeAssignment_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IdlessObjectDeclaration__PropertiesAlternatives_5_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIdlessObjectDeclarationAccess().getPropertiesClassSectionParserRuleCall_5_0_0()); }
		ruleClassSection
		{ after(grammarAccess.getIdlessObjectDeclarationAccess().getPropertiesClassSectionParserRuleCall_5_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getIdlessObjectDeclarationAccess().getPropertiesPropertySectionParserRuleCall_5_0_1()); }
		rulePropertySection
		{ after(grammarAccess.getIdlessObjectDeclarationAccess().getPropertiesPropertySectionParserRuleCall_5_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getIdlessObjectDeclarationAccess().getPropertiesAttributeSectionParserRuleCall_5_0_2()); }
		ruleAttributeSection
		{ after(grammarAccess.getIdlessObjectDeclarationAccess().getPropertiesAttributeSectionParserRuleCall_5_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IdlessObjectDeclaration__PropertiesAlternatives_6_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIdlessObjectDeclarationAccess().getPropertiesClassSectionParserRuleCall_6_1_0_0()); }
		ruleClassSection
		{ after(grammarAccess.getIdlessObjectDeclarationAccess().getPropertiesClassSectionParserRuleCall_6_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getIdlessObjectDeclarationAccess().getPropertiesPropertySectionParserRuleCall_6_1_0_1()); }
		rulePropertySection
		{ after(grammarAccess.getIdlessObjectDeclarationAccess().getPropertiesPropertySectionParserRuleCall_6_1_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getIdlessObjectDeclarationAccess().getPropertiesAttributeSectionParserRuleCall_6_1_0_2()); }
		ruleAttributeSection
		{ after(grammarAccess.getIdlessObjectDeclarationAccess().getPropertiesAttributeSectionParserRuleCall_6_1_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NearbyDeclaration__PropertiesAlternatives_5_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNearbyDeclarationAccess().getPropertiesClassSectionParserRuleCall_5_0_0()); }
		ruleClassSection
		{ after(grammarAccess.getNearbyDeclarationAccess().getPropertiesClassSectionParserRuleCall_5_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getNearbyDeclarationAccess().getPropertiesPropertySectionParserRuleCall_5_0_1()); }
		rulePropertySection
		{ after(grammarAccess.getNearbyDeclarationAccess().getPropertiesPropertySectionParserRuleCall_5_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getNearbyDeclarationAccess().getPropertiesAttributeSectionParserRuleCall_5_0_2()); }
		ruleAttributeSection
		{ after(grammarAccess.getNearbyDeclarationAccess().getPropertiesAttributeSectionParserRuleCall_5_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NearbyDeclaration__PropertiesAlternatives_6_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNearbyDeclarationAccess().getPropertiesClassSectionParserRuleCall_6_1_0_0()); }
		ruleClassSection
		{ after(grammarAccess.getNearbyDeclarationAccess().getPropertiesClassSectionParserRuleCall_6_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getNearbyDeclarationAccess().getPropertiesPropertySectionParserRuleCall_6_1_0_1()); }
		rulePropertySection
		{ after(grammarAccess.getNearbyDeclarationAccess().getPropertiesPropertySectionParserRuleCall_6_1_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getNearbyDeclarationAccess().getPropertiesAttributeSectionParserRuleCall_6_1_0_2()); }
		ruleAttributeSection
		{ after(grammarAccess.getNearbyDeclarationAccess().getPropertiesAttributeSectionParserRuleCall_6_1_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VerbDeclaration__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVerbDeclarationAccess().getGroup_0()); }
		(rule__VerbDeclaration__Group_0__0)
		{ after(grammarAccess.getVerbDeclarationAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getVerbDeclarationAccess().getGroup_1()); }
		(rule__VerbDeclaration__Group_1__0)
		{ after(grammarAccess.getVerbDeclarationAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VerbDeclaration__Alternatives_1_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVerbDeclarationAccess().getFirstKeyword_1_4_0()); }
		First
		{ after(grammarAccess.getVerbDeclarationAccess().getFirstKeyword_1_4_0()); }
	)
	|
	(
		{ before(grammarAccess.getVerbDeclarationAccess().getLastKeyword_1_4_1()); }
		Last
		{ after(grammarAccess.getVerbDeclarationAccess().getLastKeyword_1_4_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VerbAssignment__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVerbAssignmentAccess().getPrimaryParserRuleCall_0()); }
		rulePrimary
		{ after(grammarAccess.getVerbAssignmentAccess().getPrimaryParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getVerbAssignmentAccess().getGroup_1()); }
		(rule__VerbAssignment__Group_1__0)
		{ after(grammarAccess.getVerbAssignmentAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getVerbAssignmentAccess().getGroup_2()); }
		(rule__VerbAssignment__Group_2__0)
		{ after(grammarAccess.getVerbAssignmentAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayDeclaration__NameAlternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArrayDeclarationAccess().getNameIDTerminalRuleCall_1_0_0()); }
		RULE_ID
		{ after(grammarAccess.getArrayDeclarationAccess().getNameIDTerminalRuleCall_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getArrayDeclarationAccess().getNameBufferKeyword_1_0_1()); }
		Buffer
		{ after(grammarAccess.getArrayDeclarationAccess().getNameBufferKeyword_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArrayTypeAccess().getGroup_0()); }
		(rule__ArrayType__Group_0__0)
		{ after(grammarAccess.getArrayTypeAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getArrayTypeAccess().getGroup_1()); }
		(rule__ArrayType__Group_1__0)
		{ after(grammarAccess.getArrayTypeAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getArrayTypeAccess().getGroup_2()); }
		(rule__ArrayType__Group_2__0)
		{ after(grammarAccess.getArrayTypeAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getArrayTypeAccess().getGroup_3()); }
		(rule__ArrayType__Group_3__0)
		{ after(grammarAccess.getArrayTypeAccess().getGroup_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__TypeAlternatives_2_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArrayTypeAccess().getTypeTableKeyword_2_1_0_0()); }
		Table
		{ after(grammarAccess.getArrayTypeAccess().getTypeTableKeyword_2_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getArrayTypeAccess().getTypeBufferKeyword_2_1_0_1()); }
		Buffer
		{ after(grammarAccess.getArrayTypeAccess().getTypeBufferKeyword_2_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_0()); }
		(rule__PrimaryExpression__Group_0__0)
		{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_1()); }
		(rule__PrimaryExpression__Group_1__0)
		{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_2()); }
		(rule__PrimaryExpression__Group_2__0)
		{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getLeftAssignment_3()); }
		(rule__PrimaryExpression__LeftAssignment_3)
		{ after(grammarAccess.getPrimaryExpressionAccess().getLeftAssignment_3()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_4()); }
		(rule__PrimaryExpression__Group_4__0)
		{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__OperatorAlternatives_0_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getOperatorSolidusKeyword_0_1_0_0()); }
		Solidus
		{ after(grammarAccess.getPrimaryExpressionAccess().getOperatorSolidusKeyword_0_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getOperatorAsteriskKeyword_0_1_0_1()); }
		Asterisk
		{ after(grammarAccess.getPrimaryExpressionAccess().getOperatorAsteriskKeyword_0_1_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getOperatorPlusSignKeyword_0_1_0_2()); }
		PlusSign
		{ after(grammarAccess.getPrimaryExpressionAccess().getOperatorPlusSignKeyword_0_1_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getOperatorHyphenMinusKeyword_0_1_0_3()); }
		HyphenMinus
		{ after(grammarAccess.getPrimaryExpressionAccess().getOperatorHyphenMinusKeyword_0_1_0_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__OperatorAlternatives_1_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getOperatorSolidusKeyword_1_2_0_0()); }
		Solidus
		{ after(grammarAccess.getPrimaryExpressionAccess().getOperatorSolidusKeyword_1_2_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getOperatorAsteriskKeyword_1_2_0_1()); }
		Asterisk
		{ after(grammarAccess.getPrimaryExpressionAccess().getOperatorAsteriskKeyword_1_2_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getOperatorPlusSignKeyword_1_2_0_2()); }
		PlusSign
		{ after(grammarAccess.getPrimaryExpressionAccess().getOperatorPlusSignKeyword_1_2_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getOperatorHyphenMinusKeyword_1_2_0_3()); }
		HyphenMinus
		{ after(grammarAccess.getPrimaryExpressionAccess().getOperatorHyphenMinusKeyword_1_2_0_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertySection__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertySectionAccess().getGroup_0_0()); }
		(rule__PropertySection__Group_0_0__0)
		{ after(grammarAccess.getPropertySectionAccess().getGroup_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getPropertySectionAccess().getGroup_0_1()); }
		(rule__PropertySection__Group_0_1__0)
		{ after(grammarAccess.getPropertySectionAccess().getGroup_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertySection__NameAlternatives_0_0_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertySectionAccess().getNameWithKeyword_0_0_1_0_0()); }
		With
		{ after(grammarAccess.getPropertySectionAccess().getNameWithKeyword_0_0_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getPropertySectionAccess().getNamePrivateKeyword_0_0_1_0_1()); }
		Private
		{ after(grammarAccess.getPropertySectionAccess().getNamePrivateKeyword_0_0_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyAccess().getGroup_0()); }
		(rule__Property__Group_0__0)
		{ after(grammarAccess.getPropertyAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getPropertyAccess().getGroup_1()); }
		(rule__Property__Group_1__0)
		{ after(grammarAccess.getPropertyAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getPropertyAccess().getGroup_2()); }
		(rule__Property__Group_2__0)
		{ after(grammarAccess.getPropertyAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Alternatives_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyAccess().getMethodAssignment_0_2_0()); }
		(rule__Property__MethodAssignment_0_2_0)
		{ after(grammarAccess.getPropertyAccess().getMethodAssignment_0_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getPropertyAccess().getArrayAssignment_0_2_1()); }
		(rule__Property__ArrayAssignment_0_2_1)
		{ after(grammarAccess.getPropertyAccess().getArrayAssignment_0_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Alternatives_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyAccess().getObjectReferenceAssignment_1_2_0()); }
		(rule__Property__ObjectReferenceAssignment_1_2_0)
		{ after(grammarAccess.getPropertyAccess().getObjectReferenceAssignment_1_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getPropertyAccess().getValueAssignment_1_2_1()); }
		(rule__Property__ValueAssignment_1_2_1)
		{ after(grammarAccess.getPropertyAccess().getValueAssignment_1_2_1()); }
	)
	|
	(
		{ before(grammarAccess.getPropertyAccess().getMethodAssignment_1_2_2()); }
		(rule__Property__MethodAssignment_1_2_2)
		{ after(grammarAccess.getPropertyAccess().getMethodAssignment_1_2_2()); }
	)
	|
	(
		{ before(grammarAccess.getPropertyAccess().getArrayAssignment_1_2_3()); }
		(rule__Property__ArrayAssignment_1_2_3)
		{ after(grammarAccess.getPropertyAccess().getArrayAssignment_1_2_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Alternatives_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyAccess().getObjectReferencesAssignment_2_2_0()); }
		(rule__Property__ObjectReferencesAssignment_2_2_0)*
		{ after(grammarAccess.getPropertyAccess().getObjectReferencesAssignment_2_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getPropertyAccess().getMethodAssignment_2_2_1()); }
		(rule__Property__MethodAssignment_2_2_1)
		{ after(grammarAccess.getPropertyAccess().getMethodAssignment_2_2_1()); }
	)
	|
	(
		{ before(grammarAccess.getPropertyAccess().getValueAssignment_2_2_2()); }
		(rule__Property__ValueAssignment_2_2_2)
		{ after(grammarAccess.getPropertyAccess().getValueAssignment_2_2_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FuzzyExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFuzzyExpressionAccess().getExpressionParserRuleCall_0()); }
		ruleExpression
		{ after(grammarAccess.getFuzzyExpressionAccess().getExpressionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getFuzzyExpressionAccess().getSemicolonKeyword_1()); }
		Semicolon
		{ after(grammarAccess.getFuzzyExpressionAccess().getSemicolonKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getFuzzyExpressionAccess().getColonKeyword_2()); }
		Colon
		{ after(grammarAccess.getFuzzyExpressionAccess().getColonKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getFuzzyExpressionAccess().getLeftParenthesisKeyword_3()); }
		LeftParenthesis
		{ after(grammarAccess.getFuzzyExpressionAccess().getLeftParenthesisKeyword_3()); }
	)
	|
	(
		{ before(grammarAccess.getFuzzyExpressionAccess().getRightParenthesisKeyword_4()); }
		RightParenthesis
		{ after(grammarAccess.getFuzzyExpressionAccess().getRightParenthesisKeyword_4()); }
	)
	|
	(
		{ before(grammarAccess.getFuzzyExpressionAccess().getSolidusKeyword_5()); }
		Solidus
		{ after(grammarAccess.getFuzzyExpressionAccess().getSolidusKeyword_5()); }
	)
	|
	(
		{ before(grammarAccess.getFuzzyExpressionAccess().getHyphenMinusKeyword_6()); }
		HyphenMinus
		{ after(grammarAccess.getFuzzyExpressionAccess().getHyphenMinusKeyword_6()); }
	)
	|
	(
		{ before(grammarAccess.getFuzzyExpressionAccess().getHyphenMinusHyphenMinusKeyword_7()); }
		HyphenMinusHyphenMinus
		{ after(grammarAccess.getFuzzyExpressionAccess().getHyphenMinusHyphenMinusKeyword_7()); }
	)
	|
	(
		{ before(grammarAccess.getFuzzyExpressionAccess().getPlusSignKeyword_8()); }
		PlusSign
		{ after(grammarAccess.getFuzzyExpressionAccess().getPlusSignKeyword_8()); }
	)
	|
	(
		{ before(grammarAccess.getFuzzyExpressionAccess().getTildeKeyword_9()); }
		Tilde
		{ after(grammarAccess.getFuzzyExpressionAccess().getTildeKeyword_9()); }
	)
	|
	(
		{ before(grammarAccess.getFuzzyExpressionAccess().getEqualsSignKeyword_10()); }
		EqualsSign
		{ after(grammarAccess.getFuzzyExpressionAccess().getEqualsSignKeyword_10()); }
	)
	|
	(
		{ before(grammarAccess.getFuzzyExpressionAccess().getExclamationMarkKeyword_11()); }
		ExclamationMark
		{ after(grammarAccess.getFuzzyExpressionAccess().getExclamationMarkKeyword_11()); }
	)
	|
	(
		{ before(grammarAccess.getFuzzyExpressionAccess().getAsteriskKeyword_12()); }
		Asterisk
		{ after(grammarAccess.getFuzzyExpressionAccess().getAsteriskKeyword_12()); }
	)
	|
	(
		{ before(grammarAccess.getFuzzyExpressionAccess().getCommaKeyword_13()); }
		Comma
		{ after(grammarAccess.getFuzzyExpressionAccess().getCommaKeyword_13()); }
	)
	|
	(
		{ before(grammarAccess.getFuzzyExpressionAccess().getNumberSignKeyword_14()); }
		NumberSign
		{ after(grammarAccess.getFuzzyExpressionAccess().getNumberSignKeyword_14()); }
	)
	|
	(
		{ before(grammarAccess.getFuzzyExpressionAccess().getNumberSignNumberSignKeyword_15()); }
		NumberSignNumberSign
		{ after(grammarAccess.getFuzzyExpressionAccess().getNumberSignNumberSignKeyword_15()); }
	)
	|
	(
		{ before(grammarAccess.getFuzzyExpressionAccess().getStringKeyword_16()); }
		String
		{ after(grammarAccess.getFuzzyExpressionAccess().getStringKeyword_16()); }
	)
	|
	(
		{ before(grammarAccess.getFuzzyExpressionAccess().getReverseKeyword_17()); }
		Reverse
		{ after(grammarAccess.getFuzzyExpressionAccess().getReverseKeyword_17()); }
	)
	|
	(
		{ before(grammarAccess.getFuzzyExpressionAccess().getMetaKeyword_18()); }
		Meta
		{ after(grammarAccess.getFuzzyExpressionAccess().getMetaKeyword_18()); }
	)
	|
	(
		{ before(grammarAccess.getFuzzyExpressionAccess().getBufferKeyword_19()); }
		Buffer
		{ after(grammarAccess.getFuzzyExpressionAccess().getBufferKeyword_19()); }
	)
	|
	(
		{ before(grammarAccess.getFuzzyExpressionAccess().getTableKeyword_20()); }
		Table
		{ after(grammarAccess.getFuzzyExpressionAccess().getTableKeyword_20()); }
	)
	|
	(
		{ before(grammarAccess.getFuzzyExpressionAccess().getHasKeyword_21()); }
		Has
		{ after(grammarAccess.getFuzzyExpressionAccess().getHasKeyword_21()); }
	)
	|
	(
		{ before(grammarAccess.getFuzzyExpressionAccess().getHasntKeyword_22()); }
		Hasnt
		{ after(grammarAccess.getFuzzyExpressionAccess().getHasntKeyword_22()); }
	)
	|
	(
		{ before(grammarAccess.getFuzzyExpressionAccess().getClassKeyword_23()); }
		Class_1
		{ after(grammarAccess.getFuzzyExpressionAccess().getClassKeyword_23()); }
	)
	|
	(
		{ before(grammarAccess.getFuzzyExpressionAccess().getObjectKeyword_24()); }
		Object
		{ after(grammarAccess.getFuzzyExpressionAccess().getObjectKeyword_24()); }
	)
	|
	(
		{ before(grammarAccess.getFuzzyExpressionAccess().getLastKeyword_25()); }
		Last
		{ after(grammarAccess.getFuzzyExpressionAccess().getLastKeyword_25()); }
	)
	|
	(
		{ before(grammarAccess.getFuzzyExpressionAccess().getFirstKeyword_26()); }
		First
		{ after(grammarAccess.getFuzzyExpressionAccess().getFirstKeyword_26()); }
	)
	|
	(
		{ before(grammarAccess.getFuzzyExpressionAccess().getOnlyKeyword_27()); }
		Only
		{ after(grammarAccess.getFuzzyExpressionAccess().getOnlyKeyword_27()); }
	)
	|
	(
		{ before(grammarAccess.getFuzzyExpressionAccess().getAdditiveKeyword_28()); }
		Additive
		{ after(grammarAccess.getFuzzyExpressionAccess().getAdditiveKeyword_28()); }
	)
	|
	(
		{ before(grammarAccess.getFuzzyExpressionAccess().getAliasKeyword_29()); }
		Alias
		{ after(grammarAccess.getFuzzyExpressionAccess().getAliasKeyword_29()); }
	)
	|
	(
		{ before(grammarAccess.getFuzzyExpressionAccess().getFound_inKeyword_30()); }
		Found_in
		{ after(grammarAccess.getFuzzyExpressionAccess().getFound_inKeyword_30()); }
	)
	|
	(
		{ before(grammarAccess.getFuzzyExpressionAccess().getDefaultKeyword_31()); }
		Default_1
		{ after(grammarAccess.getFuzzyExpressionAccess().getDefaultKeyword_31()); }
	)
	|
	(
		{ before(grammarAccess.getFuzzyExpressionAccess().getRemoveKeyword_32()); }
		Remove
		{ after(grammarAccess.getFuzzyExpressionAccess().getRemoveKeyword_32()); }
	)
	|
	(
		{ before(grammarAccess.getFuzzyExpressionAccess().getMoveKeyword_33()); }
		Move
		{ after(grammarAccess.getFuzzyExpressionAccess().getMoveKeyword_33()); }
	)
	|
	(
		{ before(grammarAccess.getFuzzyExpressionAccess().getToKeyword_34()); }
		To
		{ after(grammarAccess.getFuzzyExpressionAccess().getToKeyword_34()); }
	)
	|
	(
		{ before(grammarAccess.getFuzzyExpressionAccess().getGiveKeyword_35()); }
		Give
		{ after(grammarAccess.getFuzzyExpressionAccess().getGiveKeyword_35()); }
	)
	|
	(
		{ before(grammarAccess.getFuzzyExpressionAccess().getInKeyword_36()); }
		In
		{ after(grammarAccess.getFuzzyExpressionAccess().getInKeyword_36()); }
	)
	|
	(
		{ before(grammarAccess.getFuzzyExpressionAccess().getNotinKeyword_37()); }
		Notin
		{ after(grammarAccess.getFuzzyExpressionAccess().getNotinKeyword_37()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getANY_OTHERTerminalRuleCall_0_0()); }
		RULE_ANY_OTHER
		{ after(grammarAccess.getExpressionAccess().getANY_OTHERTerminalRuleCall_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getSTRINGTerminalRuleCall_0_1()); }
		RULE_STRING
		{ after(grammarAccess.getExpressionAccess().getSTRINGTerminalRuleCall_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getINTTerminalRuleCall_0_2()); }
		RULE_INT
		{ after(grammarAccess.getExpressionAccess().getINTTerminalRuleCall_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getIDTerminalRuleCall_0_3()); }
		RULE_ID
		{ after(grammarAccess.getExpressionAccess().getIDTerminalRuleCall_0_3()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getML_COMMENTTerminalRuleCall_0_4()); }
		RULE_ML_COMMENT
		{ after(grammarAccess.getExpressionAccess().getML_COMMENTTerminalRuleCall_0_4()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getSL_COMMENTTerminalRuleCall_0_5()); }
		RULE_SL_COMMENT
		{ after(grammarAccess.getExpressionAccess().getSL_COMMENTTerminalRuleCall_0_5()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getWSTerminalRuleCall_0_6()); }
		RULE_WS
		{ after(grammarAccess.getExpressionAccess().getWSTerminalRuleCall_0_6()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getSTATICTerminalRuleCall_0_7()); }
		RULE_STATIC
		{ after(grammarAccess.getExpressionAccess().getSTATICTerminalRuleCall_0_7()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getPreprocessorDirectiveParserRuleCall_0_8()); }
		rulePreprocessorDirective
		{ after(grammarAccess.getExpressionAccess().getPreprocessorDirectiveParserRuleCall_0_8()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getBYTE_ARROWTerminalRuleCall_0_9()); }
		RULE_BYTE_ARROW
		{ after(grammarAccess.getExpressionAccess().getBYTE_ARROWTerminalRuleCall_0_9()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getWORD_ARROWTerminalRuleCall_0_10()); }
		RULE_WORD_ARROW
		{ after(grammarAccess.getExpressionAccess().getWORD_ARROWTerminalRuleCall_0_10()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getDIRECTIONSTerminalRuleCall_0_11()); }
		RULE_DIRECTIONS
		{ after(grammarAccess.getExpressionAccess().getDIRECTIONSTerminalRuleCall_0_11()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getHEXTerminalRuleCall_0_12()); }
		RULE_HEX
		{ after(grammarAccess.getExpressionAccess().getHEXTerminalRuleCall_0_12()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getBINARYTerminalRuleCall_0_13()); }
		RULE_BINARY
		{ after(grammarAccess.getExpressionAccess().getBINARYTerminalRuleCall_0_13()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getGroup_0()); }
		(rule__Primary__Group_0__0)
		{ after(grammarAccess.getPrimaryAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getNumberAssignment_1()); }
		(rule__Primary__NumberAssignment_1)
		{ after(grammarAccess.getPrimaryAccess().getNumberAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getGroup_2()); }
		(rule__Primary__Group_2__0)
		{ after(grammarAccess.getPrimaryAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getGroup_3()); }
		(rule__Primary__Group_3__0)
		{ after(grammarAccess.getPrimaryAccess().getGroup_3()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getGroup_4()); }
		(rule__Primary__Group_4__0)
		{ after(grammarAccess.getPrimaryAccess().getGroup_4()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getGroup_5()); }
		(rule__Primary__Group_5__0)
		{ after(grammarAccess.getPrimaryAccess().getGroup_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeAccess().getNameAssignment_2_0()); }
		(rule__Attribute__NameAssignment_2_0)
		{ after(grammarAccess.getAttributeAccess().getNameAssignment_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getAttributeAccess().getNameAssignment_2_1()); }
		(rule__Attribute__NameAssignment_2_1)
		{ after(grammarAccess.getAttributeAccess().getNameAssignment_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Directive__Group_20__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Directive__Group_20__0__Impl
	rule__Directive__Group_20__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Directive__Group_20__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirectiveAccess().getDirectiveAction_20_0()); }
	()
	{ after(grammarAccess.getDirectiveAccess().getDirectiveAction_20_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Directive__Group_20__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Directive__Group_20__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Directive__Group_20__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirectiveAccess().getAbbreviateDirectiveParserRuleCall_20_1()); }
	ruleAbbreviateDirective
	{ after(grammarAccess.getDirectiveAccess().getAbbreviateDirectiveParserRuleCall_20_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Directive__Group_21__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Directive__Group_21__0__Impl
	rule__Directive__Group_21__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Directive__Group_21__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirectiveAccess().getDirectiveAction_21_0()); }
	()
	{ after(grammarAccess.getDirectiveAccess().getDirectiveAction_21_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Directive__Group_21__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Directive__Group_21__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Directive__Group_21__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirectiveAccess().getAbortDirectiveParserRuleCall_21_1()); }
	ruleAbortDirective
	{ after(grammarAccess.getDirectiveAccess().getAbortDirectiveParserRuleCall_21_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Directive__Group_22__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Directive__Group_22__0__Impl
	rule__Directive__Group_22__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Directive__Group_22__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirectiveAccess().getDirectiveAction_22_0()); }
	()
	{ after(grammarAccess.getDirectiveAccess().getDirectiveAction_22_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Directive__Group_22__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Directive__Group_22__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Directive__Group_22__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirectiveAccess().getEndDirectiveParserRuleCall_22_1()); }
	ruleEndDirective
	{ after(grammarAccess.getDirectiveAccess().getEndDirectiveParserRuleCall_22_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Directive__Group_23__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Directive__Group_23__0__Impl
	rule__Directive__Group_23__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Directive__Group_23__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirectiveAccess().getDirectiveAction_23_0()); }
	()
	{ after(grammarAccess.getDirectiveAccess().getDirectiveAction_23_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Directive__Group_23__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Directive__Group_23__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Directive__Group_23__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirectiveAccess().getLowStringDirectiveParserRuleCall_23_1()); }
	ruleLowStringDirective
	{ after(grammarAccess.getDirectiveAccess().getLowStringDirectiveParserRuleCall_23_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Directive__Group_24__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Directive__Group_24__0__Impl
	rule__Directive__Group_24__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Directive__Group_24__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirectiveAccess().getDirectiveAction_24_0()); }
	()
	{ after(grammarAccess.getDirectiveAccess().getDirectiveAction_24_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Directive__Group_24__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Directive__Group_24__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Directive__Group_24__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirectiveAccess().getPreprocessorDirectiveParserRuleCall_24_1()); }
	rulePreprocessorDirective
	{ after(grammarAccess.getDirectiveAccess().getPreprocessorDirectiveParserRuleCall_24_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Directive__Group_25__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Directive__Group_25__0__Impl
	rule__Directive__Group_25__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Directive__Group_25__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirectiveAccess().getDirectiveAction_25_0()); }
	()
	{ after(grammarAccess.getDirectiveAccess().getDirectiveAction_25_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Directive__Group_25__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Directive__Group_25__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Directive__Group_25__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirectiveAccess().getFakeActionDirectiveParserRuleCall_25_1()); }
	ruleFakeActionDirective
	{ after(grammarAccess.getDirectiveAccess().getFakeActionDirectiveParserRuleCall_25_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Directive__Group_26__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Directive__Group_26__0__Impl
	rule__Directive__Group_26__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Directive__Group_26__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirectiveAccess().getDirectiveAction_26_0()); }
	()
	{ after(grammarAccess.getDirectiveAccess().getDirectiveAction_26_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Directive__Group_26__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Directive__Group_26__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Directive__Group_26__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirectiveAccess().getSystemFileDirectiveParserRuleCall_26_1()); }
	ruleSystemFileDirective
	{ after(grammarAccess.getDirectiveAccess().getSystemFileDirectiveParserRuleCall_26_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SystemFileDirective__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SystemFileDirective__Group__0__Impl
	rule__SystemFileDirective__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemFileDirective__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSystemFileDirectiveAccess().getSystem_fileKeyword_0()); }
	System_file
	{ after(grammarAccess.getSystemFileDirectiveAccess().getSystem_fileKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemFileDirective__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SystemFileDirective__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemFileDirective__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSystemFileDirectiveAccess().getSemicolonKeyword_1()); }
	Semicolon
	{ after(grammarAccess.getSystemFileDirectiveAccess().getSemicolonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FakeActionDirective__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FakeActionDirective__Group__0__Impl
	rule__FakeActionDirective__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FakeActionDirective__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFakeActionDirectiveAccess().getFake_ActionKeyword_0()); }
	Fake_Action
	{ after(grammarAccess.getFakeActionDirectiveAccess().getFake_ActionKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FakeActionDirective__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FakeActionDirective__Group__1__Impl
	rule__FakeActionDirective__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FakeActionDirective__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFakeActionDirectiveAccess().getIDTerminalRuleCall_1()); }
	RULE_ID
	{ after(grammarAccess.getFakeActionDirectiveAccess().getIDTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FakeActionDirective__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FakeActionDirective__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FakeActionDirective__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFakeActionDirectiveAccess().getSemicolonKeyword_2()); }
	Semicolon
	{ after(grammarAccess.getFakeActionDirectiveAccess().getSemicolonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AbbreviateDirective__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AbbreviateDirective__Group__0__Impl
	rule__AbbreviateDirective__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AbbreviateDirective__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbbreviateDirectiveAccess().getAbbreviateKeyword_0()); }
	Abbreviate
	{ after(grammarAccess.getAbbreviateDirectiveAccess().getAbbreviateKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbbreviateDirective__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AbbreviateDirective__Group__1__Impl
	rule__AbbreviateDirective__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AbbreviateDirective__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbbreviateDirectiveAccess().getSTRINGTerminalRuleCall_1()); }
	RULE_STRING
	{ after(grammarAccess.getAbbreviateDirectiveAccess().getSTRINGTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbbreviateDirective__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AbbreviateDirective__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AbbreviateDirective__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbbreviateDirectiveAccess().getSemicolonKeyword_2()); }
	Semicolon
	{ after(grammarAccess.getAbbreviateDirectiveAccess().getSemicolonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AbortDirective__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AbortDirective__Group__0__Impl
	rule__AbortDirective__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AbortDirective__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbortDirectiveAccess().getAbortKeyword_0()); }
	Abort
	{ after(grammarAccess.getAbortDirectiveAccess().getAbortKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbortDirective__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AbortDirective__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AbortDirective__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbortDirectiveAccess().getSemicolonKeyword_1()); }
	Semicolon
	{ after(grammarAccess.getAbortDirectiveAccess().getSemicolonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MessageDirective__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MessageDirective__Group__0__Impl
	rule__MessageDirective__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageDirective__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMessageDirectiveAccess().getMessageKeyword_0()); }
	Message
	{ after(grammarAccess.getMessageDirectiveAccess().getMessageKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageDirective__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MessageDirective__Group__1__Impl
	rule__MessageDirective__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageDirective__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMessageDirectiveAccess().getNameAssignment_1()); }
	(rule__MessageDirective__NameAssignment_1)?
	{ after(grammarAccess.getMessageDirectiveAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageDirective__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MessageDirective__Group__2__Impl
	rule__MessageDirective__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageDirective__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMessageDirectiveAccess().getStringAssignment_2()); }
	(rule__MessageDirective__StringAssignment_2)
	{ after(grammarAccess.getMessageDirectiveAccess().getStringAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageDirective__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MessageDirective__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageDirective__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMessageDirectiveAccess().getSemicolonKeyword_3()); }
	Semicolon
	{ after(grammarAccess.getMessageDirectiveAccess().getSemicolonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ZcharacterDirective__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ZcharacterDirective__Group__0__Impl
	rule__ZcharacterDirective__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ZcharacterDirective__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getZcharacterDirectiveAccess().getZcharacterKeyword_0()); }
	Zcharacter
	{ after(grammarAccess.getZcharacterDirectiveAccess().getZcharacterKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ZcharacterDirective__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ZcharacterDirective__Group__1__Impl
	rule__ZcharacterDirective__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ZcharacterDirective__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getZcharacterDirectiveAccess().getStringAssignment_1()); }
	(rule__ZcharacterDirective__StringAssignment_1)
	{ after(grammarAccess.getZcharacterDirectiveAccess().getStringAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ZcharacterDirective__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ZcharacterDirective__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ZcharacterDirective__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getZcharacterDirectiveAccess().getSemicolonKeyword_2()); }
	Semicolon
	{ after(grammarAccess.getZcharacterDirectiveAccess().getSemicolonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CommentDeclaration__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CommentDeclaration__Group_1__0__Impl
	rule__CommentDeclaration__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CommentDeclaration__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommentDeclarationAccess().getCommentDeclarationAction_1_0()); }
	()
	{ after(grammarAccess.getCommentDeclarationAccess().getCommentDeclarationAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommentDeclaration__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CommentDeclaration__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CommentDeclaration__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommentDeclarationAccess().getSL_COMMENTTerminalRuleCall_1_1()); }
	RULE_SL_COMMENT
	{ after(grammarAccess.getCommentDeclarationAccess().getSL_COMMENTTerminalRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IncludeDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IncludeDeclaration__Group__0__Impl
	rule__IncludeDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IncludeDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIncludeDeclarationAccess().getAlternatives_0()); }
	(rule__IncludeDeclaration__Alternatives_0)
	{ after(grammarAccess.getIncludeDeclarationAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IncludeDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IncludeDeclaration__Group__1__Impl
	rule__IncludeDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IncludeDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIncludeDeclarationAccess().getImportURIAssignment_1()); }
	(rule__IncludeDeclaration__ImportURIAssignment_1)
	{ after(grammarAccess.getIncludeDeclarationAccess().getImportURIAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IncludeDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IncludeDeclaration__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IncludeDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIncludeDeclarationAccess().getSemicolonKeyword_2()); }
	Semicolon
	{ after(grammarAccess.getIncludeDeclarationAccess().getSemicolonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EndDirective__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EndDirective__Group__0__Impl
	rule__EndDirective__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EndDirective__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEndDirectiveAccess().getEndKeyword_0()); }
	End
	{ after(grammarAccess.getEndDirectiveAccess().getEndKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EndDirective__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EndDirective__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EndDirective__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEndDirectiveAccess().getSemicolonKeyword_1()); }
	Semicolon
	{ after(grammarAccess.getEndDirectiveAccess().getSemicolonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyDirective__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PropertyDirective__Group__0__Impl
	rule__PropertyDirective__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDirective__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyDirectiveAccess().getPropertyKeyword_0()); }
	Property
	{ after(grammarAccess.getPropertyDirectiveAccess().getPropertyKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDirective__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PropertyDirective__Group__1__Impl
	rule__PropertyDirective__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDirective__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyDirectiveAccess().getAdditiveAssignment_1()); }
	(rule__PropertyDirective__AdditiveAssignment_1)?
	{ after(grammarAccess.getPropertyDirectiveAccess().getAdditiveAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDirective__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PropertyDirective__Group__2__Impl
	rule__PropertyDirective__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDirective__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyDirectiveAccess().getNameAssignment_2()); }
	(rule__PropertyDirective__NameAssignment_2)
	{ after(grammarAccess.getPropertyDirectiveAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDirective__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PropertyDirective__Group__3__Impl
	rule__PropertyDirective__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDirective__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyDirectiveAccess().getValueAssignment_3()); }
	(rule__PropertyDirective__ValueAssignment_3)?
	{ after(grammarAccess.getPropertyDirectiveAccess().getValueAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDirective__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PropertyDirective__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDirective__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyDirectiveAccess().getSemicolonKeyword_4()); }
	Semicolon
	{ after(grammarAccess.getPropertyDirectiveAccess().getSemicolonKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LowStringDirective__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LowStringDirective__Group__0__Impl
	rule__LowStringDirective__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LowStringDirective__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLowStringDirectiveAccess().getLowstringKeyword_0()); }
	Lowstring
	{ after(grammarAccess.getLowStringDirectiveAccess().getLowstringKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LowStringDirective__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LowStringDirective__Group__1__Impl
	rule__LowStringDirective__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LowStringDirective__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLowStringDirectiveAccess().getIDTerminalRuleCall_1()); }
	RULE_ID
	{ after(grammarAccess.getLowStringDirectiveAccess().getIDTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LowStringDirective__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LowStringDirective__Group__2__Impl
	rule__LowStringDirective__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LowStringDirective__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLowStringDirectiveAccess().getSTRINGTerminalRuleCall_2()); }
	RULE_STRING
	{ after(grammarAccess.getLowStringDirectiveAccess().getSTRINGTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LowStringDirective__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LowStringDirective__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LowStringDirective__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLowStringDirectiveAccess().getSemicolonKeyword_3()); }
	Semicolon
	{ after(grammarAccess.getLowStringDirectiveAccess().getSemicolonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ReleaseDirective__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReleaseDirective__Group__0__Impl
	rule__ReleaseDirective__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReleaseDirective__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReleaseDirectiveAccess().getNameAssignment_0()); }
	(rule__ReleaseDirective__NameAssignment_0)
	{ after(grammarAccess.getReleaseDirectiveAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReleaseDirective__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReleaseDirective__Group__1__Impl
	rule__ReleaseDirective__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ReleaseDirective__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReleaseDirectiveAccess().getVersionAssignment_1()); }
	(rule__ReleaseDirective__VersionAssignment_1)
	{ after(grammarAccess.getReleaseDirectiveAccess().getVersionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReleaseDirective__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReleaseDirective__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReleaseDirective__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReleaseDirectiveAccess().getSemicolonKeyword_2()); }
	Semicolon
	{ after(grammarAccess.getReleaseDirectiveAccess().getSemicolonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ReplaceDirective__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReplaceDirective__Group__0__Impl
	rule__ReplaceDirective__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReplaceDirective__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReplaceDirectiveAccess().getNameAssignment_0()); }
	(rule__ReplaceDirective__NameAssignment_0)
	{ after(grammarAccess.getReplaceDirectiveAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReplaceDirective__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReplaceDirective__Group__1__Impl
	rule__ReplaceDirective__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ReplaceDirective__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReplaceDirectiveAccess().getIdAssignment_1()); }
	(rule__ReplaceDirective__IdAssignment_1)
	{ after(grammarAccess.getReplaceDirectiveAccess().getIdAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReplaceDirective__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReplaceDirective__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReplaceDirective__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReplaceDirectiveAccess().getSemicolonKeyword_2()); }
	Semicolon
	{ after(grammarAccess.getReplaceDirectiveAccess().getSemicolonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SerialDirective__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SerialDirective__Group__0__Impl
	rule__SerialDirective__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SerialDirective__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSerialDirectiveAccess().getNameAssignment_0()); }
	(rule__SerialDirective__NameAssignment_0)
	{ after(grammarAccess.getSerialDirectiveAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SerialDirective__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SerialDirective__Group__1__Impl
	rule__SerialDirective__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SerialDirective__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSerialDirectiveAccess().getSerialAssignment_1()); }
	(rule__SerialDirective__SerialAssignment_1)
	{ after(grammarAccess.getSerialDirectiveAccess().getSerialAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SerialDirective__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SerialDirective__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SerialDirective__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSerialDirectiveAccess().getSemicolonKeyword_2()); }
	Semicolon
	{ after(grammarAccess.getSerialDirectiveAccess().getSemicolonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GlobalConstantDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GlobalConstantDeclaration__Group__0__Impl
	rule__GlobalConstantDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalConstantDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGlobalConstantDeclarationAccess().getConstantKeyword_0()); }
	Constant
	{ after(grammarAccess.getGlobalConstantDeclarationAccess().getConstantKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalConstantDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GlobalConstantDeclaration__Group__1__Impl
	rule__GlobalConstantDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalConstantDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGlobalConstantDeclarationAccess().getNameAssignment_1()); }
	(rule__GlobalConstantDeclaration__NameAssignment_1)
	{ after(grammarAccess.getGlobalConstantDeclarationAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalConstantDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GlobalConstantDeclaration__Group__2__Impl
	rule__GlobalConstantDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalConstantDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGlobalConstantDeclarationAccess().getEqualsSignKeyword_2()); }
	(EqualsSign)?
	{ after(grammarAccess.getGlobalConstantDeclarationAccess().getEqualsSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalConstantDeclaration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GlobalConstantDeclaration__Group__3__Impl
	rule__GlobalConstantDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalConstantDeclaration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGlobalConstantDeclarationAccess().getValueAssignment_3()); }
	(rule__GlobalConstantDeclaration__ValueAssignment_3)?
	{ after(grammarAccess.getGlobalConstantDeclarationAccess().getValueAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalConstantDeclaration__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GlobalConstantDeclaration__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalConstantDeclaration__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGlobalConstantDeclarationAccess().getSemicolonKeyword_4()); }
	Semicolon
	{ after(grammarAccess.getGlobalConstantDeclarationAccess().getSemicolonKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GlobalDefaultDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GlobalDefaultDeclaration__Group__0__Impl
	rule__GlobalDefaultDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalDefaultDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGlobalDefaultDeclarationAccess().getDefaultKeyword_0()); }
	Default_1
	{ after(grammarAccess.getGlobalDefaultDeclarationAccess().getDefaultKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalDefaultDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GlobalDefaultDeclaration__Group__1__Impl
	rule__GlobalDefaultDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalDefaultDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGlobalDefaultDeclarationAccess().getNameAssignment_1()); }
	(rule__GlobalDefaultDeclaration__NameAssignment_1)
	{ after(grammarAccess.getGlobalDefaultDeclarationAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalDefaultDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GlobalDefaultDeclaration__Group__2__Impl
	rule__GlobalDefaultDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalDefaultDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGlobalDefaultDeclarationAccess().getEqualsSignKeyword_2()); }
	(EqualsSign)?
	{ after(grammarAccess.getGlobalDefaultDeclarationAccess().getEqualsSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalDefaultDeclaration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GlobalDefaultDeclaration__Group__3__Impl
	rule__GlobalDefaultDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalDefaultDeclaration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGlobalDefaultDeclarationAccess().getValueAssignment_3()); }
	(rule__GlobalDefaultDeclaration__ValueAssignment_3)?
	{ after(grammarAccess.getGlobalDefaultDeclarationAccess().getValueAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalDefaultDeclaration__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GlobalDefaultDeclaration__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalDefaultDeclaration__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGlobalDefaultDeclarationAccess().getSemicolonKeyword_4()); }
	Semicolon
	{ after(grammarAccess.getGlobalDefaultDeclarationAccess().getSemicolonKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchesDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SwitchesDeclaration__Group__0__Impl
	rule__SwitchesDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchesDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitchesDeclarationAccess().getNameAssignment_0()); }
	(rule__SwitchesDeclaration__NameAssignment_0)
	{ after(grammarAccess.getSwitchesDeclarationAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchesDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SwitchesDeclaration__Group__1__Impl
	rule__SwitchesDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchesDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitchesDeclarationAccess().getSwitchesAssignment_1()); }
	(rule__SwitchesDeclaration__SwitchesAssignment_1)*
	{ after(grammarAccess.getSwitchesDeclarationAccess().getSwitchesAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchesDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SwitchesDeclaration__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchesDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitchesDeclarationAccess().getSemicolonKeyword_2()); }
	Semicolon
	{ after(grammarAccess.getSwitchesDeclarationAccess().getSemicolonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GlobalDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GlobalDeclaration__Group__0__Impl
	rule__GlobalDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGlobalDeclarationAccess().getGlobalKeyword_0()); }
	Global
	{ after(grammarAccess.getGlobalDeclarationAccess().getGlobalKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GlobalDeclaration__Group__1__Impl
	rule__GlobalDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGlobalDeclarationAccess().getNameAssignment_1()); }
	(rule__GlobalDeclaration__NameAssignment_1)
	{ after(grammarAccess.getGlobalDeclarationAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GlobalDeclaration__Group__2__Impl
	rule__GlobalDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGlobalDeclarationAccess().getGroup_2()); }
	(rule__GlobalDeclaration__Group_2__0)?
	{ after(grammarAccess.getGlobalDeclarationAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalDeclaration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GlobalDeclaration__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalDeclaration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGlobalDeclarationAccess().getSemicolonKeyword_3()); }
	Semicolon
	{ after(grammarAccess.getGlobalDeclarationAccess().getSemicolonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GlobalDeclaration__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GlobalDeclaration__Group_2__0__Impl
	rule__GlobalDeclaration__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalDeclaration__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGlobalDeclarationAccess().getEqualsSignKeyword_2_0()); }
	EqualsSign
	{ after(grammarAccess.getGlobalDeclarationAccess().getEqualsSignKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalDeclaration__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GlobalDeclaration__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalDeclaration__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGlobalDeclarationAccess().getValueAssignment_2_1()); }
	(rule__GlobalDeclaration__ValueAssignment_2_1)
	{ after(grammarAccess.getGlobalDeclarationAccess().getValueAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeDeclaration__Group__0__Impl
	rule__AttributeDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeDeclarationAccess().getAttributeDeclarationAction_0()); }
	()
	{ after(grammarAccess.getAttributeDeclarationAccess().getAttributeDeclarationAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeDeclaration__Group__1__Impl
	rule__AttributeDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeDeclarationAccess().getAttributeKeyword_1()); }
	Attribute
	{ after(grammarAccess.getAttributeDeclarationAccess().getAttributeKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeDeclaration__Group__2__Impl
	rule__AttributeDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeDeclarationAccess().getGroup_2()); }
	(rule__AttributeDeclaration__Group_2__0)
	{ after(grammarAccess.getAttributeDeclarationAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDeclaration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeDeclaration__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDeclaration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeDeclarationAccess().getSemicolonKeyword_3()); }
	Semicolon
	{ after(grammarAccess.getAttributeDeclarationAccess().getSemicolonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeDeclaration__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeDeclaration__Group_2__0__Impl
	rule__AttributeDeclaration__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDeclaration__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeDeclarationAccess().getNameAssignment_2_0()); }
	(rule__AttributeDeclaration__NameAssignment_2_0)
	{ after(grammarAccess.getAttributeDeclarationAccess().getNameAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDeclaration__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeDeclaration__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDeclaration__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeDeclarationAccess().getGroup_2_1()); }
	(rule__AttributeDeclaration__Group_2_1__0)?
	{ after(grammarAccess.getAttributeDeclarationAccess().getGroup_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeDeclaration__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeDeclaration__Group_2_1__0__Impl
	rule__AttributeDeclaration__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDeclaration__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeDeclarationAccess().getAliasKeyword_2_1_0()); }
	Alias
	{ after(grammarAccess.getAttributeDeclarationAccess().getAliasKeyword_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDeclaration__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeDeclaration__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDeclaration__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeDeclarationAccess().getAliasedAttributeAssignment_2_1_1()); }
	(rule__AttributeDeclaration__AliasedAttributeAssignment_2_1_1)
	{ after(grammarAccess.getAttributeDeclarationAccess().getAliasedAttributeAssignment_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PropertyDeclaration__Group__0__Impl
	rule__PropertyDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyDeclarationAccess().getPropertyKeyword_0()); }
	Property
	{ after(grammarAccess.getPropertyDeclarationAccess().getPropertyKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PropertyDeclaration__Group__1__Impl
	rule__PropertyDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyDeclarationAccess().getAlternatives_1()); }
	(rule__PropertyDeclaration__Alternatives_1)
	{ after(grammarAccess.getPropertyDeclarationAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PropertyDeclaration__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyDeclarationAccess().getSemicolonKeyword_2()); }
	Semicolon
	{ after(grammarAccess.getPropertyDeclarationAccess().getSemicolonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyDeclaration__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PropertyDeclaration__Group_1_0__0__Impl
	rule__PropertyDeclaration__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDeclaration__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyDeclarationAccess().getNameAssignment_1_0_0()); }
	(rule__PropertyDeclaration__NameAssignment_1_0_0)
	{ after(grammarAccess.getPropertyDeclarationAccess().getNameAssignment_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDeclaration__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PropertyDeclaration__Group_1_0__1__Impl
	rule__PropertyDeclaration__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDeclaration__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyDeclarationAccess().getAdditiveAssignment_1_0_1()); }
	(rule__PropertyDeclaration__AdditiveAssignment_1_0_1)?
	{ after(grammarAccess.getPropertyDeclarationAccess().getAdditiveAssignment_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDeclaration__Group_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PropertyDeclaration__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDeclaration__Group_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyDeclarationAccess().getValueAssignment_1_0_2()); }
	(rule__PropertyDeclaration__ValueAssignment_1_0_2)
	{ after(grammarAccess.getPropertyDeclarationAccess().getValueAssignment_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyDeclaration__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PropertyDeclaration__Group_1_1__0__Impl
	rule__PropertyDeclaration__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDeclaration__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyDeclarationAccess().getNameAssignment_1_1_0()); }
	(rule__PropertyDeclaration__NameAssignment_1_1_0)
	{ after(grammarAccess.getPropertyDeclarationAccess().getNameAssignment_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDeclaration__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PropertyDeclaration__Group_1_1__1__Impl
	rule__PropertyDeclaration__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDeclaration__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyDeclarationAccess().getAliasKeyword_1_1_1()); }
	Alias
	{ after(grammarAccess.getPropertyDeclarationAccess().getAliasKeyword_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDeclaration__Group_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PropertyDeclaration__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDeclaration__Group_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyDeclarationAccess().getAliasedPropertyAssignment_1_1_2()); }
	(rule__PropertyDeclaration__AliasedPropertyAssignment_1_1_2)
	{ after(grammarAccess.getPropertyDeclarationAccess().getAliasedPropertyAssignment_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ClassDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassDeclaration__Group__0__Impl
	rule__ClassDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassDeclarationAccess().getClassDeclarationAction_0()); }
	()
	{ after(grammarAccess.getClassDeclarationAccess().getClassDeclarationAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassDeclaration__Group__1__Impl
	rule__ClassDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassDeclarationAccess().getClassKeyword_1()); }
	Class_1
	{ after(grammarAccess.getClassDeclarationAccess().getClassKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassDeclaration__Group__2__Impl
	rule__ClassDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassDeclarationAccess().getNameAssignment_2()); }
	(rule__ClassDeclaration__NameAssignment_2)
	{ after(grammarAccess.getClassDeclarationAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassDeclaration__Group__3__Impl
	rule__ClassDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassDeclarationAccess().getGroup_3()); }
	(rule__ClassDeclaration__Group_3__0)?
	{ after(grammarAccess.getClassDeclarationAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassDeclaration__Group__4__Impl
	rule__ClassDeclaration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassDeclarationAccess().getPropertiesAssignment_4()); }
	(rule__ClassDeclaration__PropertiesAssignment_4)?
	{ after(grammarAccess.getClassDeclarationAccess().getPropertiesAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassDeclaration__Group__5__Impl
	rule__ClassDeclaration__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassDeclarationAccess().getGroup_5()); }
	(rule__ClassDeclaration__Group_5__0)*
	{ after(grammarAccess.getClassDeclarationAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassDeclaration__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassDeclarationAccess().getSemicolonKeyword_6()); }
	Semicolon
	{ after(grammarAccess.getClassDeclarationAccess().getSemicolonKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ClassDeclaration__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassDeclaration__Group_3__0__Impl
	rule__ClassDeclaration__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassDeclarationAccess().getCardinalityAssignment_3_0()); }
	(rule__ClassDeclaration__CardinalityAssignment_3_0)
	{ after(grammarAccess.getClassDeclarationAccess().getCardinalityAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassDeclaration__Group_3__1__Impl
	rule__ClassDeclaration__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassDeclarationAccess().getMaxAssignment_3_1()); }
	(rule__ClassDeclaration__MaxAssignment_3_1)
	{ after(grammarAccess.getClassDeclarationAccess().getMaxAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassDeclaration__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassDeclarationAccess().getRightParenthesisKeyword_3_2()); }
	RightParenthesis
	{ after(grammarAccess.getClassDeclarationAccess().getRightParenthesisKeyword_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ClassDeclaration__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassDeclaration__Group_5__0__Impl
	rule__ClassDeclaration__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassDeclarationAccess().getCommaKeyword_5_0()); }
	(Comma)?
	{ after(grammarAccess.getClassDeclarationAccess().getCommaKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassDeclaration__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassDeclarationAccess().getPropertiesAssignment_5_1()); }
	(rule__ClassDeclaration__PropertiesAssignment_5_1)
	{ after(grammarAccess.getClassDeclarationAccess().getPropertiesAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectDeclaration__Group__0__Impl
	rule__ObjectDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectDeclarationAccess().getGroup_0()); }
	(rule__ObjectDeclaration__Group_0__0)
	{ after(grammarAccess.getObjectDeclarationAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectDeclaration__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectDeclarationAccess().getSemicolonKeyword_1()); }
	Semicolon
	{ after(grammarAccess.getObjectDeclarationAccess().getSemicolonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectDeclaration__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectDeclaration__Group_0__0__Impl
	rule__ObjectDeclaration__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectDeclaration__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectDeclarationAccess().getObjectDeclarationAction_0_0()); }
	()
	{ after(grammarAccess.getObjectDeclarationAccess().getObjectDeclarationAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectDeclaration__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectDeclaration__Group_0__1__Impl
	rule__ObjectDeclaration__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectDeclaration__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectDeclarationAccess().getAlternatives_0_1()); }
	(rule__ObjectDeclaration__Alternatives_0_1)
	{ after(grammarAccess.getObjectDeclarationAccess().getAlternatives_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectDeclaration__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectDeclaration__Group_0__2__Impl
	rule__ObjectDeclaration__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectDeclaration__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectDeclarationAccess().getLevelAssignment_0_2()); }
	(rule__ObjectDeclaration__LevelAssignment_0_2)*
	{ after(grammarAccess.getObjectDeclarationAccess().getLevelAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectDeclaration__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectDeclaration__Group_0__3__Impl
	rule__ObjectDeclaration__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectDeclaration__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectDeclarationAccess().getNameAssignment_0_3()); }
	(rule__ObjectDeclaration__NameAssignment_0_3)
	{ after(grammarAccess.getObjectDeclarationAccess().getNameAssignment_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectDeclaration__Group_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectDeclaration__Group_0__4__Impl
	rule__ObjectDeclaration__Group_0__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectDeclaration__Group_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectDeclarationAccess().getHeadlineAssignment_0_4()); }
	(rule__ObjectDeclaration__HeadlineAssignment_0_4)?
	{ after(grammarAccess.getObjectDeclarationAccess().getHeadlineAssignment_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectDeclaration__Group_0__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectDeclaration__Group_0__5__Impl
	rule__ObjectDeclaration__Group_0__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectDeclaration__Group_0__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectDeclarationAccess().getInAssignment_0_5()); }
	(rule__ObjectDeclaration__InAssignment_0_5)?
	{ after(grammarAccess.getObjectDeclarationAccess().getInAssignment_0_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectDeclaration__Group_0__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectDeclaration__Group_0__6__Impl
	rule__ObjectDeclaration__Group_0__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectDeclaration__Group_0__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectDeclarationAccess().getPropertiesAssignment_0_6()); }
	(rule__ObjectDeclaration__PropertiesAssignment_0_6)?
	{ after(grammarAccess.getObjectDeclarationAccess().getPropertiesAssignment_0_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectDeclaration__Group_0__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectDeclaration__Group_0__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectDeclaration__Group_0__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectDeclarationAccess().getGroup_0_7()); }
	(rule__ObjectDeclaration__Group_0_7__0)*
	{ after(grammarAccess.getObjectDeclarationAccess().getGroup_0_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectDeclaration__Group_0_7__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectDeclaration__Group_0_7__0__Impl
	rule__ObjectDeclaration__Group_0_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectDeclaration__Group_0_7__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectDeclarationAccess().getCommaKeyword_0_7_0()); }
	(Comma)?
	{ after(grammarAccess.getObjectDeclarationAccess().getCommaKeyword_0_7_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectDeclaration__Group_0_7__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectDeclaration__Group_0_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectDeclaration__Group_0_7__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectDeclarationAccess().getPropertiesAssignment_0_7_1()); }
	(rule__ObjectDeclaration__PropertiesAssignment_0_7_1)
	{ after(grammarAccess.getObjectDeclarationAccess().getPropertiesAssignment_0_7_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IdlessObjectDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IdlessObjectDeclaration__Group__0__Impl
	rule__IdlessObjectDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IdlessObjectDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIdlessObjectDeclarationAccess().getObjectDeclarationAction_0()); }
	()
	{ after(grammarAccess.getIdlessObjectDeclarationAccess().getObjectDeclarationAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IdlessObjectDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IdlessObjectDeclaration__Group__1__Impl
	rule__IdlessObjectDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IdlessObjectDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIdlessObjectDeclarationAccess().getAlternatives_1()); }
	(rule__IdlessObjectDeclaration__Alternatives_1)
	{ after(grammarAccess.getIdlessObjectDeclarationAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IdlessObjectDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IdlessObjectDeclaration__Group__2__Impl
	rule__IdlessObjectDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IdlessObjectDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIdlessObjectDeclarationAccess().getLevelAssignment_2()); }
	(rule__IdlessObjectDeclaration__LevelAssignment_2)*
	{ after(grammarAccess.getIdlessObjectDeclarationAccess().getLevelAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IdlessObjectDeclaration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IdlessObjectDeclaration__Group__3__Impl
	rule__IdlessObjectDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IdlessObjectDeclaration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIdlessObjectDeclarationAccess().getNameAssignment_3()); }
	(rule__IdlessObjectDeclaration__NameAssignment_3)?
	{ after(grammarAccess.getIdlessObjectDeclarationAccess().getNameAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IdlessObjectDeclaration__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IdlessObjectDeclaration__Group__4__Impl
	rule__IdlessObjectDeclaration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__IdlessObjectDeclaration__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIdlessObjectDeclarationAccess().getInAssignment_4()); }
	(rule__IdlessObjectDeclaration__InAssignment_4)?
	{ after(grammarAccess.getIdlessObjectDeclarationAccess().getInAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IdlessObjectDeclaration__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IdlessObjectDeclaration__Group__5__Impl
	rule__IdlessObjectDeclaration__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__IdlessObjectDeclaration__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIdlessObjectDeclarationAccess().getPropertiesAssignment_5()); }
	(rule__IdlessObjectDeclaration__PropertiesAssignment_5)?
	{ after(grammarAccess.getIdlessObjectDeclarationAccess().getPropertiesAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IdlessObjectDeclaration__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IdlessObjectDeclaration__Group__6__Impl
	rule__IdlessObjectDeclaration__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__IdlessObjectDeclaration__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIdlessObjectDeclarationAccess().getGroup_6()); }
	(rule__IdlessObjectDeclaration__Group_6__0)*
	{ after(grammarAccess.getIdlessObjectDeclarationAccess().getGroup_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IdlessObjectDeclaration__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IdlessObjectDeclaration__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IdlessObjectDeclaration__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIdlessObjectDeclarationAccess().getSemicolonKeyword_7()); }
	Semicolon
	{ after(grammarAccess.getIdlessObjectDeclarationAccess().getSemicolonKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IdlessObjectDeclaration__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IdlessObjectDeclaration__Group_6__0__Impl
	rule__IdlessObjectDeclaration__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IdlessObjectDeclaration__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIdlessObjectDeclarationAccess().getCommaKeyword_6_0()); }
	(Comma)?
	{ after(grammarAccess.getIdlessObjectDeclarationAccess().getCommaKeyword_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IdlessObjectDeclaration__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IdlessObjectDeclaration__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IdlessObjectDeclaration__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIdlessObjectDeclarationAccess().getPropertiesAssignment_6_1()); }
	(rule__IdlessObjectDeclaration__PropertiesAssignment_6_1)
	{ after(grammarAccess.getIdlessObjectDeclarationAccess().getPropertiesAssignment_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NearbyDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NearbyDeclaration__Group__0__Impl
	rule__NearbyDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NearbyDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNearbyDeclarationAccess().getObjectDeclarationAction_0()); }
	()
	{ after(grammarAccess.getNearbyDeclarationAccess().getObjectDeclarationAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NearbyDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NearbyDeclaration__Group__1__Impl
	rule__NearbyDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NearbyDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNearbyDeclarationAccess().getNearbyKeyword_1()); }
	Nearby
	{ after(grammarAccess.getNearbyDeclarationAccess().getNearbyKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NearbyDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NearbyDeclaration__Group__2__Impl
	rule__NearbyDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NearbyDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNearbyDeclarationAccess().getNameAssignment_2()); }
	(rule__NearbyDeclaration__NameAssignment_2)?
	{ after(grammarAccess.getNearbyDeclarationAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NearbyDeclaration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NearbyDeclaration__Group__3__Impl
	rule__NearbyDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__NearbyDeclaration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNearbyDeclarationAccess().getHeadlineAssignment_3()); }
	(rule__NearbyDeclaration__HeadlineAssignment_3)
	{ after(grammarAccess.getNearbyDeclarationAccess().getHeadlineAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NearbyDeclaration__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NearbyDeclaration__Group__4__Impl
	rule__NearbyDeclaration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__NearbyDeclaration__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNearbyDeclarationAccess().getInAssignment_4()); }
	(rule__NearbyDeclaration__InAssignment_4)?
	{ after(grammarAccess.getNearbyDeclarationAccess().getInAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NearbyDeclaration__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NearbyDeclaration__Group__5__Impl
	rule__NearbyDeclaration__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__NearbyDeclaration__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNearbyDeclarationAccess().getPropertiesAssignment_5()); }
	(rule__NearbyDeclaration__PropertiesAssignment_5)?
	{ after(grammarAccess.getNearbyDeclarationAccess().getPropertiesAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NearbyDeclaration__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NearbyDeclaration__Group__6__Impl
	rule__NearbyDeclaration__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__NearbyDeclaration__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNearbyDeclarationAccess().getGroup_6()); }
	(rule__NearbyDeclaration__Group_6__0)*
	{ after(grammarAccess.getNearbyDeclarationAccess().getGroup_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NearbyDeclaration__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NearbyDeclaration__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NearbyDeclaration__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNearbyDeclarationAccess().getSemicolonKeyword_7()); }
	Semicolon
	{ after(grammarAccess.getNearbyDeclarationAccess().getSemicolonKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NearbyDeclaration__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NearbyDeclaration__Group_6__0__Impl
	rule__NearbyDeclaration__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NearbyDeclaration__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNearbyDeclarationAccess().getCommaKeyword_6_0()); }
	(Comma)?
	{ after(grammarAccess.getNearbyDeclarationAccess().getCommaKeyword_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NearbyDeclaration__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NearbyDeclaration__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NearbyDeclaration__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNearbyDeclarationAccess().getPropertiesAssignment_6_1()); }
	(rule__NearbyDeclaration__PropertiesAssignment_6_1)
	{ after(grammarAccess.getNearbyDeclarationAccess().getPropertiesAssignment_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VerbDeclaration__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VerbDeclaration__Group_0__0__Impl
	rule__VerbDeclaration__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VerbDeclaration__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVerbDeclarationAccess().getVerbDeclarationAction_0_0()); }
	()
	{ after(grammarAccess.getVerbDeclarationAccess().getVerbDeclarationAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VerbDeclaration__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VerbDeclaration__Group_0__1__Impl
	rule__VerbDeclaration__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VerbDeclaration__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVerbDeclarationAccess().getNameAssignment_0_1()); }
	(rule__VerbDeclaration__NameAssignment_0_1)
	{ after(grammarAccess.getVerbDeclarationAccess().getNameAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VerbDeclaration__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VerbDeclaration__Group_0__2__Impl
	rule__VerbDeclaration__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__VerbDeclaration__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVerbDeclarationAccess().getMetaAssignment_0_2()); }
	(rule__VerbDeclaration__MetaAssignment_0_2)?
	{ after(grammarAccess.getVerbDeclarationAccess().getMetaAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VerbDeclaration__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VerbDeclaration__Group_0__3__Impl
	rule__VerbDeclaration__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__VerbDeclaration__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVerbDeclarationAccess().getSynAssignment_0_3()); }
	(rule__VerbDeclaration__SynAssignment_0_3)*
	{ after(grammarAccess.getVerbDeclarationAccess().getSynAssignment_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VerbDeclaration__Group_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VerbDeclaration__Group_0__4__Impl
	rule__VerbDeclaration__Group_0__5
;
finally {
	restoreStackSize(stackSize);
}

rule__VerbDeclaration__Group_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVerbDeclarationAccess().getDefintionsAssignment_0_4()); }
	(rule__VerbDeclaration__DefintionsAssignment_0_4)*
	{ after(grammarAccess.getVerbDeclarationAccess().getDefintionsAssignment_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VerbDeclaration__Group_0__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VerbDeclaration__Group_0__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VerbDeclaration__Group_0__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVerbDeclarationAccess().getSemicolonKeyword_0_5()); }
	Semicolon
	{ after(grammarAccess.getVerbDeclarationAccess().getSemicolonKeyword_0_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VerbDeclaration__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VerbDeclaration__Group_1__0__Impl
	rule__VerbDeclaration__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VerbDeclaration__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVerbDeclarationAccess().getVerbDeclarationAction_1_0()); }
	()
	{ after(grammarAccess.getVerbDeclarationAccess().getVerbDeclarationAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VerbDeclaration__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VerbDeclaration__Group_1__1__Impl
	rule__VerbDeclaration__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VerbDeclaration__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVerbDeclarationAccess().getNameAssignment_1_1()); }
	(rule__VerbDeclaration__NameAssignment_1_1)
	{ after(grammarAccess.getVerbDeclarationAccess().getNameAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VerbDeclaration__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VerbDeclaration__Group_1__2__Impl
	rule__VerbDeclaration__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__VerbDeclaration__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVerbDeclarationAccess().getOnlyAssignment_1_2()); }
	(rule__VerbDeclaration__OnlyAssignment_1_2)?
	{ after(grammarAccess.getVerbDeclarationAccess().getOnlyAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VerbDeclaration__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VerbDeclaration__Group_1__3__Impl
	rule__VerbDeclaration__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__VerbDeclaration__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVerbDeclarationAccess().getSynAssignment_1_3()); }
	(rule__VerbDeclaration__SynAssignment_1_3)*
	{ after(grammarAccess.getVerbDeclarationAccess().getSynAssignment_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VerbDeclaration__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VerbDeclaration__Group_1__4__Impl
	rule__VerbDeclaration__Group_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__VerbDeclaration__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVerbDeclarationAccess().getAlternatives_1_4()); }
	(rule__VerbDeclaration__Alternatives_1_4)?
	{ after(grammarAccess.getVerbDeclarationAccess().getAlternatives_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VerbDeclaration__Group_1__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VerbDeclaration__Group_1__5__Impl
	rule__VerbDeclaration__Group_1__6
;
finally {
	restoreStackSize(stackSize);
}

rule__VerbDeclaration__Group_1__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVerbDeclarationAccess().getDefintionsAssignment_1_5()); }
	(rule__VerbDeclaration__DefintionsAssignment_1_5)*
	{ after(grammarAccess.getVerbDeclarationAccess().getDefintionsAssignment_1_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VerbDeclaration__Group_1__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VerbDeclaration__Group_1__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VerbDeclaration__Group_1__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVerbDeclarationAccess().getSemicolonKeyword_1_6()); }
	Semicolon
	{ after(grammarAccess.getVerbDeclarationAccess().getSemicolonKeyword_1_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VerbBody__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VerbBody__Group__0__Impl
	rule__VerbBody__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VerbBody__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVerbBodyAccess().getAsteriskKeyword_0()); }
	Asterisk
	{ after(grammarAccess.getVerbBodyAccess().getAsteriskKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VerbBody__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VerbBody__Group__1__Impl
	rule__VerbBody__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VerbBody__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVerbBodyAccess().getDefinitionsAssignment_1()); }
	(rule__VerbBody__DefinitionsAssignment_1)*
	{ after(grammarAccess.getVerbBodyAccess().getDefinitionsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VerbBody__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VerbBody__Group__2__Impl
	rule__VerbBody__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__VerbBody__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVerbBodyAccess().getBYTE_ARROWTerminalRuleCall_2()); }
	RULE_BYTE_ARROW
	{ after(grammarAccess.getVerbBodyAccess().getBYTE_ARROWTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VerbBody__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VerbBody__Group__3__Impl
	rule__VerbBody__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__VerbBody__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVerbBodyAccess().getNameAssignment_3()); }
	(rule__VerbBody__NameAssignment_3)
	{ after(grammarAccess.getVerbBodyAccess().getNameAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VerbBody__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VerbBody__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VerbBody__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVerbBodyAccess().getReverseAssignment_4()); }
	(rule__VerbBody__ReverseAssignment_4)?
	{ after(grammarAccess.getVerbBodyAccess().getReverseAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VerbAssignment__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VerbAssignment__Group_1__0__Impl
	rule__VerbAssignment__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VerbAssignment__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVerbAssignmentAccess().getIDTerminalRuleCall_1_0()); }
	RULE_ID
	{ after(grammarAccess.getVerbAssignmentAccess().getIDTerminalRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VerbAssignment__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VerbAssignment__Group_1__1__Impl
	rule__VerbAssignment__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VerbAssignment__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVerbAssignmentAccess().getEqualsSignKeyword_1_1()); }
	EqualsSign
	{ after(grammarAccess.getVerbAssignmentAccess().getEqualsSignKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VerbAssignment__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VerbAssignment__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VerbAssignment__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVerbAssignmentAccess().getPrimaryParserRuleCall_1_2()); }
	rulePrimary
	{ after(grammarAccess.getVerbAssignmentAccess().getPrimaryParserRuleCall_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VerbAssignment__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VerbAssignment__Group_2__0__Impl
	rule__VerbAssignment__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VerbAssignment__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVerbAssignmentAccess().getVerbAssignmentAction_2_0()); }
	()
	{ after(grammarAccess.getVerbAssignmentAccess().getVerbAssignmentAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VerbAssignment__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VerbAssignment__Group_2__1__Impl
	rule__VerbAssignment__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VerbAssignment__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVerbAssignmentAccess().getSTRINGTerminalRuleCall_2_1()); }
	RULE_STRING
	{ after(grammarAccess.getVerbAssignmentAccess().getSTRINGTerminalRuleCall_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VerbAssignment__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VerbAssignment__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VerbAssignment__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getVerbAssignmentAccess().getGroup_2_2()); }
		(rule__VerbAssignment__Group_2_2__0)
		{ after(grammarAccess.getVerbAssignmentAccess().getGroup_2_2()); }
	)
	(
		{ before(grammarAccess.getVerbAssignmentAccess().getGroup_2_2()); }
		(rule__VerbAssignment__Group_2_2__0)*
		{ after(grammarAccess.getVerbAssignmentAccess().getGroup_2_2()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VerbAssignment__Group_2_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VerbAssignment__Group_2_2__0__Impl
	rule__VerbAssignment__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VerbAssignment__Group_2_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVerbAssignmentAccess().getSolidusKeyword_2_2_0()); }
	Solidus
	{ after(grammarAccess.getVerbAssignmentAccess().getSolidusKeyword_2_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VerbAssignment__Group_2_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VerbAssignment__Group_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VerbAssignment__Group_2_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVerbAssignmentAccess().getSTRINGTerminalRuleCall_2_2_1()); }
	RULE_STRING
	{ after(grammarAccess.getVerbAssignmentAccess().getSTRINGTerminalRuleCall_2_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayDeclaration__Group__0__Impl
	rule__ArrayDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayDeclarationAccess().getArrayKeyword_0()); }
	Array
	{ after(grammarAccess.getArrayDeclarationAccess().getArrayKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayDeclaration__Group__1__Impl
	rule__ArrayDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayDeclarationAccess().getNameAssignment_1()); }
	(rule__ArrayDeclaration__NameAssignment_1)
	{ after(grammarAccess.getArrayDeclarationAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayDeclaration__Group__2__Impl
	rule__ArrayDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayDeclarationAccess().getSTATICTerminalRuleCall_2()); }
	(RULE_STATIC)?
	{ after(grammarAccess.getArrayDeclarationAccess().getSTATICTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayDeclaration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayDeclaration__Group__3__Impl
	rule__ArrayDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayDeclaration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayDeclarationAccess().getArrayBodyAssignment_3()); }
	(rule__ArrayDeclaration__ArrayBodyAssignment_3)
	{ after(grammarAccess.getArrayDeclarationAccess().getArrayBodyAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayDeclaration__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayDeclaration__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayDeclaration__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayDeclarationAccess().getSemicolonKeyword_4()); }
	Semicolon
	{ after(grammarAccess.getArrayDeclarationAccess().getSemicolonKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayType__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayType__Group_0__0__Impl
	rule__ArrayType__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayTypeAccess().getBYTE_ARRAYAction_0_0()); }
	()
	{ after(grammarAccess.getArrayTypeAccess().getBYTE_ARRAYAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayType__Group_0__1__Impl
	rule__ArrayType__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayTypeAccess().getTypeAssignment_0_1()); }
	(rule__ArrayType__TypeAssignment_0_1)
	{ after(grammarAccess.getArrayTypeAccess().getTypeAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayType__Group_0__2__Impl
	rule__ArrayType__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayTypeAccess().getSizeAssignment_0_2()); }
	(rule__ArrayType__SizeAssignment_0_2)?
	{ after(grammarAccess.getArrayTypeAccess().getSizeAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayType__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayTypeAccess().getContentAssignment_0_3()); }
	(rule__ArrayType__ContentAssignment_0_3)*
	{ after(grammarAccess.getArrayTypeAccess().getContentAssignment_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayType__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayType__Group_1__0__Impl
	rule__ArrayType__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayTypeAccess().getWORD_ARRAYAction_1_0()); }
	()
	{ after(grammarAccess.getArrayTypeAccess().getWORD_ARRAYAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayType__Group_1__1__Impl
	rule__ArrayType__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayTypeAccess().getTypeAssignment_1_1()); }
	(rule__ArrayType__TypeAssignment_1_1)
	{ after(grammarAccess.getArrayTypeAccess().getTypeAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayType__Group_1__2__Impl
	rule__ArrayType__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayTypeAccess().getSizeAssignment_1_2()); }
	(rule__ArrayType__SizeAssignment_1_2)?
	{ after(grammarAccess.getArrayTypeAccess().getSizeAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayType__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayTypeAccess().getContentAssignment_1_3()); }
	(rule__ArrayType__ContentAssignment_1_3)*
	{ after(grammarAccess.getArrayTypeAccess().getContentAssignment_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayType__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayType__Group_2__0__Impl
	rule__ArrayType__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayTypeAccess().getTABLE_ARRAYAction_2_0()); }
	()
	{ after(grammarAccess.getArrayTypeAccess().getTABLE_ARRAYAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayType__Group_2__1__Impl
	rule__ArrayType__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayTypeAccess().getTypeAssignment_2_1()); }
	(rule__ArrayType__TypeAssignment_2_1)
	{ after(grammarAccess.getArrayTypeAccess().getTypeAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayType__Group_2__2__Impl
	rule__ArrayType__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayTypeAccess().getSizeAssignment_2_2()); }
	(rule__ArrayType__SizeAssignment_2_2)?
	{ after(grammarAccess.getArrayTypeAccess().getSizeAssignment_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayType__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayTypeAccess().getContentAssignment_2_3()); }
	(rule__ArrayType__ContentAssignment_2_3)*
	{ after(grammarAccess.getArrayTypeAccess().getContentAssignment_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayType__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayType__Group_3__0__Impl
	rule__ArrayType__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayTypeAccess().getSTRING_ARRAYAction_3_0()); }
	()
	{ after(grammarAccess.getArrayTypeAccess().getSTRING_ARRAYAction_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayType__Group_3__1__Impl
	rule__ArrayType__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayTypeAccess().getTypeAssignment_3_1()); }
	(rule__ArrayType__TypeAssignment_3_1)
	{ after(grammarAccess.getArrayTypeAccess().getTypeAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayType__Group_3__2__Impl
	rule__ArrayType__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayTypeAccess().getSizeAssignment_3_2()); }
	(rule__ArrayType__SizeAssignment_3_2)?
	{ after(grammarAccess.getArrayTypeAccess().getSizeAssignment_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__Group_3__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayType__Group_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__Group_3__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayTypeAccess().getContentAssignment_3_3()); }
	(rule__ArrayType__ContentAssignment_3_3)?
	{ after(grammarAccess.getArrayTypeAccess().getContentAssignment_3_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpression__Group_0__0__Impl
	rule__PrimaryExpression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpressionAccess().getLeftAssignment_0_0()); }
	(rule__PrimaryExpression__LeftAssignment_0_0)
	{ after(grammarAccess.getPrimaryExpressionAccess().getLeftAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpression__Group_0__1__Impl
	rule__PrimaryExpression__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpressionAccess().getOperatorAssignment_0_1()); }
	(rule__PrimaryExpression__OperatorAssignment_0_1)
	{ after(grammarAccess.getPrimaryExpressionAccess().getOperatorAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpression__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpressionAccess().getRightAssignment_0_2()); }
	(rule__PrimaryExpression__RightAssignment_0_2)
	{ after(grammarAccess.getPrimaryExpressionAccess().getRightAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpression__Group_1__0__Impl
	rule__PrimaryExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_1_0()); }
	LeftParenthesis
	{ after(grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpression__Group_1__1__Impl
	rule__PrimaryExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpressionAccess().getLeftAssignment_1_1()); }
	(rule__PrimaryExpression__LeftAssignment_1_1)
	{ after(grammarAccess.getPrimaryExpressionAccess().getLeftAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpression__Group_1__2__Impl
	rule__PrimaryExpression__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpressionAccess().getOperatorAssignment_1_2()); }
	(rule__PrimaryExpression__OperatorAssignment_1_2)
	{ after(grammarAccess.getPrimaryExpressionAccess().getOperatorAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpression__Group_1__3__Impl
	rule__PrimaryExpression__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpressionAccess().getRightAssignment_1_3()); }
	(rule__PrimaryExpression__RightAssignment_1_3)
	{ after(grammarAccess.getPrimaryExpressionAccess().getRightAssignment_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpression__Group_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_1_4()); }
	RightParenthesis
	{ after(grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpression__Group_2__0__Impl
	rule__PrimaryExpression__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_2_0()); }
	LeftParenthesis
	{ after(grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpression__Group_2__1__Impl
	rule__PrimaryExpression__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpressionAccess().getLeftAssignment_2_1()); }
	(rule__PrimaryExpression__LeftAssignment_2_1)
	{ after(grammarAccess.getPrimaryExpressionAccess().getLeftAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpression__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_2_2()); }
	RightParenthesis
	{ after(grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpression__Group_4__0__Impl
	rule__PrimaryExpression__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpressionAccess().getExpressionAction_4_0()); }
	()
	{ after(grammarAccess.getPrimaryExpressionAccess().getExpressionAction_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpression__Group_4__1__Impl
	rule__PrimaryExpression__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_4_1()); }
	LeftParenthesis
	{ after(grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpression__Group_4__2__Impl
	rule__PrimaryExpression__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpressionAccess().getUnparsedTokensAssignment_4_2()); }
	(rule__PrimaryExpression__UnparsedTokensAssignment_4_2)*
	{ after(grammarAccess.getPrimaryExpressionAccess().getUnparsedTokensAssignment_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_4__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpression__Group_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_4__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_4_3()); }
	RightParenthesis
	{ after(grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_4_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ClassSection__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassSection__Group__0__Impl
	rule__ClassSection__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassSection__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassSectionAccess().getPropertySectionAction_0()); }
	()
	{ after(grammarAccess.getClassSectionAccess().getPropertySectionAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassSection__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassSection__Group__1__Impl
	rule__ClassSection__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassSection__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassSectionAccess().getNameAssignment_1()); }
	(rule__ClassSection__NameAssignment_1)
	{ after(grammarAccess.getClassSectionAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassSection__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassSection__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassSection__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassSectionAccess().getClassPropertyAssignment_2()); }
	(rule__ClassSection__ClassPropertyAssignment_2)
	{ after(grammarAccess.getClassSectionAccess().getClassPropertyAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PropertySection__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PropertySection__Group__0__Impl
	rule__PropertySection__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertySection__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertySectionAccess().getAlternatives_0()); }
	(rule__PropertySection__Alternatives_0)
	{ after(grammarAccess.getPropertySectionAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertySection__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PropertySection__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertySection__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertySectionAccess().getCommaKeyword_1()); }
	(Comma)?
	{ after(grammarAccess.getPropertySectionAccess().getCommaKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PropertySection__Group_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PropertySection__Group_0_0__0__Impl
	rule__PropertySection__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertySection__Group_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertySectionAccess().getPropertySectionAction_0_0_0()); }
	()
	{ after(grammarAccess.getPropertySectionAccess().getPropertySectionAction_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertySection__Group_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PropertySection__Group_0_0__1__Impl
	rule__PropertySection__Group_0_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertySection__Group_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertySectionAccess().getNameAssignment_0_0_1()); }
	(rule__PropertySection__NameAssignment_0_0_1)
	{ after(grammarAccess.getPropertySectionAccess().getNameAssignment_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertySection__Group_0_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PropertySection__Group_0_0__2__Impl
	rule__PropertySection__Group_0_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertySection__Group_0_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertySectionAccess().getPropertiesAssignment_0_0_2()); }
	(rule__PropertySection__PropertiesAssignment_0_0_2)?
	{ after(grammarAccess.getPropertySectionAccess().getPropertiesAssignment_0_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertySection__Group_0_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PropertySection__Group_0_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertySection__Group_0_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertySectionAccess().getGroup_0_0_3()); }
	(rule__PropertySection__Group_0_0_3__0)*
	{ after(grammarAccess.getPropertySectionAccess().getGroup_0_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PropertySection__Group_0_0_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PropertySection__Group_0_0_3__0__Impl
	rule__PropertySection__Group_0_0_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertySection__Group_0_0_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertySectionAccess().getCommaKeyword_0_0_3_0()); }
	Comma
	{ after(grammarAccess.getPropertySectionAccess().getCommaKeyword_0_0_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertySection__Group_0_0_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PropertySection__Group_0_0_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertySection__Group_0_0_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertySectionAccess().getPropertiesAssignment_0_0_3_1()); }
	(rule__PropertySection__PropertiesAssignment_0_0_3_1)
	{ after(grammarAccess.getPropertySectionAccess().getPropertiesAssignment_0_0_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PropertySection__Group_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PropertySection__Group_0_1__0__Impl
	rule__PropertySection__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertySection__Group_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertySectionAccess().getPropertySectionAction_0_1_0()); }
	()
	{ after(grammarAccess.getPropertySectionAccess().getPropertySectionAction_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertySection__Group_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PropertySection__Group_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertySection__Group_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertySectionAccess().getPreprocessorDirectiveParserRuleCall_0_1_1()); }
	rulePreprocessorDirective
	{ after(grammarAccess.getPropertySectionAccess().getPreprocessorDirectiveParserRuleCall_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeSection__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeSection__Group__0__Impl
	rule__AttributeSection__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeSection__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeSectionAccess().getAttributeSectionAction_0()); }
	()
	{ after(grammarAccess.getAttributeSectionAccess().getAttributeSectionAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeSection__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeSection__Group__1__Impl
	rule__AttributeSection__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeSection__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeSectionAccess().getNameAssignment_1()); }
	(rule__AttributeSection__NameAssignment_1)
	{ after(grammarAccess.getAttributeSectionAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeSection__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeSection__Group__2__Impl
	rule__AttributeSection__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeSection__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeSectionAccess().getAttributesAssignment_2()); }
	(rule__AttributeSection__AttributesAssignment_2)
	{ after(grammarAccess.getAttributeSectionAccess().getAttributesAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeSection__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeSection__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeSection__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeSectionAccess().getAttributesAssignment_3()); }
	(rule__AttributeSection__AttributesAssignment_3)*
	{ after(grammarAccess.getAttributeSectionAccess().getAttributesAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Property__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Property__Group_0__0__Impl
	rule__Property__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyAccess().getPropertyAction_0_0()); }
	()
	{ after(grammarAccess.getPropertyAccess().getPropertyAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Property__Group_0__1__Impl
	rule__Property__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyAccess().getNameAssignment_0_1()); }
	(rule__Property__NameAssignment_0_1)
	{ after(grammarAccess.getPropertyAccess().getNameAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Property__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyAccess().getAlternatives_0_2()); }
	(rule__Property__Alternatives_0_2)
	{ after(grammarAccess.getPropertyAccess().getAlternatives_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Property__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Property__Group_1__0__Impl
	rule__Property__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyAccess().getPropertyAction_1_0()); }
	()
	{ after(grammarAccess.getPropertyAccess().getPropertyAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Property__Group_1__1__Impl
	rule__Property__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyAccess().getNameAssignment_1_1()); }
	(rule__Property__NameAssignment_1_1)
	{ after(grammarAccess.getPropertyAccess().getNameAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Property__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyAccess().getAlternatives_1_2()); }
	(rule__Property__Alternatives_1_2)
	{ after(grammarAccess.getPropertyAccess().getAlternatives_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Property__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Property__Group_2__0__Impl
	rule__Property__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyAccess().getPropertyAction_2_0()); }
	()
	{ after(grammarAccess.getPropertyAccess().getPropertyAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Property__Group_2__1__Impl
	rule__Property__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyAccess().getFound_inKeyword_2_1()); }
	Found_in
	{ after(grammarAccess.getPropertyAccess().getFound_inKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Property__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyAccess().getAlternatives_2_2()); }
	(rule__Property__Alternatives_2_2)
	{ after(grammarAccess.getPropertyAccess().getAlternatives_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AbstractArray__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AbstractArray__Group__0__Impl
	rule__AbstractArray__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractArray__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbstractArrayAccess().getAbstractArrayAction_0()); }
	()
	{ after(grammarAccess.getAbstractArrayAccess().getAbstractArrayAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractArray__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AbstractArray__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractArray__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbstractArrayAccess().getGroup_1()); }
	(rule__AbstractArray__Group_1__0)
	{ after(grammarAccess.getAbstractArrayAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AbstractArray__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AbstractArray__Group_1__0__Impl
	rule__AbstractArray__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractArray__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbstractArrayAccess().getArrayAssignment_1_0()); }
	(rule__AbstractArray__ArrayAssignment_1_0)?
	{ after(grammarAccess.getAbstractArrayAccess().getArrayAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractArray__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AbstractArray__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractArray__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbstractArrayAccess().getArrayAssignment_1_1()); }
	(rule__AbstractArray__ArrayAssignment_1_1)*
	{ after(grammarAccess.getAbstractArrayAccess().getArrayAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Method__Group__0__Impl
	rule__Method__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodAccess().getLeftSquareBracketKeyword_0()); }
	LeftSquareBracket
	{ after(grammarAccess.getMethodAccess().getLeftSquareBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Method__Group__1__Impl
	rule__Method__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodAccess().getFunctionBodyAssignment_1()); }
	(rule__Method__FunctionBodyAssignment_1)
	{ after(grammarAccess.getMethodAccess().getFunctionBodyAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Method__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodAccess().getRightSquareBracketKeyword_2()); }
	RightSquareBracket
	{ after(grammarAccess.getMethodAccess().getRightSquareBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GlobalFunctionDefinition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GlobalFunctionDefinition__Group__0__Impl
	rule__GlobalFunctionDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalFunctionDefinition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGlobalFunctionDefinitionAccess().getLeftSquareBracketKeyword_0()); }
	LeftSquareBracket
	{ after(grammarAccess.getGlobalFunctionDefinitionAccess().getLeftSquareBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalFunctionDefinition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GlobalFunctionDefinition__Group__1__Impl
	rule__GlobalFunctionDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalFunctionDefinition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGlobalFunctionDefinitionAccess().getFunctionHeaderAssignment_1()); }
	(rule__GlobalFunctionDefinition__FunctionHeaderAssignment_1)
	{ after(grammarAccess.getGlobalFunctionDefinitionAccess().getFunctionHeaderAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalFunctionDefinition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GlobalFunctionDefinition__Group__2__Impl
	rule__GlobalFunctionDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalFunctionDefinition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGlobalFunctionDefinitionAccess().getFunctionBodyAssignment_2()); }
	(rule__GlobalFunctionDefinition__FunctionBodyAssignment_2)
	{ after(grammarAccess.getGlobalFunctionDefinitionAccess().getFunctionBodyAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalFunctionDefinition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GlobalFunctionDefinition__Group__3__Impl
	rule__GlobalFunctionDefinition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalFunctionDefinition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGlobalFunctionDefinitionAccess().getRightSquareBracketKeyword_3()); }
	RightSquareBracket
	{ after(grammarAccess.getGlobalFunctionDefinitionAccess().getRightSquareBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalFunctionDefinition__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GlobalFunctionDefinition__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalFunctionDefinition__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGlobalFunctionDefinitionAccess().getSemicolonKeyword_4()); }
	Semicolon
	{ after(grammarAccess.getGlobalFunctionDefinitionAccess().getSemicolonKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionHeader__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionHeader__Group__0__Impl
	rule__FunctionHeader__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionHeader__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionHeaderAccess().getFunctionHeaderAction_0()); }
	()
	{ after(grammarAccess.getFunctionHeaderAccess().getFunctionHeaderAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionHeader__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionHeader__Group__1__Impl
	rule__FunctionHeader__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionHeader__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionHeaderAccess().getVariablesAssignment_1()); }
	(rule__FunctionHeader__VariablesAssignment_1)*
	{ after(grammarAccess.getFunctionHeaderAccess().getVariablesAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionHeader__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionHeader__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionHeader__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionHeaderAccess().getSemicolonKeyword_2()); }
	Semicolon
	{ after(grammarAccess.getFunctionHeaderAccess().getSemicolonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group__0__Impl
	rule__Expression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getAlternatives_0()); }
	(rule__Expression__Alternatives_0)
	{ after(grammarAccess.getExpressionAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getSemicolonKeyword_1()); }
	(Semicolon)?
	{ after(grammarAccess.getExpressionAccess().getSemicolonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_0__0__Impl
	rule__Primary__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getPrimaryAction_0_0()); }
	()
	{ after(grammarAccess.getPrimaryAccess().getPrimaryAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getIdAssignment_0_1()); }
	(rule__Primary__IdAssignment_0_1)
	{ after(grammarAccess.getPrimaryAccess().getIdAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_2__0__Impl
	rule__Primary__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getPrimaryAction_2_0()); }
	()
	{ after(grammarAccess.getPrimaryAccess().getPrimaryAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getStringAssignment_2_1()); }
	(rule__Primary__StringAssignment_2_1)
	{ after(grammarAccess.getPrimaryAccess().getStringAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_3__0__Impl
	rule__Primary__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getPrimaryAction_3_0()); }
	()
	{ after(grammarAccess.getPrimaryAccess().getPrimaryAction_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getDirectionAssignment_3_1()); }
	(rule__Primary__DirectionAssignment_3_1)
	{ after(grammarAccess.getPrimaryAccess().getDirectionAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_4__0__Impl
	rule__Primary__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getPrimaryAction_4_0()); }
	()
	{ after(grammarAccess.getPrimaryAccess().getPrimaryAction_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getHexAssignment_4_1()); }
	(rule__Primary__HexAssignment_4_1)
	{ after(grammarAccess.getPrimaryAccess().getHexAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_5__0__Impl
	rule__Primary__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getPrimaryAction_5_0()); }
	()
	{ after(grammarAccess.getPrimaryAccess().getPrimaryAction_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getBinaryAssignment_5_1()); }
	(rule__Primary__BinaryAssignment_5_1)
	{ after(grammarAccess.getPrimaryAccess().getBinaryAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Number__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Number__Group__0__Impl
	rule__Number__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumberAccess().getNumberAction_0()); }
	()
	{ after(grammarAccess.getNumberAccess().getNumberAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Number__Group__1__Impl
	rule__Number__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumberAccess().getNegativeAssignment_1()); }
	(rule__Number__NegativeAssignment_1)?
	{ after(grammarAccess.getNumberAccess().getNegativeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Number__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumberAccess().getValueAssignment_2()); }
	(rule__Number__ValueAssignment_2)
	{ after(grammarAccess.getNumberAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group__0__Impl
	rule__Attribute__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getAttributeAction_0()); }
	()
	{ after(grammarAccess.getAttributeAccess().getAttributeAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group__1__Impl
	rule__Attribute__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getTildeKeyword_1()); }
	(Tilde)?
	{ after(grammarAccess.getAttributeAccess().getTildeKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getAlternatives_2()); }
	(rule__Attribute__Alternatives_2)
	{ after(grammarAccess.getAttributeAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Program__DirectivesAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgramAccess().getDirectivesDirectiveParserRuleCall_0_0()); }
		ruleDirective
		{ after(grammarAccess.getProgramAccess().getDirectivesDirectiveParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__ImportsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgramAccess().getImportsIncludeDeclarationParserRuleCall_1_0()); }
		ruleIncludeDeclaration
		{ after(grammarAccess.getProgramAccess().getImportsIncludeDeclarationParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageDirective__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMessageDirectiveAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getMessageDirectiveAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageDirective__StringAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMessageDirectiveAccess().getStringSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getMessageDirectiveAccess().getStringSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ZcharacterDirective__StringAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getZcharacterDirectiveAccess().getStringSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getZcharacterDirectiveAccess().getStringSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompilerDirective__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompilerDirectiveAccess().getValueCOMPILER_DIRECTIVE_COMMENTTerminalRuleCall_0()); }
		RULE_COMPILER_DIRECTIVE_COMMENT
		{ after(grammarAccess.getCompilerDirectiveAccess().getValueCOMPILER_DIRECTIVE_COMMENTTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IncludeDeclaration__ImportURIAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIncludeDeclarationAccess().getImportURISTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getIncludeDeclarationAccess().getImportURISTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDirective__AdditiveAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyDirectiveAccess().getAdditiveAdditiveKeyword_1_0()); }
		(
			{ before(grammarAccess.getPropertyDirectiveAccess().getAdditiveAdditiveKeyword_1_0()); }
			Additive
			{ after(grammarAccess.getPropertyDirectiveAccess().getAdditiveAdditiveKeyword_1_0()); }
		)
		{ after(grammarAccess.getPropertyDirectiveAccess().getAdditiveAdditiveKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDirective__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyDirectiveAccess().getNameAlternatives_2_0()); }
		(rule__PropertyDirective__NameAlternatives_2_0)
		{ after(grammarAccess.getPropertyDirectiveAccess().getNameAlternatives_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDirective__ValueAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyDirectiveAccess().getValuePrimaryParserRuleCall_3_0()); }
		rulePrimary
		{ after(grammarAccess.getPropertyDirectiveAccess().getValuePrimaryParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReleaseDirective__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReleaseDirectiveAccess().getNameReleaseKeyword_0_0()); }
		(
			{ before(grammarAccess.getReleaseDirectiveAccess().getNameReleaseKeyword_0_0()); }
			Release
			{ after(grammarAccess.getReleaseDirectiveAccess().getNameReleaseKeyword_0_0()); }
		)
		{ after(grammarAccess.getReleaseDirectiveAccess().getNameReleaseKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReleaseDirective__VersionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReleaseDirectiveAccess().getVersionINTTerminalRuleCall_1_0()); }
		RULE_INT
		{ after(grammarAccess.getReleaseDirectiveAccess().getVersionINTTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReplaceDirective__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReplaceDirectiveAccess().getNameReplaceKeyword_0_0()); }
		(
			{ before(grammarAccess.getReplaceDirectiveAccess().getNameReplaceKeyword_0_0()); }
			Replace
			{ after(grammarAccess.getReplaceDirectiveAccess().getNameReplaceKeyword_0_0()); }
		)
		{ after(grammarAccess.getReplaceDirectiveAccess().getNameReplaceKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReplaceDirective__IdAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReplaceDirectiveAccess().getIdIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getReplaceDirectiveAccess().getIdIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SerialDirective__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSerialDirectiveAccess().getNameSerialKeyword_0_0()); }
		(
			{ before(grammarAccess.getSerialDirectiveAccess().getNameSerialKeyword_0_0()); }
			Serial
			{ after(grammarAccess.getSerialDirectiveAccess().getNameSerialKeyword_0_0()); }
		)
		{ after(grammarAccess.getSerialDirectiveAccess().getNameSerialKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SerialDirective__SerialAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSerialDirectiveAccess().getSerialSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getSerialDirectiveAccess().getSerialSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalConstantDeclaration__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGlobalConstantDeclarationAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getGlobalConstantDeclarationAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalConstantDeclaration__ValueAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGlobalConstantDeclarationAccess().getValueGlobalConstantValueParserRuleCall_3_0()); }
		ruleGlobalConstantValue
		{ after(grammarAccess.getGlobalConstantDeclarationAccess().getValueGlobalConstantValueParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalDefaultDeclaration__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGlobalDefaultDeclarationAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getGlobalDefaultDeclarationAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalDefaultDeclaration__ValueAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGlobalDefaultDeclarationAccess().getValueGlobalConstantValueParserRuleCall_3_0()); }
		ruleGlobalConstantValue
		{ after(grammarAccess.getGlobalDefaultDeclarationAccess().getValueGlobalConstantValueParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchesDeclaration__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSwitchesDeclarationAccess().getNameSwitchesKeyword_0_0()); }
		(
			{ before(grammarAccess.getSwitchesDeclarationAccess().getNameSwitchesKeyword_0_0()); }
			Switches
			{ after(grammarAccess.getSwitchesDeclarationAccess().getNameSwitchesKeyword_0_0()); }
		)
		{ after(grammarAccess.getSwitchesDeclarationAccess().getNameSwitchesKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchesDeclaration__SwitchesAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSwitchesDeclarationAccess().getSwitchesPrimaryParserRuleCall_1_0()); }
		rulePrimary
		{ after(grammarAccess.getSwitchesDeclarationAccess().getSwitchesPrimaryParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalDeclaration__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGlobalDeclarationAccess().getNameAlternatives_1_0()); }
		(rule__GlobalDeclaration__NameAlternatives_1_0)
		{ after(grammarAccess.getGlobalDeclarationAccess().getNameAlternatives_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalDeclaration__ValueAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGlobalDeclarationAccess().getValuePrimaryParserRuleCall_2_1_0()); }
		rulePrimary
		{ after(grammarAccess.getGlobalDeclarationAccess().getValuePrimaryParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalConstantValue__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGlobalConstantValueAccess().getNamePrimaryParserRuleCall_0()); }
		rulePrimary
		{ after(grammarAccess.getGlobalConstantValueAccess().getNamePrimaryParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDeclaration__NameAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeDeclarationAccess().getNameAlternatives_2_0_0()); }
		(rule__AttributeDeclaration__NameAlternatives_2_0_0)
		{ after(grammarAccess.getAttributeDeclarationAccess().getNameAlternatives_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDeclaration__AliasedAttributeAssignment_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeDeclarationAccess().getAliasedAttributeAlternatives_2_1_1_0()); }
		(rule__AttributeDeclaration__AliasedAttributeAlternatives_2_1_1_0)
		{ after(grammarAccess.getAttributeDeclarationAccess().getAliasedAttributeAlternatives_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDeclaration__NameAssignment_1_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyDeclarationAccess().getNameIDTerminalRuleCall_1_0_0_0()); }
		RULE_ID
		{ after(grammarAccess.getPropertyDeclarationAccess().getNameIDTerminalRuleCall_1_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDeclaration__AdditiveAssignment_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyDeclarationAccess().getAdditiveAdditiveKeyword_1_0_1_0()); }
		(
			{ before(grammarAccess.getPropertyDeclarationAccess().getAdditiveAdditiveKeyword_1_0_1_0()); }
			Additive
			{ after(grammarAccess.getPropertyDeclarationAccess().getAdditiveAdditiveKeyword_1_0_1_0()); }
		)
		{ after(grammarAccess.getPropertyDeclarationAccess().getAdditiveAdditiveKeyword_1_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDeclaration__ValueAssignment_1_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyDeclarationAccess().getValuePrimaryParserRuleCall_1_0_2_0()); }
		rulePrimary
		{ after(grammarAccess.getPropertyDeclarationAccess().getValuePrimaryParserRuleCall_1_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDeclaration__NameAssignment_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyDeclarationAccess().getNameIDTerminalRuleCall_1_1_0_0()); }
		RULE_ID
		{ after(grammarAccess.getPropertyDeclarationAccess().getNameIDTerminalRuleCall_1_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDeclaration__AliasedPropertyAssignment_1_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyDeclarationAccess().getAliasedPropertyPrimaryParserRuleCall_1_1_2_0()); }
		rulePrimary
		{ after(grammarAccess.getPropertyDeclarationAccess().getAliasedPropertyPrimaryParserRuleCall_1_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassDeclarationAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getClassDeclarationAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__CardinalityAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassDeclarationAccess().getCardinalityLeftParenthesisKeyword_3_0_0()); }
		(
			{ before(grammarAccess.getClassDeclarationAccess().getCardinalityLeftParenthesisKeyword_3_0_0()); }
			LeftParenthesis
			{ after(grammarAccess.getClassDeclarationAccess().getCardinalityLeftParenthesisKeyword_3_0_0()); }
		)
		{ after(grammarAccess.getClassDeclarationAccess().getCardinalityLeftParenthesisKeyword_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__MaxAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassDeclarationAccess().getMaxPrimaryParserRuleCall_3_1_0()); }
		rulePrimary
		{ after(grammarAccess.getClassDeclarationAccess().getMaxPrimaryParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__PropertiesAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassDeclarationAccess().getPropertiesAlternatives_4_0()); }
		(rule__ClassDeclaration__PropertiesAlternatives_4_0)
		{ after(grammarAccess.getClassDeclarationAccess().getPropertiesAlternatives_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__PropertiesAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassDeclarationAccess().getPropertiesAlternatives_5_1_0()); }
		(rule__ClassDeclaration__PropertiesAlternatives_5_1_0)
		{ after(grammarAccess.getClassDeclarationAccess().getPropertiesAlternatives_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectDeclaration__ObjectAssignment_0_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjectDeclarationAccess().getObjectObjectKeyword_0_1_0_0()); }
		(
			{ before(grammarAccess.getObjectDeclarationAccess().getObjectObjectKeyword_0_1_0_0()); }
			Object
			{ after(grammarAccess.getObjectDeclarationAccess().getObjectObjectKeyword_0_1_0_0()); }
		)
		{ after(grammarAccess.getObjectDeclarationAccess().getObjectObjectKeyword_0_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectDeclaration__SuperTypeAssignment_0_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjectDeclarationAccess().getSuperTypeClassDeclarationCrossReference_0_1_1_0()); }
		(
			{ before(grammarAccess.getObjectDeclarationAccess().getSuperTypeClassDeclarationIDTerminalRuleCall_0_1_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getObjectDeclarationAccess().getSuperTypeClassDeclarationIDTerminalRuleCall_0_1_1_0_1()); }
		)
		{ after(grammarAccess.getObjectDeclarationAccess().getSuperTypeClassDeclarationCrossReference_0_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectDeclaration__LevelAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjectDeclarationAccess().getLevelBYTE_ARROWTerminalRuleCall_0_2_0()); }
		RULE_BYTE_ARROW
		{ after(grammarAccess.getObjectDeclarationAccess().getLevelBYTE_ARROWTerminalRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectDeclaration__NameAssignment_0_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjectDeclarationAccess().getNameIDTerminalRuleCall_0_3_0()); }
		RULE_ID
		{ after(grammarAccess.getObjectDeclarationAccess().getNameIDTerminalRuleCall_0_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectDeclaration__HeadlineAssignment_0_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjectDeclarationAccess().getHeadlineSTRINGTerminalRuleCall_0_4_0()); }
		RULE_STRING
		{ after(grammarAccess.getObjectDeclarationAccess().getHeadlineSTRINGTerminalRuleCall_0_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectDeclaration__InAssignment_0_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjectDeclarationAccess().getInObjectDeclarationCrossReference_0_5_0()); }
		(
			{ before(grammarAccess.getObjectDeclarationAccess().getInObjectDeclarationIDTerminalRuleCall_0_5_0_1()); }
			RULE_ID
			{ after(grammarAccess.getObjectDeclarationAccess().getInObjectDeclarationIDTerminalRuleCall_0_5_0_1()); }
		)
		{ after(grammarAccess.getObjectDeclarationAccess().getInObjectDeclarationCrossReference_0_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectDeclaration__PropertiesAssignment_0_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjectDeclarationAccess().getPropertiesAlternatives_0_6_0()); }
		(rule__ObjectDeclaration__PropertiesAlternatives_0_6_0)
		{ after(grammarAccess.getObjectDeclarationAccess().getPropertiesAlternatives_0_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectDeclaration__PropertiesAssignment_0_7_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjectDeclarationAccess().getPropertiesAlternatives_0_7_1_0()); }
		(rule__ObjectDeclaration__PropertiesAlternatives_0_7_1_0)
		{ after(grammarAccess.getObjectDeclarationAccess().getPropertiesAlternatives_0_7_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IdlessObjectDeclaration__ObjectAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIdlessObjectDeclarationAccess().getObjectObjectKeyword_1_0_0()); }
		(
			{ before(grammarAccess.getIdlessObjectDeclarationAccess().getObjectObjectKeyword_1_0_0()); }
			Object
			{ after(grammarAccess.getIdlessObjectDeclarationAccess().getObjectObjectKeyword_1_0_0()); }
		)
		{ after(grammarAccess.getIdlessObjectDeclarationAccess().getObjectObjectKeyword_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IdlessObjectDeclaration__SuperTypeAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIdlessObjectDeclarationAccess().getSuperTypeClassDeclarationCrossReference_1_1_0()); }
		(
			{ before(grammarAccess.getIdlessObjectDeclarationAccess().getSuperTypeClassDeclarationIDTerminalRuleCall_1_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getIdlessObjectDeclarationAccess().getSuperTypeClassDeclarationIDTerminalRuleCall_1_1_0_1()); }
		)
		{ after(grammarAccess.getIdlessObjectDeclarationAccess().getSuperTypeClassDeclarationCrossReference_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IdlessObjectDeclaration__LevelAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIdlessObjectDeclarationAccess().getLevelBYTE_ARROWTerminalRuleCall_2_0()); }
		RULE_BYTE_ARROW
		{ after(grammarAccess.getIdlessObjectDeclarationAccess().getLevelBYTE_ARROWTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IdlessObjectDeclaration__NameAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIdlessObjectDeclarationAccess().getNameSTRINGTerminalRuleCall_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getIdlessObjectDeclarationAccess().getNameSTRINGTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IdlessObjectDeclaration__InAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIdlessObjectDeclarationAccess().getInObjectDeclarationCrossReference_4_0()); }
		(
			{ before(grammarAccess.getIdlessObjectDeclarationAccess().getInObjectDeclarationIDTerminalRuleCall_4_0_1()); }
			RULE_ID
			{ after(grammarAccess.getIdlessObjectDeclarationAccess().getInObjectDeclarationIDTerminalRuleCall_4_0_1()); }
		)
		{ after(grammarAccess.getIdlessObjectDeclarationAccess().getInObjectDeclarationCrossReference_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IdlessObjectDeclaration__PropertiesAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIdlessObjectDeclarationAccess().getPropertiesAlternatives_5_0()); }
		(rule__IdlessObjectDeclaration__PropertiesAlternatives_5_0)
		{ after(grammarAccess.getIdlessObjectDeclarationAccess().getPropertiesAlternatives_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IdlessObjectDeclaration__PropertiesAssignment_6_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIdlessObjectDeclarationAccess().getPropertiesAlternatives_6_1_0()); }
		(rule__IdlessObjectDeclaration__PropertiesAlternatives_6_1_0)
		{ after(grammarAccess.getIdlessObjectDeclarationAccess().getPropertiesAlternatives_6_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NearbyDeclaration__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNearbyDeclarationAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getNearbyDeclarationAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NearbyDeclaration__HeadlineAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNearbyDeclarationAccess().getHeadlineSTRINGTerminalRuleCall_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getNearbyDeclarationAccess().getHeadlineSTRINGTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NearbyDeclaration__InAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNearbyDeclarationAccess().getInObjectDeclarationCrossReference_4_0()); }
		(
			{ before(grammarAccess.getNearbyDeclarationAccess().getInObjectDeclarationIDTerminalRuleCall_4_0_1()); }
			RULE_ID
			{ after(grammarAccess.getNearbyDeclarationAccess().getInObjectDeclarationIDTerminalRuleCall_4_0_1()); }
		)
		{ after(grammarAccess.getNearbyDeclarationAccess().getInObjectDeclarationCrossReference_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NearbyDeclaration__PropertiesAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNearbyDeclarationAccess().getPropertiesAlternatives_5_0()); }
		(rule__NearbyDeclaration__PropertiesAlternatives_5_0)
		{ after(grammarAccess.getNearbyDeclarationAccess().getPropertiesAlternatives_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NearbyDeclaration__PropertiesAssignment_6_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNearbyDeclarationAccess().getPropertiesAlternatives_6_1_0()); }
		(rule__NearbyDeclaration__PropertiesAlternatives_6_1_0)
		{ after(grammarAccess.getNearbyDeclarationAccess().getPropertiesAlternatives_6_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VerbDeclaration__NameAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVerbDeclarationAccess().getNameVerbKeyword_0_1_0()); }
		(
			{ before(grammarAccess.getVerbDeclarationAccess().getNameVerbKeyword_0_1_0()); }
			Verb
			{ after(grammarAccess.getVerbDeclarationAccess().getNameVerbKeyword_0_1_0()); }
		)
		{ after(grammarAccess.getVerbDeclarationAccess().getNameVerbKeyword_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VerbDeclaration__MetaAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVerbDeclarationAccess().getMetaMetaKeyword_0_2_0()); }
		(
			{ before(grammarAccess.getVerbDeclarationAccess().getMetaMetaKeyword_0_2_0()); }
			Meta
			{ after(grammarAccess.getVerbDeclarationAccess().getMetaMetaKeyword_0_2_0()); }
		)
		{ after(grammarAccess.getVerbDeclarationAccess().getMetaMetaKeyword_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VerbDeclaration__SynAssignment_0_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVerbDeclarationAccess().getSynSTRINGTerminalRuleCall_0_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getVerbDeclarationAccess().getSynSTRINGTerminalRuleCall_0_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VerbDeclaration__DefintionsAssignment_0_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVerbDeclarationAccess().getDefintionsVerbBodyParserRuleCall_0_4_0()); }
		ruleVerbBody
		{ after(grammarAccess.getVerbDeclarationAccess().getDefintionsVerbBodyParserRuleCall_0_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VerbDeclaration__NameAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVerbDeclarationAccess().getNameExtendKeyword_1_1_0()); }
		(
			{ before(grammarAccess.getVerbDeclarationAccess().getNameExtendKeyword_1_1_0()); }
			Extend
			{ after(grammarAccess.getVerbDeclarationAccess().getNameExtendKeyword_1_1_0()); }
		)
		{ after(grammarAccess.getVerbDeclarationAccess().getNameExtendKeyword_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VerbDeclaration__OnlyAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVerbDeclarationAccess().getOnlyOnlyKeyword_1_2_0()); }
		(
			{ before(grammarAccess.getVerbDeclarationAccess().getOnlyOnlyKeyword_1_2_0()); }
			Only
			{ after(grammarAccess.getVerbDeclarationAccess().getOnlyOnlyKeyword_1_2_0()); }
		)
		{ after(grammarAccess.getVerbDeclarationAccess().getOnlyOnlyKeyword_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VerbDeclaration__SynAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVerbDeclarationAccess().getSynSTRINGTerminalRuleCall_1_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getVerbDeclarationAccess().getSynSTRINGTerminalRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VerbDeclaration__DefintionsAssignment_1_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVerbDeclarationAccess().getDefintionsVerbBodyParserRuleCall_1_5_0()); }
		ruleVerbBody
		{ after(grammarAccess.getVerbDeclarationAccess().getDefintionsVerbBodyParserRuleCall_1_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VerbBody__DefinitionsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVerbBodyAccess().getDefinitionsVerbAssignmentParserRuleCall_1_0()); }
		ruleVerbAssignment
		{ after(grammarAccess.getVerbBodyAccess().getDefinitionsVerbAssignmentParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VerbBody__NameAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVerbBodyAccess().getNameIDTerminalRuleCall_3_0()); }
		RULE_ID
		{ after(grammarAccess.getVerbBodyAccess().getNameIDTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VerbBody__ReverseAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVerbBodyAccess().getReverseReverseKeyword_4_0()); }
		(
			{ before(grammarAccess.getVerbBodyAccess().getReverseReverseKeyword_4_0()); }
			Reverse
			{ after(grammarAccess.getVerbBodyAccess().getReverseReverseKeyword_4_0()); }
		)
		{ after(grammarAccess.getVerbBodyAccess().getReverseReverseKeyword_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayDeclaration__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArrayDeclarationAccess().getNameAlternatives_1_0()); }
		(rule__ArrayDeclaration__NameAlternatives_1_0)
		{ after(grammarAccess.getArrayDeclarationAccess().getNameAlternatives_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayDeclaration__ArrayBodyAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArrayDeclarationAccess().getArrayBodyArrayTypeParserRuleCall_3_0()); }
		ruleArrayType
		{ after(grammarAccess.getArrayDeclarationAccess().getArrayBodyArrayTypeParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__TypeAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArrayTypeAccess().getTypeBYTE_ARROWTerminalRuleCall_0_1_0()); }
		RULE_BYTE_ARROW
		{ after(grammarAccess.getArrayTypeAccess().getTypeBYTE_ARROWTerminalRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__SizeAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArrayTypeAccess().getSizePrimaryExpressionParserRuleCall_0_2_0()); }
		rulePrimaryExpression
		{ after(grammarAccess.getArrayTypeAccess().getSizePrimaryExpressionParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__ContentAssignment_0_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArrayTypeAccess().getContentPrimaryExpressionParserRuleCall_0_3_0()); }
		rulePrimaryExpression
		{ after(grammarAccess.getArrayTypeAccess().getContentPrimaryExpressionParserRuleCall_0_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__TypeAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArrayTypeAccess().getTypeWORD_ARROWTerminalRuleCall_1_1_0()); }
		RULE_WORD_ARROW
		{ after(grammarAccess.getArrayTypeAccess().getTypeWORD_ARROWTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__SizeAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArrayTypeAccess().getSizePrimaryExpressionParserRuleCall_1_2_0()); }
		rulePrimaryExpression
		{ after(grammarAccess.getArrayTypeAccess().getSizePrimaryExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__ContentAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArrayTypeAccess().getContentPrimaryExpressionParserRuleCall_1_3_0()); }
		rulePrimaryExpression
		{ after(grammarAccess.getArrayTypeAccess().getContentPrimaryExpressionParserRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__TypeAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArrayTypeAccess().getTypeAlternatives_2_1_0()); }
		(rule__ArrayType__TypeAlternatives_2_1_0)
		{ after(grammarAccess.getArrayTypeAccess().getTypeAlternatives_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__SizeAssignment_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArrayTypeAccess().getSizePrimaryExpressionParserRuleCall_2_2_0()); }
		rulePrimaryExpression
		{ after(grammarAccess.getArrayTypeAccess().getSizePrimaryExpressionParserRuleCall_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__ContentAssignment_2_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArrayTypeAccess().getContentPrimaryExpressionParserRuleCall_2_3_0()); }
		rulePrimaryExpression
		{ after(grammarAccess.getArrayTypeAccess().getContentPrimaryExpressionParserRuleCall_2_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__TypeAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArrayTypeAccess().getTypeStringKeyword_3_1_0()); }
		(
			{ before(grammarAccess.getArrayTypeAccess().getTypeStringKeyword_3_1_0()); }
			String
			{ after(grammarAccess.getArrayTypeAccess().getTypeStringKeyword_3_1_0()); }
		)
		{ after(grammarAccess.getArrayTypeAccess().getTypeStringKeyword_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__SizeAssignment_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArrayTypeAccess().getSizePrimaryExpressionParserRuleCall_3_2_0()); }
		rulePrimaryExpression
		{ after(grammarAccess.getArrayTypeAccess().getSizePrimaryExpressionParserRuleCall_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__ContentAssignment_3_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArrayTypeAccess().getContentSTRINGTerminalRuleCall_3_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getArrayTypeAccess().getContentSTRINGTerminalRuleCall_3_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__LeftAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getLeftPrimaryParserRuleCall_0_0_0()); }
		rulePrimary
		{ after(grammarAccess.getPrimaryExpressionAccess().getLeftPrimaryParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__OperatorAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getOperatorAlternatives_0_1_0()); }
		(rule__PrimaryExpression__OperatorAlternatives_0_1_0)
		{ after(grammarAccess.getPrimaryExpressionAccess().getOperatorAlternatives_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__RightAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getRightPrimaryParserRuleCall_0_2_0()); }
		rulePrimary
		{ after(grammarAccess.getPrimaryExpressionAccess().getRightPrimaryParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__LeftAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getLeftPrimaryParserRuleCall_1_1_0()); }
		rulePrimary
		{ after(grammarAccess.getPrimaryExpressionAccess().getLeftPrimaryParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__OperatorAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getOperatorAlternatives_1_2_0()); }
		(rule__PrimaryExpression__OperatorAlternatives_1_2_0)
		{ after(grammarAccess.getPrimaryExpressionAccess().getOperatorAlternatives_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__RightAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getRightPrimaryParserRuleCall_1_3_0()); }
		rulePrimary
		{ after(grammarAccess.getPrimaryExpressionAccess().getRightPrimaryParserRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__LeftAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getLeftPrimaryParserRuleCall_2_1_0()); }
		rulePrimary
		{ after(grammarAccess.getPrimaryExpressionAccess().getLeftPrimaryParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__LeftAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getLeftPrimaryParserRuleCall_3_0()); }
		rulePrimary
		{ after(grammarAccess.getPrimaryExpressionAccess().getLeftPrimaryParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__UnparsedTokensAssignment_4_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getUnparsedTokensFuzzyExpressionParserRuleCall_4_2_0()); }
		ruleFuzzyExpression
		{ after(grammarAccess.getPrimaryExpressionAccess().getUnparsedTokensFuzzyExpressionParserRuleCall_4_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassSection__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassSectionAccess().getNameClassKeyword_1_0()); }
		(
			{ before(grammarAccess.getClassSectionAccess().getNameClassKeyword_1_0()); }
			Class_1
			{ after(grammarAccess.getClassSectionAccess().getNameClassKeyword_1_0()); }
		)
		{ after(grammarAccess.getClassSectionAccess().getNameClassKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassSection__ClassPropertyAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassSectionAccess().getClassPropertyPropertyParserRuleCall_2_0()); }
		ruleProperty
		{ after(grammarAccess.getClassSectionAccess().getClassPropertyPropertyParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertySection__NameAssignment_0_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertySectionAccess().getNameAlternatives_0_0_1_0()); }
		(rule__PropertySection__NameAlternatives_0_0_1_0)
		{ after(grammarAccess.getPropertySectionAccess().getNameAlternatives_0_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertySection__PropertiesAssignment_0_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertySectionAccess().getPropertiesPropertyParserRuleCall_0_0_2_0()); }
		ruleProperty
		{ after(grammarAccess.getPropertySectionAccess().getPropertiesPropertyParserRuleCall_0_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertySection__PropertiesAssignment_0_0_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertySectionAccess().getPropertiesPropertyParserRuleCall_0_0_3_1_0()); }
		ruleProperty
		{ after(grammarAccess.getPropertySectionAccess().getPropertiesPropertyParserRuleCall_0_0_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeSection__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeSectionAccess().getNameHasKeyword_1_0()); }
		(
			{ before(grammarAccess.getAttributeSectionAccess().getNameHasKeyword_1_0()); }
			Has
			{ after(grammarAccess.getAttributeSectionAccess().getNameHasKeyword_1_0()); }
		)
		{ after(grammarAccess.getAttributeSectionAccess().getNameHasKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeSection__AttributesAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeSectionAccess().getAttributesAttributeParserRuleCall_2_0()); }
		ruleAttribute
		{ after(grammarAccess.getAttributeSectionAccess().getAttributesAttributeParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeSection__AttributesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeSectionAccess().getAttributesAttributeParserRuleCall_3_0()); }
		ruleAttribute
		{ after(grammarAccess.getAttributeSectionAccess().getAttributesAttributeParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__NameAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyAccess().getNameIDTerminalRuleCall_0_1_0()); }
		RULE_ID
		{ after(grammarAccess.getPropertyAccess().getNameIDTerminalRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__MethodAssignment_0_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyAccess().getMethodMethodParserRuleCall_0_2_0_0()); }
		ruleMethod
		{ after(grammarAccess.getPropertyAccess().getMethodMethodParserRuleCall_0_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__ArrayAssignment_0_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyAccess().getArrayAbstractArrayParserRuleCall_0_2_1_0()); }
		ruleAbstractArray
		{ after(grammarAccess.getPropertyAccess().getArrayAbstractArrayParserRuleCall_0_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__NameAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyAccess().getNameDIRECTIONSTerminalRuleCall_1_1_0()); }
		RULE_DIRECTIONS
		{ after(grammarAccess.getPropertyAccess().getNameDIRECTIONSTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__ObjectReferenceAssignment_1_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyAccess().getObjectReferenceObjectDeclarationCrossReference_1_2_0_0()); }
		(
			{ before(grammarAccess.getPropertyAccess().getObjectReferenceObjectDeclarationIDTerminalRuleCall_1_2_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getPropertyAccess().getObjectReferenceObjectDeclarationIDTerminalRuleCall_1_2_0_0_1()); }
		)
		{ after(grammarAccess.getPropertyAccess().getObjectReferenceObjectDeclarationCrossReference_1_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__ValueAssignment_1_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyAccess().getValuePrimaryParserRuleCall_1_2_1_0()); }
		rulePrimary
		{ after(grammarAccess.getPropertyAccess().getValuePrimaryParserRuleCall_1_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__MethodAssignment_1_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyAccess().getMethodMethodParserRuleCall_1_2_2_0()); }
		ruleMethod
		{ after(grammarAccess.getPropertyAccess().getMethodMethodParserRuleCall_1_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__ArrayAssignment_1_2_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyAccess().getArrayAbstractArrayParserRuleCall_1_2_3_0()); }
		ruleAbstractArray
		{ after(grammarAccess.getPropertyAccess().getArrayAbstractArrayParserRuleCall_1_2_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__ObjectReferencesAssignment_2_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyAccess().getObjectReferencesObjectDeclarationCrossReference_2_2_0_0()); }
		(
			{ before(grammarAccess.getPropertyAccess().getObjectReferencesObjectDeclarationIDTerminalRuleCall_2_2_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getPropertyAccess().getObjectReferencesObjectDeclarationIDTerminalRuleCall_2_2_0_0_1()); }
		)
		{ after(grammarAccess.getPropertyAccess().getObjectReferencesObjectDeclarationCrossReference_2_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__MethodAssignment_2_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyAccess().getMethodMethodParserRuleCall_2_2_1_0()); }
		ruleMethod
		{ after(grammarAccess.getPropertyAccess().getMethodMethodParserRuleCall_2_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__ValueAssignment_2_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyAccess().getValuePrimaryParserRuleCall_2_2_2_0()); }
		rulePrimary
		{ after(grammarAccess.getPropertyAccess().getValuePrimaryParserRuleCall_2_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractArray__ArrayAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAbstractArrayAccess().getArrayPrimaryParserRuleCall_1_0_0()); }
		rulePrimary
		{ after(grammarAccess.getAbstractArrayAccess().getArrayPrimaryParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractArray__ArrayAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAbstractArrayAccess().getArrayPrimaryParserRuleCall_1_1_0()); }
		rulePrimary
		{ after(grammarAccess.getAbstractArrayAccess().getArrayPrimaryParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__FunctionBodyAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodAccess().getFunctionBodyFunctionBodyParserRuleCall_1_0()); }
		ruleFunctionBody
		{ after(grammarAccess.getMethodAccess().getFunctionBodyFunctionBodyParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalFunctionDefinition__FunctionHeaderAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGlobalFunctionDefinitionAccess().getFunctionHeaderFunctionHeaderParserRuleCall_1_0()); }
		ruleFunctionHeader
		{ after(grammarAccess.getGlobalFunctionDefinitionAccess().getFunctionHeaderFunctionHeaderParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalFunctionDefinition__FunctionBodyAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGlobalFunctionDefinitionAccess().getFunctionBodyFunctionBodyParserRuleCall_2_0()); }
		ruleFunctionBody
		{ after(grammarAccess.getGlobalFunctionDefinitionAccess().getFunctionBodyFunctionBodyParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionHeader__VariablesAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionHeaderAccess().getVariablesIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getFunctionHeaderAccess().getVariablesIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__IdAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getIdIDTerminalRuleCall_0_1_0()); }
		RULE_ID
		{ after(grammarAccess.getPrimaryAccess().getIdIDTerminalRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__NumberAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getNumberNumberParserRuleCall_1_0()); }
		ruleNumber
		{ after(grammarAccess.getPrimaryAccess().getNumberNumberParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__StringAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getStringSTRINGTerminalRuleCall_2_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getPrimaryAccess().getStringSTRINGTerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__DirectionAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getDirectionDIRECTIONSTerminalRuleCall_3_1_0()); }
		RULE_DIRECTIONS
		{ after(grammarAccess.getPrimaryAccess().getDirectionDIRECTIONSTerminalRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__HexAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getHexHEXTerminalRuleCall_4_1_0()); }
		RULE_HEX
		{ after(grammarAccess.getPrimaryAccess().getHexHEXTerminalRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__BinaryAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getBinaryBINARYTerminalRuleCall_5_1_0()); }
		RULE_BINARY
		{ after(grammarAccess.getPrimaryAccess().getBinaryBINARYTerminalRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__NegativeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumberAccess().getNegativeHyphenMinusKeyword_1_0()); }
		(
			{ before(grammarAccess.getNumberAccess().getNegativeHyphenMinusKeyword_1_0()); }
			HyphenMinus
			{ after(grammarAccess.getNumberAccess().getNegativeHyphenMinusKeyword_1_0()); }
		)
		{ after(grammarAccess.getNumberAccess().getNegativeHyphenMinusKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumberAccess().getValueINTTerminalRuleCall_2_0()); }
		RULE_INT
		{ after(grammarAccess.getNumberAccess().getValueINTTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__NameAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeAccess().getNameAttributeDeclarationCrossReference_2_0_0()); }
		(
			{ before(grammarAccess.getAttributeAccess().getNameAttributeDeclarationIDTerminalRuleCall_2_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getAttributeAccess().getNameAttributeDeclarationIDTerminalRuleCall_2_0_0_1()); }
		)
		{ after(grammarAccess.getAttributeAccess().getNameAttributeDeclarationCrossReference_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__NameAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeAccess().getNameAttributeDeclarationCrossReference_2_1_0()); }
		(
			{ before(grammarAccess.getAttributeAccess().getNameAttributeDeclarationSTATICTerminalRuleCall_2_1_0_1()); }
			RULE_STATIC
			{ after(grammarAccess.getAttributeAccess().getNameAttributeDeclarationSTATICTerminalRuleCall_2_1_0_1()); }
		)
		{ after(grammarAccess.getAttributeAccess().getNameAttributeDeclarationCrossReference_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}
